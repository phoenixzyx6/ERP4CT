/*
数据结构升级脚本

*/
SET NUMERIC_ROUNDABORT OFF
GO
SET ANSI_PADDING, ANSI_WARNINGS, CONCAT_NULL_YIELDS_NULL, ARITHABORT, QUOTED_IDENTIFIER, ANSI_NULLS ON
GO
IF EXISTS (SELECT * FROM tempdb..sysobjects WHERE id=OBJECT_ID('tempdb..#tmpErrors')) DROP TABLE #tmpErrors
GO
CREATE TABLE #tmpErrors (Error int)
GO
SET XACT_ABORT ON
GO
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
GO
BEGIN TRANSACTION
GO
PRINT N'Dropping extended properties'
GO
EXEC sp_dropextendedproperty N'MS_Description', 'USER', N'dbo', 'TABLE', N'SysFunc', NULL, NULL
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_dropextendedproperty N'MS_Description', 'USER', N'dbo', 'TABLE', N'SysFunc', 'COLUMN', N'AutoID'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_dropextendedproperty N'MS_Description', 'USER', N'dbo', 'TABLE', N'SysFunc', 'COLUMN', N'Builder'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_dropextendedproperty N'MS_Description', 'USER', N'dbo', 'TABLE', N'SysFunc', 'COLUMN', N'BuildTime'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_dropextendedproperty N'MS_Description', 'USER', N'dbo', 'TABLE', N'SysFunc', 'COLUMN', N'ButtonPos'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_dropextendedproperty N'MS_Description', 'USER', N'dbo', 'TABLE', N'SysFunc', 'COLUMN', N'Flag'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_dropextendedproperty N'MS_Description', 'USER', N'dbo', 'TABLE', N'SysFunc', 'COLUMN', N'FuncDesc'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_dropextendedproperty N'MS_Description', 'USER', N'dbo', 'TABLE', N'SysFunc', 'COLUMN', N'FuncName'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_dropextendedproperty N'MS_Description', 'USER', N'dbo', 'TABLE', N'SysFunc', 'COLUMN', N'HandlerFile'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_dropextendedproperty N'MS_Description', 'USER', N'dbo', 'TABLE', N'SysFunc', 'COLUMN', N'HandlerName'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_dropextendedproperty N'MS_Description', 'USER', N'dbo', 'TABLE', N'SysFunc', 'COLUMN', N'Icon'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_dropextendedproperty N'MS_Description', 'USER', N'dbo', 'TABLE', N'SysFunc', 'COLUMN', N'IsButton'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_dropextendedproperty N'MS_Description', 'USER', N'dbo', 'TABLE', N'SysFunc', 'COLUMN', N'IsDisabled'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_dropextendedproperty N'MS_Description', 'USER', N'dbo', 'TABLE', N'SysFunc', 'COLUMN', N'IsLeaf'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_dropextendedproperty N'MS_Description', 'USER', N'dbo', 'TABLE', N'SysFunc', 'COLUMN', N'Lifecycle'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_dropextendedproperty N'MS_Description', 'USER', N'dbo', 'TABLE', N'SysFunc', 'COLUMN', N'Modifier'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_dropextendedproperty N'MS_Description', 'USER', N'dbo', 'TABLE', N'SysFunc', 'COLUMN', N'ModifyTime'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_dropextendedproperty N'MS_Description', 'USER', N'dbo', 'TABLE', N'SysFunc', 'COLUMN', N'OrderNum'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_dropextendedproperty N'MS_Description', 'USER', N'dbo', 'TABLE', N'SysFunc', 'COLUMN', N'ParentID'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_dropextendedproperty N'MS_Description', 'USER', N'dbo', 'TABLE', N'SysFunc', 'COLUMN', N'SysFuncID'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_dropextendedproperty N'MS_Description', 'USER', N'dbo', 'TABLE', N'SysFunc', 'COLUMN', N'URL'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_dropextendedproperty N'MS_Description', 'USER', N'dbo', 'TABLE', N'SysFunc', 'COLUMN', N'Version'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Dropping foreign keys from [dbo].[SysPower]'
GO
ALTER TABLE [dbo].[SysPower] DROP CONSTRAINT [FK_SYSPOWER_SYSPOWER_SYSFUNC]
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Dropping constraints from [dbo].[SysFunc]'
GO
ALTER TABLE [dbo].[SysFunc] DROP CONSTRAINT [PK_SYSFUNC]
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Dropping constraints from [dbo].[ImportInfo2]'
GO
ALTER TABLE [dbo].[ImportInfo2] DROP CONSTRAINT [PK_ImportInfo2]
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Unbinding defaults from columns'
GO
EXEC sp_unbindefault N'[dbo].[SysFunc].[IsLeaf]'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_unbindefault N'[dbo].[SysFunc].[IsButton]'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_unbindefault N'[dbo].[SysFunc].[IsDisabled]'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_unbindefault N'[dbo].[SysFunc].[Version]'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_unbindefault N'[dbo].[SysFunc].[Lifecycle]'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Dropping [dbo].[tmp_Formula0326]'
GO
DROP TABLE [dbo].[tmp_Formula0326]
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Dropping [dbo].[tmp_CPlan0408]'
GO
DROP TABLE [dbo].[tmp_CPlan0408]
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Dropping [dbo].[tmp_CarCard0402]'
GO
DROP TABLE [dbo].[tmp_CarCard0402]
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Dropping [dbo].[tmp_CarCard0302]'
GO
DROP TABLE [dbo].[tmp_CarCard0302]
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Dropping [dbo].[ImportInfo2]'
GO
DROP TABLE [dbo].[ImportInfo2]
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Dropping [dbo].[a]'
GO
DROP TABLE [dbo].[a]
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Altering [dbo].[PriceSetting]'
GO
ALTER TABLE [dbo].[PriceSetting] ADD
[TranPrice] [xmoney] NULL
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Altering [dbo].[ContractItems]'
GO
ALTER TABLE [dbo].[ContractItems] ADD
[TranPrice] [xmoney] NULL CONSTRAINT [DF__ContractI__TranP__7F8BD5E2] DEFAULT ((0))
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Creating [dbo].[GetConTranPrice]'
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS OFF
GO

-- User Defined Function

Create FUNCTION [dbo].[GetConTranPrice]
(
	@ContractID varchar(30)
	,@ConStrength varchar(30)
	,@ProduceDate varchar(30)
)
RETURNS decimal(18, 2)
AS
BEGIN
DECLARE @price decimal(18, 2) 
DECLARE @count int 
DECLARE @tagint int

set @tagint = 1

select @count=count(*)
from ContractItems left join PriceSetting on ContractItems.ContractItemsID=PriceSetting.ContractItemsID  
where ContractItems.ContractID=@ContractID and ContractItems.ConStrength=@ConStrength



if @count >=1
		begin
		while @tagint <= @count
			begin
			if @ProduceDate > (select ChangeTime from 
				(select ROW_NUMBER() over(order by PriceSetting.ChangeTime desc) as RowID,ChangeTime
				from ContractItems left join PriceSetting on ContractItems.ContractItemsID=PriceSetting.ContractItemsID  
				where ContractItems.ContractID=@ContractID and ContractItems.ConStrength=@ConStrength) TableA 
				where TableA.RowID=@tagint)
				begin
				select @price=price from 
				(select ROW_NUMBER() over(order by PriceSetting.ChangeTime desc) as RowID,PriceSetting.TranPrice as price
				from ContractItems left join PriceSetting on ContractItems.ContractItemsID=PriceSetting.ContractItemsID  
				where ContractItems.ContractID=@ContractID and ContractItems.ConStrength=@ConStrength) TableA 
				where TableA.RowID=@tagint
				break
				end
			set @tagint = @tagint+1
			end
		end
if @price is null
		begin
		select @price=TranPrice
		from ContractItems
		where ContractItems.ContractID=@ContractID and ContractItems.ConStrength=@ConStrength
		end


return @price

END

GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Altering [dbo].[Contract]'
GO
ALTER TABLE [dbo].[Contract] ADD
[TotalComeMoney] [decimal] (18, 2) NULL CONSTRAINT [DF__Contract__TotalC__483BA0F8] DEFAULT ((0)),
[PayMoney] [decimal] (18, 2) NULL CONSTRAINT [DF__Contract__PayMon__492FC531] DEFAULT ((0)),
[Balance] [decimal] (18, 2) NULL CONSTRAINT [DF__Contract__Balanc__4A23E96A] DEFAULT ((0)),
[CreditMoney] [decimal] (18, 2) NULL CONSTRAINT [DF__Contract__Credit__4B180DA3] DEFAULT ((0)),
[BusinessType] [varchar] (50) COLLATE Chinese_PRC_CI_AS NULL,
[JsCoefficient] [decimal] (18, 1) NULL,
[QyCoefficient] [decimal] (18, 1) NULL,
[HkCoefficient] [decimal] (18, 1) NULL,
[DeductPerPrice] [decimal] (18, 2) NULL
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Altering [dbo].[ShippingDocument]'
GO
ALTER TABLE [dbo].[ShippingDocument] ADD
[IsJS] [bit] NULL CONSTRAINT [DF__ShippingDo__IsJS__6B84DD35] DEFAULT ((0))
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Altering [dbo].[Car]'
GO
ALTER TABLE [dbo].[Car] ADD
[CarVINo] [varchar] (30) COLLATE Chinese_PRC_CI_AS NULL,
[RegDate] [datetime] NULL,
[IssuingDate] [datetime] NULL,
[Insurance] [varchar] (30) COLLATE Chinese_PRC_CI_AS NULL,
[OperCertificate] [varchar] (50) COLLATE Chinese_PRC_CI_AS NULL
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Altering [dbo].[sp_rpt_PumpInto]'
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
ALTER PROCEDURE [dbo].[sp_rpt_PumpInto] 
( 
	@BeginDate VARCHAR(20),
	@EndDate VARCHAR(20) ,
	@type varchar(1)
)
AS
BEGIN	 
	SET NOCOUNT ON;

 
--AT1剩退料处理/转发 AT2剩退料处理/报废
--RT0整车转发 RT1剩退类别/剩料 RT2退料
if @type=1 --生产方量
begin
select g.projectname,g.pumpname,sum(g.sendcube) sendcube from
(select projectname,pumpname,
--SendCube-transfercube-scrapcube-othercube+remaincube sendcube
sendcube
from shippingdocument join car on car.carid=shippingdocument.pumpname
where  shippingdocument.produceDate>=@BeginDate and shippingdocument.produceDate<=@EndDate 
and car.cartypeid='CT2' and car.isused='1' and car.BelongTo!='外车' 
and shippingdocument.IsEffective=1 AND ConStrength<>'砂浆'
) g
group by g.projectname,g.pumpname
order by g.projectname,g.pumpname
end

if @type=2 --签收方量
begin
select g.projectname,g.pumpname,sum(g.sendcube) sendcube from
(select projectname,pumpname,
--(case when shippingdocument.XuCube IS null OR ShippingDocument.XuCube=0 then ShippingDocument.SignInCube else ShippingDocument.XuCube end)-transfercube-scrapcube-othercube+remaincube sendcube
(case when shippingdocument.XuCube IS null OR ShippingDocument.XuCube=0 then ShippingDocument.SignInCube else ShippingDocument.XuCube end) sendcube
from shippingdocument join car on car.carid=shippingdocument.pumpname
where  shippingdocument.produceDate>=@BeginDate and shippingdocument.produceDate<=@EndDate 
and car.cartypeid='CT2' and car.isused='1' and car.BelongTo!='外车' 
and shippingdocument.IsEffective=1 AND ConStrength<>'砂浆'
) g
group by g.projectname,g.pumpname
order by g.projectname,g.pumpname
end

SET NOCOUNT OFF;
END

GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Altering [dbo].[sp_rpt_castmode]'
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS OFF
GO
-- Stored Procedure

ALTER PROCEDURE [dbo].[sp_rpt_castmode] 
( 
	@BeginDate nvarchar(20),
	@EndDate  nvarchar(20),
	@TYPE nvarchar(20)
)
AS
BEGIN	 

IF @TYPE=1 --生产方量
  begin 
    SELECT * FROM (
	select 1 AS projectid,projectname,castmode,sum(sendcube) sendcube,'0' M,'0' MM 
	from shippingdocument
	where shippingdocument.produceDate>=@BeginDate and shippingdocument.produceDate<=@EndDate 
	and shippingdocument.IsEffective=1 AND CastMode IS NOT NULL AND isnull(castmode,'')<>''
	AND ConStrength<>'砂浆'
	group by projectname,castmode 
	) a 
	--UNION ALL
	--select '9999' projectid,'供应小计' projectname,CastMode,sum(sendcube) sendcube,M,MM  
	--from
	--(

	--select project.projectid,project.projectname,shippingdocument.CastMode,sum(case when shippingdocument.XuCube IS null OR ShippingDocument.XuCube=0 then ShippingDocument.SignInCube else ShippingDocument.XuCube end) sendcube,'0' M,'1' MM  
	--from project join producetasks
	--on producetasks.projectid=project.projectid join shippingdocument 
	--on shippingdocument.taskid=producetasks.taskid
	--where shippingdocument.produceDate>=@BeginDate and shippingdocument.produceDate<=@EndDate  and shippingdocument.IsEffective=1
	--group by project.projectid,project.projectname,shippingdocument.CastMode
	
	--) a
	--group by CastMode,M,MM

	--UNION ALL

	--select '999999' projectid,'代我司搅拌量' projectname,d.CastMode,sum(d.sendcube) sendcube,d.M,d.MM 
	--from
	--(select project.projectid,project.projectname,ShippingDocument.CastMode,sum(InsteadProduct.productNum) sendcube,'0' M,'2' MM 
	
	--from project 
	--join producetasks on producetasks.projectid=project.projectid 
	--join InsteadProduct on InsteadProduct.taskid=producetasks.taskid
	--JOIN ShippingDocument ON ShippingDocument.TaskID=ProduceTasks.TaskID
	--where InsteadProduct.ProductTime>=@BeginDate and InsteadProduct.ProductTime<=@EndDate 
	--group by project.projectid,project.projectname,ShippingDocument.CastMode,InsteadProduct.ProductName

	--) d
	--group by d.CastMode,d.M,d.MM

	--union all

	--select '9999999' projectid,'我司送出量' projectname,e.CastMode,sum(e.sendcube) sendcube,e.M,e.MM
 --   from
	--(select project.projectid,project.projectname,ShippingDocument.CastMode,sum(case when shippingdocument.XuCube IS null OR ShippingDocument.XuCube=0 then ShippingDocument.SignInCube else ShippingDocument.XuCube end) sendcube,'0' M,'4' MM 
	--from project join producetasks
	--on producetasks.projectid=project.projectid join shippingdocument 
	--on shippingdocument.taskid=producetasks.taskid
	--where shippingdocument.produceDate>=@BeginDate and shippingdocument.produceDate<=@EndDate  and shippingdocument.IsEffective=1
	--group by project.projectid,project.projectname,shippingdocument.CastMode
	
 --   ) e
	--group by e.CastMode,e.M,e.MM 

  END
IF @TYPE=2 --签收方量
  begin 
	select projectname,castmode,sum(SignInCube) sendcube from shippingdocument
	where shippingdocument.produceDate>=@BeginDate and shippingdocument.produceDate<=@EndDate 
	and shippingdocument.IsEffective=1 AND ConStrength<>'砂浆'
	group by projectname,castmode
	order by projectname,castmode
  END

SET NOCOUNT OFF;
END

-- exec [sp_rpt_castmode] '2016-06-01 00:00','2016-09-01 00:00','1'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Creating [dbo].[sp_rpt_CarInfo]'
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO


-- =============================================
-- Author:		李周良
-- Create date: 2016-09-26
-- Description:	车辆信息表
-- =============================================
CREATE PROCEDURE [dbo].[sp_rpt_CarInfo] 
	@CarNo VARCHAR(50)
AS
BEGIN
	SET NOCOUNT ON

	IF @CarNo IS NULL
		select car.*,Dic.DicName CarType
		from car LEFT JOIN dic ON car.CarTypeID=dic.TreeCode 
		WHERE DicID LIKE '%cartype%'
	ELSE
	    select car.*,Dic.DicName CarType
		from car LEFT JOIN dic ON car.CarTypeID=dic.TreeCode 
		WHERE DicID LIKE '%cartype%' AND carno LIKE '%'+@CarNo+'%'

END


GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Altering [dbo].[StuffIn]'
GO
ALTER TABLE [dbo].[StuffIn] ADD
[isMonth] [bit] NULL
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Refreshing [dbo].[View_ProductRecordItems ]'
GO
EXEC sp_refreshview N'[dbo].[View_ProductRecordItems ]'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Altering [dbo].[sp_rpt_LinkMan]'
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS OFF
GO
-- Stored Procedure

ALTER PROCEDURE [dbo].[sp_rpt_LinkMan] 
( 
	@BeginDate VARCHAR(20),
	@EndDate VARCHAR(20) 
)
AS
BEGIN	 
	SET NOCOUNT ON;
	--DECLARE @StartDateTime VARCHAR(30) ,
 --       @EndDateTime VARCHAR(30) ,
 --       @ChangeTime VARCHAR(20),
 --       @ChangeDay VARCHAR(10),
 --       @StartDateYear VARCHAR(30)
 --   SELECT  @ChangeTime = ConfigValue
 --   FROM    dbo.SysConfig
 --   WHERE   ConfigName = 'ChangeTime'
 --   SELECT  @ChangeDay = ConfigValue
 --   FROM    dbo.SysConfig
 --   WHERE   ConfigName = 'ChangeDay'
 --   IF @ChangeTime IS NULL 
 --       SET @ChangeTime = '00:00'
 --   IF @ChangeDay IS NULL
 --       SET @ChangeDay='01'
 --   SET @EndDateTime =  substring(@Month,0,5)+'-'+substring(@Month,5,2)+'-'+ @ChangeDay + ' ' + @ChangeTime 
 --   SET @StartDateTime =convert(varchar(30),DATEADD(m, -1,convert(datetime,@EndDateTime)+1),23)+' '+@ChangeTime

--declare @BeginDate varchar(20),@EndDate VARCHAR(20)
--set @BeginDate='2016-01-01'
--set @EndDate='2016-08-01'

--select CustomerPlan.LinkMan,CustomerPlan.ProjectName,project.paytype,
--sum(case when shippingdocument.XuCube IS null OR ShippingDocument.XuCube=0 then ShippingDocument.SignInCube else ShippingDocument.XuCube end) sendcube 
--from CustomerPlan 
--join shippingdocument on CustomerPlan.taskid=shippingdocument.taskid 
--join project on project.projectid=shippingdocument.projectid
--where shippingdocument.produceDate>=@BeginDate and shippingdocument.produceDate<=@EndDate 
--and shippingdocument.IsEffective=1 
--and CustomerPlan.LinkMan is not null and shippingdocument.linkman='梁健'
--group by CustomerPlan.LinkMan,CustomerPlan.ProjectName,project.paytype
--order by CustomerPlan.LinkMan,CustomerPlan.ProjectName


--select * from(
--select case when LinkMan is null then '未知' else linkman end LinkMan,ProjectName,'' as paytype,
--sum(case when shippingdocument.XuCube IS null OR ShippingDocument.XuCube=0 then ShippingDocument.SignInCube else ShippingDocument.XuCube end) sendcube  
--from shippingdocument
--where LinkMan is not null and linkman<>'' 
--and shippingdocument.produceDate>=@BeginDate and shippingdocument.produceDate<=@EndDate 

--group by LinkMan,ProjectName
--) a 

SELECT LinkMan,ProjectName,paytype,SUM(fl1) AS sendcube,SUM(fl2) AS sendcube2 FROM(
	SELECT 
	case when LinkMan is NULL OR LinkMan='' then '未知' else linkman end LinkMan,
	case when ProjectName is NULL OR ProjectName='' then '未知' else ProjectName END ProjectName,
	'' AS paytype,
	CASE WHEN ConStrength<>'砂浆' THEN 
	sum(case when shippingdocument.XuCube IS null OR ShippingDocument.XuCube=0 then ShippingDocument.SignInCube else ShippingDocument.XuCube end)  
	 ELSE 0 END AS fl1,
	CASE WHEN ConStrength='砂浆' THEN 
	sum(case when shippingdocument.XuCube IS null OR ShippingDocument.XuCube=0 then ShippingDocument.SignInCube else ShippingDocument.XuCube end) 
	 ELSE 0 END AS fl2
	FROM ShippingDocument
	where LinkMan is not null and linkman<>''  AND ShippingDocument.IsEffective=1
	and shippingdocument.produceDate>=@BeginDate and shippingdocument.produceDate<=@EndDate 
	group by LinkMan,ProjectName,ConStrength
) b
GROUP BY b.LinkMan,b.ProjectName,paytype

SET NOCOUNT OFF;

END

-- exec [sp_rpt_LinkMan] '2016-01-01','2016-08-01'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Altering [dbo].[sp_rpt_kpjd]'
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
ALTER PROC [dbo].[sp_rpt_kpjd]
 (
	@ShipDocId varchar(50)
 )
 AS
 SET NOCOUNT ON 
 DECLARE @pbid VARCHAR(50)
 SELECT @pbid = ConsMixpropID
 FROM dbo.ShippingDocument WHERE ShipDocID=@ShipDocId
 
 CREATE TABLE tmp_KPJD(
 C0 NVARCHAR(255),
	C1 NVARCHAR(255),
	C2 NVARCHAR(255),
	C3 NVARCHAR(255),
	C4 NVARCHAR(255),
	C5 NVARCHAR(255),
	C6 NVARCHAR(255),
	C7 NVARCHAR(255),
	C8 NVARCHAR(255),
	C9 NVARCHAR(255),
	C10 NVARCHAR(255),
	C11 NVARCHAR(255),
	C12 NVARCHAR(255),
	C13 NVARCHAR(255),
	C14 NVARCHAR(255),
	C15 NVARCHAR(255)
 )

SELECT IDENTITY(INT, 1,1) AS id ,si.StuffName, Amount, Sizex
into tmp_stufflist
FROM dbo.ConsMixpropItems cmi
	INNER JOIN dbo.Silo s
	ON cmi.SiloID = s.SiloID
	INNER JOIN dbo.StuffInfo si
	ON s.StuffID = si.StuffID
	 WHERE ConsMixpropID=@pbid
	 AND Amount > 0 
	 ORDER BY si.OrderNum
ALTER TABLE tmp_stufflist ADD col VARCHAR(10)
UPDATE tmp_stufflist SET col = 'C' + CAST(id AS varchar(10))

--标题
DECLARE @TITLE_JDXM NVARCHAR(255),@TITLE_CJCD NVARCHAR(255),@TITLE_GUIGE NVARCHAR(255),@TITLE_SGPB NVARCHAR(255),@TITLE_ERRORRATE NVARCHAR(255)
SELECT @TITLE_JDXM = '鉴定项目',
@TITLE_CJCD='厂家,产地',
@TITLE_GUIGE='规格,型号',
@TITLE_SGPB = '施工配比值(kg/ｍ3)',
@TITLE_ERRORRATE = '误差值'

--头三行,材料名,厂家,规格,配比值
INSERT INTO tmp_KPJD(C0) VALUES(@TITLE_JDXM)
INSERT INTO tmp_KPJD(C0) VALUES(@TITLE_CJCD)
INSERT INTO tmp_KPJD(C0) VALUES(@TITLE_GUIGE)
INSERT INTO tmp_KPJD(C0) VALUES(@TITLE_SGPB) 

DECLARE @sqlstuff NVARCHAR(4000),@sqlpb NVARCHAR(4000), @sqlgg NVARCHAR(4000)
SELECT @sqlstuff = '', @sqlpb = '',@sqlgg ='' 

SELECT @sqlstuff = @sqlstuff + ' ' + col + ' = ''' + StuffName + ''',' ,
@sqlpb = @sqlpb + ' ' + col + ' = ''' + REPLACE(CAST(Amount AS VARCHAR(10)),'.00','') + ''',',
@sqlgg = @sqlgg  + ' ' + col + ' = ''' + ISNULL(Sizex,'') + ''','
FROM tmp_stufflist 

SELECT @sqlstuff = 'Update tmp_KPJD SET ' + SUBSTRING(@sqlstuff,0, LEN(@sqlstuff)-1) + ''' WHERE C0='''+@TITLE_JDXM +''''
+ ';Update tmp_KPJD SET ' + SUBSTRING(@sqlpb,0, LEN(@sqlpb)-1) + ''' WHERE C0='''+@TITLE_SGPB +''''
+ ';Update tmp_KPJD SET ' + SUBSTRING(@sqlgg,0, LEN(@sqlgg)-1) + ''' WHERE C0='''+@TITLE_GUIGE +''''
EXEC(@sqlstuff); 

--每盘插入一条记录
INSERT INTO tmp_KPJD (C0)
SELECT ProductRecordID FROM dbo.ProductRecord WHERE ShipDocID=@ShipDocId
--插入误差记录
INSERT INTO tmp_KPJD(C0) VALUES(@TITLE_ERRORRATE)

DECLARE @sql2 NVARCHAR(4000),@sqlerror NVARCHAR(4000)
SELECT  @sql2 = '' ,@sqlerror=''
SELECT @sql2=@sql2+'Update tmp_KPJD set ' +col+ '=' + REPLACE(CAST(ActualAmount AS VARCHAR(10)),'.00','') + ' WHERE C0='''+ProductRecordID + ''';'
 FROM (
SELECT  ProductRecordID, pri.StuffName, ActualAmount, ErrorValue FROM dbo.ProductRecordItems pri
	INNER JOIN dbo.StuffInfo si
	ON pri.StuffID = si.StuffID
	 WHERE ProductRecordID IN (SELECT ProductRecordID FROM dbo.ProductRecord WHERE ShipDocID=@ShipDocId)
	AND ActualAmount>0 
)a
INNER JOIN tmp_stufflist sl
ON a.StuffName = sl.stuffname 
exec(@sql2)

--@sqlerror = @sqlerror + 'Update tmp_KPJD set C' +CAST(id AS VARCHAR(10))+ '=C' +CAST(id AS VARCHAR(10))+' + '+ CAST(ErrorValue AS VARCHAR(10)) + ' WHERE C0=''误差值'';'
SELECT @sqlerror = @sqlerror  +' '+ col +'=' + CAST(ErrorValue AS VARCHAR(10)) +','
 FROM (
SELECT pri.StuffName,cast(avg(ErrorValue) as decimal(4,2)) AS ErrorValue FROM dbo.ProductRecordItems pri
	INNER JOIN dbo.StuffInfo si
	ON pri.StuffID = si.StuffID
	 WHERE ProductRecordID IN (SELECT ProductRecordID FROM dbo.ProductRecord WHERE ShipDocID=@ShipDocId)
	AND ActualAmount>0 
	GROUP BY  pri.StuffName) a
	INNER JOIN tmp_stufflist sl
	ON a.StuffName = sl.stuffname
SET @sqlerror = 'Update tmp_KPJD set ' + SUBSTRING(@sqlerror, 0, LEN(@sqlerror) -1) + ' WHERE C0='''+@TITLE_ERRORRATE+''';'
exec(@sqlerror)

UPDATE tmp_KPJD SET C0 = '配料值' WHERE C0 LIKE '00%'
SELECT *, ConsMixpropId AS BetonFormula FROM(
SELECT * FROM dbo.ShippingDocument WHERE ShipDocID=@ShipDocId) a
INNER JOIN (
SELECT * FROM tmp_KPJD) b
ON 1=1

DROP TABLE tmp_KPJD
DROP TABLE tmp_stufflist
SET NOCOUNT OFF

--  exec sp_rpt_kpjd '54646'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Refreshing [dbo].[view_con_stuff_type]'
GO
EXEC sp_refreshview N'[dbo].[view_con_stuff_type]'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Refreshing [dbo].[view_ConsMixPropItems]'
GO
EXEC sp_refreshview N'[dbo].[view_ConsMixPropItems]'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Altering [dbo].[TZRalation]'
GO
ALTER TABLE [dbo].[TZRalation] ADD
[TzRalationFlag] [varchar] (100) COLLATE Chinese_PRC_CI_AS NULL
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Refreshing [dbo].[View_StuffIn]'
GO
EXEC sp_refreshview N'[dbo].[View_StuffIn]'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Refreshing [dbo].[MetageStuffIn]'
GO
EXEC sp_refreshview N'[dbo].[MetageStuffIn]'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Creating [dbo].[GetConAddPrice]'
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS OFF
GO
-- User Defined Function

Create FUNCTION [dbo].[GetConAddPrice]
(
	@ContractID varchar(30)
	,@ConStrength varchar(30)
	,@ProduceDate varchar(30)
)
RETURNS decimal(18, 2)
AS
BEGIN
DECLARE @price decimal(18, 2) 
DECLARE @count int 
DECLARE @tagint int

set @tagint = 1

select @count=count(*)
from ContractItems left join PriceSetting on ContractItems.ContractItemsID=PriceSetting.ContractItemsID  
where ContractItems.ContractID=@ContractID and ContractItems.ConStrength=@ConStrength



if @count >=1
		begin
		while @tagint <= @count
			begin
			if @ProduceDate > (select ChangeTime from 
				(select ROW_NUMBER() over(order by PriceSetting.ChangeTime desc) as RowID,ChangeTime
				from ContractItems left join PriceSetting on ContractItems.ContractItemsID=PriceSetting.ContractItemsID  
				where ContractItems.ContractID=@ContractID and ContractItems.ConStrength=@ConStrength) TableA 
				where TableA.RowID=@tagint)
				begin
				select @price=price from 
				(select ROW_NUMBER() over(order by PriceSetting.ChangeTime desc) as RowID,PriceSetting.PumpCost as price
				from ContractItems left join PriceSetting on ContractItems.ContractItemsID=PriceSetting.ContractItemsID  
				where ContractItems.ContractID=@ContractID and ContractItems.ConStrength=@ConStrength) TableA 
				where TableA.RowID=@tagint
				break
				end
			set @tagint = @tagint+1
			end
		end
if @price is null
		begin
		select @price=PumpCost
		from ContractItems
		where ContractItems.ContractID=@ContractID and ContractItems.ConStrength=@ConStrength
		end


return @price

END
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Creating [dbo].[GetContractMoneyMove]'
GO
-- User Defined Function

create FUNCTION [dbo].[GetContractMoneyMove]
(
	@ContractID varchar(30)
	,@date varchar(30)
)
RETURNS decimal(18, 2)
AS
BEGIN
DECLARE @money decimal(18, 2)

select @money=Sum(signincube*(dbo.getConAddPrice(contractid,constrength,producedate)+dbo.GetConPrice(contractid,constrength,producedate))) from shippingdocument where producedate<@date and IsEffective=1  and ContractID=@ContractID

return @money

END
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Creating [dbo].[ContractProduct]'
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE TABLE [dbo].[ContractProduct]
(
[ID] [serialnumber] NOT NULL IDENTITY(1, 1),
[ContractID] [define] NOT NULL,
[ProductDate] [datetime] NULL,
[ProductMoney] [xmoney] NULL,
[Remark] [nvarchar] (50) COLLATE Chinese_PRC_CI_AS NULL,
[Builder] [names] NULL,
[BuildTime] [dt] NULL,
[Modifier] [names] NULL,
[ModifyTime] [dt] NULL,
[Version] [version] NULL,
[Lifecycle] [status] NULL,
[ProductType] [nvarchar] (50) COLLATE Chinese_PRC_CI_AS NULL,
[BalanceMoney] [decimal] (18, 2) NULL CONSTRAINT [DF_ContractProduct_BalanceMoney] DEFAULT ((0))
)
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Creating primary key [PK_ContractProduct] on [dbo].[ContractProduct]'
GO
ALTER TABLE [dbo].[ContractProduct] ADD CONSTRAINT [PK_ContractProduct] PRIMARY KEY CLUSTERED  ([ID])
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Altering [dbo].[sp_rpt_except_cartime]'
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS OFF
GO
/****** Object:  Stored Procedure dbo.sp_rpt_except_cartime    Script Date: 2012-6-5 9:12:05 ******/

ALTER PROC [dbo].[sp_rpt_except_cartime]
(--车辆回厂异常表
	@BeginDate varchar(20),
	@EndDate varchar(20)
)
AS
SET NOCOUNT ON   
DECLARE @HOURINTER decimal(5,2)
SELECT  @HOURINTER = ConfigValue FROM    dbo.SysConfig 
WHERE   ConfigName = 'HourInterval'
IF @HOURINTER IS NULL  SET @HOURINTER = 120 --默认2小时

SELECT 
ShippingDocument.ShipDocID,CustName,ProjectName,ParCube,
CarID,Driver,
ProductRecord.BuildTime,ArriveTime AS ArriveTime,
DateDiff(MINUTE,ProductRecord.BuildTime,ISNULL(ArriveTime,GETDATE())) as iMINUTE,CastMode

FROM ShippingDocument 
LEFT JOIN ProductRecord ON ShippingDocument.ShipDocID=ProductRecord.ShipDocID AND ProductRecord.PotTimes=1
WHERE DateDiff(MINUTE,ShippingDocument.DeliveryTime,ISNULL(ArriveTime,GETDATE()))>@HOURINTER  AND ProductRecord.BuildTime BETWEEN @BeginDate AND @EndDate


SET NOCOUNT OFF
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Altering [dbo].[SupplyInfo]'
GO
ALTER TABLE [dbo].[SupplyInfo] ADD
[PyCode] [varchar] (50) COLLATE Chinese_PRC_CI_AS NULL
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Creating [dbo].[MonthAccount]'
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE TABLE [dbo].[MonthAccount]
(
[MonthAccountId] [int] NOT NULL IDENTITY(1, 1),
[Month] [varchar] (50) COLLATE Chinese_PRC_CI_AS NULL,
[BeginDate] [datetime] NULL,
[EndDate] [datetime] NULL,
[SiloId] [define] NULL,
[StuffId] [define] NULL,
[CurrentCount] [decimal] (18, 2) NULL,
[CurrentAmount] [decimal] (18, 2) NULL,
[Builder] [varchar] (50) COLLATE Chinese_PRC_CI_AS NULL,
[BuildTime] [datetime] NULL,
[Version] [version] NULL,
[Lifecycle] [status] NULL,
[Meno] [varchar] (350) COLLATE Chinese_PRC_CI_AS NULL,
[IsUse] [yeorno] NULL,
[ID] [int] NULL
)
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Creating primary key [PK_MonthAccount] on [dbo].[MonthAccount]'
GO
ALTER TABLE [dbo].[MonthAccount] ADD CONSTRAINT [PK_MonthAccount] PRIMARY KEY CLUSTERED  ([MonthAccountId])
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Creating [dbo].[sp_MonthAccount]'
GO

CREATE PROC [dbo].[sp_MonthAccount](
	@month VARCHAR(30)
)
AS
SET NOCOUNT ON
BEGIN

    SET NOCOUNT ON;
	DECLARE @StartDateTime VARCHAR(30) ,
        @EndDateTime DATETIME ,
        
        @_StartDateTime VARCHAR(30) ,
        @_EndDateTime VARCHAR(30) ,
        @_LastStartDateTime VARCHAR(30) ,
        @_LastEndDateTime VARCHAR(30) ,
        
        @ChangeTime VARCHAR(20),
        @ChangeDay VARCHAR(10),
        @LastDate varchar(10),
        @LastDate1 varchar(10),
        @date nvarchar(20),@price decimal(18, 2),@pricelast decimal(18, 2)
        --,@Month nvarchar(10)
        --set @Month='201603'
    SELECT  @ChangeTime = ConfigValue
    FROM    dbo.SysConfig
    WHERE   ConfigName = 'ChangeTime'
    SELECT  @ChangeDay = ConfigValue
    FROM    dbo.SysConfig
    WHERE   ConfigName = 'ChangeDay'
    IF @ChangeTime IS NULL 
        SET @ChangeTime = '00:00'
    IF @ChangeDay IS NULL
        SET @ChangeDay='01'
    SET @EndDateTime =  substring(@Month,0,5)+'-'+substring(@Month,5,2)+'-'+ @ChangeDay + ' ' + @ChangeTime 
    --SET @StartDateTime =convert(varchar(30),DATEADD(m, -1,convert(datetime,@EndDateTime)),23)+' 00:00:00.000'
    SET @StartDateTime =convert(varchar(30),DATEADD(m, -1,convert(datetime,@EndDateTime)),23)+' '+@ChangeTime
    
    SET @LastDate=convert(varchar(10),(convert(datetime,@StartDateTime)-1),23)
    SET @LastDate1=convert(varchar(10),(convert(datetime,@EndDateTime)+1),23)
    
    set @date=convert(varchar(10),(convert(datetime,@StartDateTime)),23)
    
    --本月时间
    set @_StartDateTime=@StartDateTime 
    set @_EndDateTime=convert(varchar(30),@EndDateTime,23)+' '+@ChangeTime 

    --上月时间
    set @_LastStartDateTime=convert(varchar(30),DATEADD(m, -1,convert(datetime,@_StartDateTime)),23)+' '+@ChangeTime 
    set @_LastEndDateTime=@_StartDateTime   

    (select a.*
--本月调整盈亏后实际消耗
,a.usecontent-a.profitandloss actionnum
,a.usecontentMoney-a.profitandlossMoney actionmoney 
--本月结存
,a.beforecontent+a.contentin-a.usecontent jiecun
,a.beforecontentMoney+a.contentinMoney-a.usecontentMoney jiecunmoney into #temp
from (select '主料' a1,typename,stuffname

--,convert(varchar(40),price) price
--,convert(varchar(40),(select top 1 isnull(s.price,0) from stuffinfoprice s where s.stuffid=stuffid order by case when s.year1=convert(int,substring(@date,0,5)) then 9999 else s.year1 end  desc,case when s.month1=convert(int,substring(@date,6,2)) then 9999 else s.month1 end  desc))
,convert(nvarchar(20),dbo.GetStuffPrice(@_StartDateTime,@_EndDateTime,stuffid))
price
	
,stuffid,typeid
--上月结存
,isnull((select content from importinfoall where importinfoall.ismaintype=1 and importinfoall.[date]=@LastDate and ifa.stuffid=importinfoall.stuffid),0) beforecontent
,isnull((select content from importinfoall where importinfoall.ismaintype=1 and importinfoall.[date]=@LastDate and ifa.stuffid=importinfoall.stuffid),0)
* dbo.GetStuffPrice(@_LastStartDateTime,@_LastEndDateTime,ifa.stuffid) beforecontentmoney
--本月购进
--,sum(isnull(ifa.contentin,0)) contentin
--,sum(isnull(ifa.contentinMoney,0)) contentinMoney
,dbo.GetStuffinNum(@StartDateTime,@EndDateTime,ifa.stuffid)/1000 contentin
,dbo.GetStuffinMoney(@StartDateTime,@EndDateTime,ifa.stuffid) contentinMoney

--本月耗用
,sum(isnull(ifa.usecontent,0)) usecontent
,sum(isnull(ifa.usecontent,0))
* dbo.GetStuffPrice(@_StartDateTime,@_EndDateTime,ifa.stuffid) usecontentMoney
--本月盘盈亏
,sum(isnull(ifa.profitandloss,0)) profitandloss
,sum(isnull(ifa.profitandloss,0))
* dbo.GetStuffPrice(@_StartDateTime,@_EndDateTime,ifa.stuffid) profitandlossMoney
--本月实际库存
,isnull((select content from importinfoall where  importinfoall.ismaintype=1 and importinfoall.[date]=convert(varchar(10),convert(datetime,@LastDate1),23) and ifa.stuffid=importinfoall.stuffid),0) contentcurrent
,isnull((select content from importinfoall where importinfoall.ismaintype=1 and importinfoall.[date]=convert(varchar(10),convert(datetime,@LastDate1),23) and ifa.stuffid=importinfoall.stuffid),0)
* dbo.GetStuffPrice(@_StartDateTime,@_EndDateTime,ifa.stuffid) contentmoneycurrent
from importinfoall ifa where ifa.ismaintype=1 and ifa.[date]+' 00:00:00'>=@StartDateTime and ifa.[date]+' 00:00:00'<@EndDateTime 
group by typename,stuffname,stuffid,typeid
) a )


union 

(select b.*
--本月调整盈亏后实际消耗
,b.usecontent-b.profitandloss actionnum
,b.usecontentMoney-b.profitandlossMoney actionmoney 
--本月结存
,b.beforecontent+b.contentin-b.usecontent jiecun
,b.beforecontentMoney+b.contentinMoney-b.usecontentMoney jiecunmoney
from (select '辅料' a1,typename,' ' stuffname,' ' price,' ' stuffid,typeid
--上月结存
,isnull((select sum(content) from importinfoall where importinfoall.ismaintype=0 and importinfoall.[date]=@LastDate and ifa.typeid=importinfoall.typeid),0) beforecontent
,isnull((select sum(contentmoney) from importinfoall where importinfoall.ismaintype=0 and importinfoall.[date]=@LastDate and ifa.typeid=importinfoall.typeid),0) beforecontentmoney
--本月购进
,sum(isnull(ifa.contentin,0)) contentin
,sum(isnull(ifa.contentinMoney,0)) contentinMoney
--本月耗用
,sum(isnull(ifa.usecontent,0)) usecontent
,sum(isnull(ifa.usecontentMoney,0)) usecontentMoney
--本月盘盈亏
,sum(isnull(ifa.profitandloss,0)) profitandloss
,sum(isnull(ifa.profitandlossMoney,0)) profitandlossMoney
--本月实际库存
,isnull((select sum(content) from importinfoall where importinfoall.ismaintype=0 and importinfoall.[date]=convert(varchar(10),convert(datetime,@LastDate1),23) and ifa.typeid=importinfoall.typeid),0) contentcurrent
,isnull((select sum(contentmoney) from importinfoall where importinfoall.ismaintype=0 and importinfoall.[date]=convert(varchar(10),convert(datetime,@LastDate1),23) and ifa.typeid=importinfoall.typeid),0) contentmoneycurrent
from importinfoall ifa where ifa.ismaintype=0 and ifa.[date]+' 00:00:00'>=@StartDateTime and ifa.[date]+' 00:00:00'<@EndDateTime
group by typename,typeid
) b ) 

     INSERT INTO [MonthAccount]
           ([Month]
           ,[BeginDate]
           ,[EndDate]
           ,[StuffId]
           ,[CurrentCount]
           ,[CurrentAmount]
           ,[Builder]
           ,[BuildTime])
     select @month,'','',stuffid,jiecun,jiecunmoney,'',getdate() from #temp
     where a1='主料'
     
     ---更新入库单据记录为月结     
     update stuffin set ismonth=1 where buildtime>=@_StartDateTime and buildtime<@_EndDateTime
     return 
 END
SET NOCOUNT OFF

drop table #temp

--exec [sp_MonthAccount] '201606'


GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Altering [dbo].[sp_rpt_GoodOut]'
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS OFF
GO
/****** Object:  Stored Procedure dbo.sp_rpt_GoodIn    Script Date: 2012-6-5 9:12:05 ******/
-- =============================================
-- Author:		JM
-- Create date: 2014/4/21
-- Description:	根据时间段获取物资入库信息
-- =============================================
ALTER PROCEDURE [dbo].[sp_rpt_GoodOut]
( 
	@BeginDate DATETIME,
	@EndDate DATETIME

)
AS
BEGIN	 
	SET NOCOUNT ON;

	--select sum(gout.OutNum) as OutNums,gout.OutTime,g.GoodsName,gout.price,gt.GoodsTypeName 
	--from GoodsOut gout inner join GoodsInfo g on gout.GoodsID=g.GoodsID
	--inner join GoodsType gt on g.GoodsTypeID=gt.GoodsTypeID
	--where gout.OutTime between '2016-01-01 00:00' and '2016-01-31 00:00'
	--group by gout.OutTime,g.GoodsName,gout.price,gt.GoodsTypeName

select sum(gout.OutNum) as OutNums,
       CAST(sum(gout.OutNum*gout.price)/sum(gout.OutNum) AS decimal(18,2)) price,gt.GoodsTypeName,
       CAST(sum(gout.OutNum*gout.price) AS decimal(18,2)) fachujine,
       g.GoodsName,gout.Remark
       from GoodsOut gout inner join GoodsInfo g on gout.GoodsID=g.GoodsID inner join GoodsType gt 
       on g.GoodsTypeID=gt.GoodsTypeID
	   where gout.OutTime between @BeginDate and @EndDate
	   group by gt.GoodsTypeName,g.GoodsName,gout.Remark

SET NOCOUNT OFF;
END



--exec sp_rpt_goodout '2016-06-01','2016-07-01' 

GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Refreshing [dbo].[view_DispatchList]'
GO
EXEC sp_refreshview N'[dbo].[view_DispatchList]'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Altering [dbo].[sp_rpt_StuffCheck]'
GO
-- Stored Procedure

-- =============================================
-- Description:	材料盘点表
-- =============================================
ALTER PROCEDURE [dbo].[sp_rpt_StuffCheck] 
( 
	@Month varchar(6) 
)
AS
BEGIN	 
	SET NOCOUNT ON;
	DECLARE @StartDateTime VARCHAR(30) ,
        @EndDateTime DATETIME ,

        @_StartDateTime VARCHAR(30) ,
        @_EndDateTime VARCHAR(30) ,
        @_LastStartDateTime VARCHAR(30) ,
        @_LastEndDateTime VARCHAR(30) ,

        @ChangeTime VARCHAR(20),
        @ChangeDay VARCHAR(10),
        @LastDate varchar(10),
        @LastDate1 varchar(10),
        @date nvarchar(20),@price decimal(18, 2),@pricelast decimal(18, 2)
        --,@Month nvarchar(10)
        --set @Month='201603'
    SELECT  @ChangeTime = ConfigValue
    FROM    dbo.SysConfig
    WHERE   ConfigName = 'ChangeTime'
    SELECT  @ChangeDay = ConfigValue
    FROM    dbo.SysConfig
    WHERE   ConfigName = 'ChangeDay'
    IF @ChangeTime IS NULL 
        SET @ChangeTime = '00:00'
    IF @ChangeDay IS NULL
        SET @ChangeDay='01'
    SET @EndDateTime =  substring(@Month,0,5)+'-'+substring(@Month,5,2)+'-'+ @ChangeDay + ' ' + @ChangeTime 
    --SET @StartDateTime =convert(varchar(30),DATEADD(m, -1,convert(datetime,@EndDateTime)),23)+' 00:00:00.000'
    SET @StartDateTime =convert(varchar(30),DATEADD(m, -1,convert(datetime,@EndDateTime)),23)+' '+@ChangeTime

    SET @LastDate=convert(varchar(10),(convert(datetime,@StartDateTime)-1),23)
    --SET @LastDate1=convert(varchar(10),(convert(datetime,@EndDateTime)+1),23)
    SET @LastDate1=convert(varchar(10),(convert(datetime,@EndDateTime)-1),23)
    set @date=convert(varchar(10),(convert(datetime,@StartDateTime)),23)

    --本月时间
    set @_StartDateTime=@StartDateTime 
    set @_EndDateTime=convert(varchar(30),@EndDateTime,23)+' '+@ChangeTime 
    --select @_StartDateTime,@_EndDateTime
    --上月时间
    set @_LastStartDateTime=convert(varchar(30),DATEADD(m, -1,convert(datetime,@_StartDateTime)),23)+' '+@ChangeTime 
    set @_LastEndDateTime=@_StartDateTime   
    --select @_LastStartDateTime,@_LastEndDateTime


    -- 实盘值
    select stuffid,stuffname,contentcurrent into #temp1 
    from importinfo 
    where  ismaintype=1 and date=@LastDate1

    --盘盈亏
    select stuffid,stuffname,sum(profitandloss) as  profitandloss,typeid,typename,price into #temp2
    from importinfo 
    where  ismaintype=1 and  date+' 00:00:00'>=@_StartDateTime and date+' 00:00:00'<=@_EndDateTime
    group by stuffid,stuffname,typeid,typename,price

    select '主料' a1,*,jiecun*price as jiecunmoney,profitandloss*price as profitandlossMoney from(
    select a.stuffid,a.stuffname,a.contentcurrent as jiecun,b.profitandloss,contentcurrent- b.profitandloss as zm,typeid,typename
     ,case price when null then dbo.GetStuffPrice(@_StartDateTime,@_EndDateTime,a.stuffid) else price end as price
    from #temp1 a join #temp2 b on a.stuffid=b.stuffid
    ) c
    --select *  from #temp1
    --select *  from #temp2








	SET NOCOUNT OFF;
END

drop table #temp1
drop table #temp2

--  exec sp_rpt_StuffCheck2 '201604'

--truncate table importinfo
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Altering [dbo].[sp_rpt_CarOilAnalyse]'
GO
ALTER PROCEDURE [dbo].[sp_rpt_CarOilAnalyse]
( 
	@DateFrom datetime,@DateTo datetime
)
AS
BEGIN	 
	SET NOCOUNT ON;

select carKilometer.carid ,amount,kilometer, ISNULL(parcube,0) AS parcube,(CASE WHEN kilometer=0 THEN 0 ELSE  round(amount/kilometer,4) END) amkil,
(CASE WHEN parcube=0 OR ParCube IS NULL THEN 0 ELSE round(amount/parcube,4) END) ampar  from 

	(select CarOil.carid,sum(amount)amount,(MAX(ThisKM)-MIN(ThisKM)) AS kilometer 
	 from CarOil 
         INNER JOIN Car ON CarOil.carid=Car.carid and Car.CarTypeID='CT1' and 
 	 AddDate between @DateFrom and @DateTo group by CarOil.carid  )carKilometer LEFT  JOIN
	(select  carid,sum(ParCube) ParCube from shippingdocument 
 	 WHERE ProduceDate between @DateFrom and @DateTo group by carid)carParCube 
on carKilometer.carid = carParCube.carid

SET NOCOUNT OFF;
END

GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Refreshing [dbo].[View_ShippingDocument]'
GO
EXEC sp_refreshview N'[dbo].[View_ShippingDocument]'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Creating [dbo].[GetConUnitPrice]'
GO
-- User Defined Function

CREATE FUNCTION [dbo].[GetConUnitPrice]
(
	@ContractID varchar(30)
	,@ConStrength varchar(30)
	,@ProduceDate varchar(30)
)
RETURNS decimal(18, 2)
AS
BEGIN
DECLARE @price decimal(18, 2) --单价
DECLARE @count int            --结果数量
DECLARE @tagint int           --标量

set @tagint = 1  ---标量初始值1

select @count=count(*)
from ContractItems left join PriceSetting on ContractItems.ContractItemsID=PriceSetting.ContractItemsID  
where ContractItems.ContractID=@ContractID and ContractItems.ConStrength=@ConStrength

if @count >=1
		begin
		while @tagint <= @count  --循环
			begin
			if @ProduceDate > (select ChangeTime from 
				(select ROW_NUMBER() over(order by PriceSetting.ChangeTime desc) as RowID,ChangeTime
				from ContractItems left join PriceSetting on ContractItems.ContractItemsID=PriceSetting.ContractItemsID  
				where ContractItems.ContractID=@ContractID and ContractItems.ConStrength=@ConStrength) TableA 
				where TableA.RowID=@tagint)
				begin
				select @price=price from 
				(select ROW_NUMBER() over(order by PriceSetting.ChangeTime desc) as RowID,(PriceSetting.PumpCost+PriceSetting.UnpumpPrice) as price
				from ContractItems left join PriceSetting on ContractItems.ContractItemsID=PriceSetting.ContractItemsID  
				where ContractItems.ContractID=@ContractID and ContractItems.ConStrength=@ConStrength) TableA 
				where TableA.RowID=@tagint
				break
				end
			set @tagint = @tagint+1
			end
		end
--价格变动记录为空
if @price is null
		begin
		select @price=UnpumpPrice+PumpCost
		from ContractItems
		where ContractItems.ContractID=@ContractID and ContractItems.ConStrength=@ConStrength
		end

		--select * from ContractItems
return @price

END

GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Altering [dbo].[StockPact]'
GO
ALTER TABLE [dbo].[StockPact] ADD
[StuffID3] [varchar] (30) COLLATE Chinese_PRC_CI_AS NULL,
[StuffID4] [varchar] (30) COLLATE Chinese_PRC_CI_AS NULL,
[StockPrice1] [decimal] (18, 2) NULL CONSTRAINT [DF__StockPact__Stock__072CF7AA] DEFAULT ((0)),
[StockPrice2] [decimal] (18, 2) NULL CONSTRAINT [DF__StockPact__Stock__08211BE3] DEFAULT ((0)),
[StockPrice3] [decimal] (18, 2) NULL CONSTRAINT [DF__StockPact__Stock__0915401C] DEFAULT ((0)),
[StockPrice4] [decimal] (18, 2) NULL CONSTRAINT [DF__StockPact__Stock__0A096455] DEFAULT ((0))
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Creating [dbo].[sp_rpt_ConStrengthStatisticsT]'
GO
-- Stored Procedure

CREATE PROCEDURE [dbo].[sp_rpt_ConStrengthStatisticsT] 
( 
	@Month varchar(6) 
)
AS
BEGIN	 
	SET NOCOUNT ON;
	DECLARE @StartDateTime VARCHAR(30) ,
        @EndDateTime VARCHAR(30) ,
        @ChangeTime VARCHAR(20),
        @ChangeDay VARCHAR(10),
        @StartDateYear VARCHAR(30)

    ---交班时间    
    SELECT  @ChangeTime = ConfigValue
    FROM    dbo.SysConfig
    WHERE   ConfigName = 'ChangeTime'

    ---结算日期
    SELECT  @ChangeDay = ConfigValue
    FROM    dbo.SysConfig
    WHERE   ConfigName = 'ChangeDay'

    IF @ChangeTime IS NULL 
        SET @ChangeTime = '00:00'
    IF @ChangeDay IS NULL
        SET @ChangeDay='01'

    SET @EndDateTime =  substring(@Month,0,5)+'-'+substring(@Month,5,2)+'-'+ @ChangeDay + ' ' + @ChangeTime 
    SET @StartDateTime =convert(varchar(30),DATEADD(m, -1,convert(datetime,@EndDateTime)),23)+' '+@ChangeTime
    SET @StartDateYear =convert(varchar(30),convert(datetime,convert(varchar(4),convert(int,substring(@Month,0,5))-1)+'-12-'+ @ChangeDay)+1,23)+' '+@ChangeTime
    --select @StartDateTime,@EndDateTime,@ChangeTime,@ChangeDay,@StartDateYear

select x.* from 

(

select a.* from (
select project.projectid,project.projectname,shippingdocument.conStrength,sum(shippingdocument.sendcube*dbo.GetConUnitPrice(producetasks.ContractID,producetasks.constrength,shippingdocument.producedate)) sendcube,'0' M,'0' MM,[contract].contractname 
from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid join [contract] on [contract].contractid=project.contractid
where shippingdocument.produceDate>=@StartDateTime and shippingdocument.produceDate<=@EndDateTime and shippingdocument.IsEffective=1
group by project.projectid,project.projectname,shippingdocument.conStrength,[contract].contractname
union all
select project.projectid,project.projectname,'小计' conStrength,sum(shippingdocument.sendcube*dbo.GetConUnitPrice(producetasks.ContractID,producetasks.constrength,shippingdocument.producedate)) sendcube,'1' M,'0' MM,[contract].contractname from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid join [contract] on [contract].contractid=project.contractid
where shippingdocument.produceDate>=@StartDateTime and shippingdocument.produceDate<=@EndDateTime and shippingdocument.IsEffective=1
group by project.projectid,project.projectname,[contract].contractname
union all
select project.projectid,project.projectname,'本年累计' conStrength,sum(shippingdocument.sendcube*dbo.GetConUnitPrice(producetasks.ContractID,producetasks.constrength,shippingdocument.producedate)) sendcube,'2' M,'0' MM,[contract].contractname from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid join [contract] on [contract].contractid=project.contractid
where shippingdocument.produceDate>=@StartDateYear and shippingdocument.produceDate<=@EndDateTime and shippingdocument.IsEffective=1
group by project.projectid,project.projectname,[contract].contractname
union all
select project.projectid,project.projectname,'项目累计总方量' conStrength,sum(shippingdocument.sendcube*dbo.GetConUnitPrice(producetasks.ContractID,producetasks.constrength,shippingdocument.producedate)) sendcube,'3' M,'0' MM,[contract].contractname from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid join [contract] on [contract].contractid=project.contractid 
where shippingdocument.IsEffective=1
group by project.projectid,project.projectname,[contract].contractname
) a 

--筛选
where a.projectid in 
(
select aa.projectid from (    
select project.projectid,project.projectname,shippingdocument.conStrength,sum(shippingdocument.sendcube) sendcube,'0' M,'0' MM from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid
where shippingdocument.produceDate>=@StartDateTime and shippingdocument.produceDate<=@EndDateTime  and shippingdocument.IsEffective=1
group by project.projectid,project.projectname,shippingdocument.conStrength
union all
select project.projectid,project.projectname,'小计' conStrength,sum(shippingdocument.sendcube*dbo.GetConUnitPrice(producetasks.ContractID,producetasks.constrength,shippingdocument.producedate)) sendcube,'1' M,'0' MM from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid
where shippingdocument.produceDate>=@StartDateTime and shippingdocument.produceDate<=@EndDateTime and shippingdocument.IsEffective=1
group by project.projectid,project.projectname
union all
select project.projectid,project.projectname,'本年累计' conStrength,sum(shippingdocument.sendcube*dbo.GetConUnitPrice(producetasks.ContractID,producetasks.constrength,shippingdocument.producedate)) sendcube,'2' M,'0' MM from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid
where shippingdocument.produceDate>=@StartDateYear and shippingdocument.produceDate<=@EndDateTime and shippingdocument.IsEffective=1
group by project.projectid,project.projectname
union all
select project.projectid,project.projectname,'项目累计总方量' conStrength,sum(shippingdocument.sendcube*dbo.GetConUnitPrice(producetasks.ContractID,producetasks.constrength,shippingdocument.producedate)) sendcube,'3' M,'0' MM from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid
where  shippingdocument.IsEffective=1
group by project.projectid,project.projectname
) aa 
group by aa.projectid
having  count(aa.projectid)>3)




union all

select '9999' projectid,'供应小计' projectname,b.conStrength,sum(b.sendcube) sendcube,b.M,b.MM ,'' contractname from
(select project.projectid,project.projectname,shippingdocument.conStrength,sum(shippingdocument.sendcube*dbo.GetConUnitPrice(producetasks.ContractID,producetasks.constrength,shippingdocument.producedate)) sendcube,'0' M,'1' MM ,'' contractname from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid
where shippingdocument.produceDate>=@StartDateTime and shippingdocument.produceDate<=@EndDateTime  and shippingdocument.IsEffective=1
group by project.projectid,project.projectname,shippingdocument.conStrength
union all
select project.projectid,project.projectname,'小计' conStrength,sum(shippingdocument.sendcube*dbo.GetConUnitPrice(producetasks.ContractID,producetasks.constrength,shippingdocument.producedate)) sendcube,'1' M,'1' MM,'' contractname from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid
where shippingdocument.produceDate>=@StartDateTime and shippingdocument.produceDate<=@EndDateTime and shippingdocument.IsEffective=1
group by project.projectid,project.projectname
union all
select project.projectid,project.projectname,'本年累计' conStrength,sum(shippingdocument.sendcube*dbo.GetConUnitPrice(producetasks.ContractID,producetasks.constrength,shippingdocument.producedate)) sendcube,'2' M,'1' MM,'' contractname from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid
where shippingdocument.produceDate>=@StartDateYear and shippingdocument.produceDate<=@EndDateTime and shippingdocument.IsEffective=1

--添加筛选
and  project.projectid in 
(
select aa.projectid from (    
select project.projectid,project.projectname,shippingdocument.conStrength,sum(shippingdocument.sendcube) sendcube,'0' M,'0' MM from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid
where shippingdocument.produceDate>=@StartDateTime and shippingdocument.produceDate<=@EndDateTime  and shippingdocument.IsEffective=1
group by project.projectid,project.projectname,shippingdocument.conStrength
union all
select project.projectid,project.projectname,'小计' conStrength,sum(shippingdocument.sendcube) sendcube,'1' M,'0' MM from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid
where shippingdocument.produceDate>=@StartDateTime and shippingdocument.produceDate<=@EndDateTime  and shippingdocument.IsEffective=1
group by project.projectid,project.projectname
union all
select project.projectid,project.projectname,'本年累计' conStrength,sum(shippingdocument.sendcube) sendcube,'2' M,'0' MM from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid
where shippingdocument.produceDate>=@StartDateYear and shippingdocument.produceDate<=@EndDateTime  and shippingdocument.IsEffective=1
group by project.projectid,project.projectname
union all
select project.projectid,project.projectname,'项目累计总方量' conStrength,sum(shippingdocument.sendcube*dbo.GetConUnitPrice(producetasks.ContractID,producetasks.constrength,shippingdocument.producedate)) sendcube,'3' M,'0' MM from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid
where shippingdocument.IsEffective=1
group by project.projectid,project.projectname
) aa 
group by aa.projectid
having  count(aa.projectid)>3)


group by project.projectid,project.projectname
union all
select project.projectid,project.projectname,'项目累计总方量' conStrength,sum(shippingdocument.sendcube*dbo.GetConUnitPrice(producetasks.ContractID,producetasks.constrength,shippingdocument.producedate)) sendcube,'3' M,'1' MM,'' contractname from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid

--添加筛选
where shippingdocument.IsEffective=1 and  project.projectid in 
(
select aa.projectid from (    
select project.projectid,project.projectname,shippingdocument.conStrength,sum(shippingdocument.sendcube) sendcube,'0' M,'0' MM from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid
where shippingdocument.produceDate>=@StartDateTime and shippingdocument.produceDate<=@EndDateTime  and shippingdocument.IsEffective=1
group by project.projectid,project.projectname,shippingdocument.conStrength
union all
select project.projectid,project.projectname,'小计' conStrength,sum(shippingdocument.sendcube) sendcube,'1' M,'0' MM from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid
where shippingdocument.produceDate>=@StartDateTime and shippingdocument.produceDate<=@EndDateTime and shippingdocument.IsEffective=1
group by project.projectid,project.projectname
union all
select project.projectid,project.projectname,'本年累计' conStrength,sum(shippingdocument.sendcube) sendcube,'2' M,'0' MM from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid
where shippingdocument.produceDate>=@StartDateYear and shippingdocument.produceDate<=@EndDateTime and shippingdocument.IsEffective=1
group by project.projectid,project.projectname
union all
select project.projectid,project.projectname,'项目累计总方量' conStrength,sum(shippingdocument.sendcube) sendcube,'3' M,'0' MM from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid
where shippingdocument.IsEffective=1
group by project.projectid,project.projectname
) aa 
group by aa.projectid
having  count(aa.projectid)>3)

group by project.projectid,project.projectname) b
group by b.conStrength,b.M,b.MM 


union all


select '99999' projectid,'我司代搅拌量' projectname,c.conStrength,sum(c.sendcube) sendcube,c.M,c.MM,'' contractname from
(select project.projectid,project.projectname,shippingdocument.conStrength,sum(shippingdocument.sendcube*dbo.GetConUnitPrice(producetasks.ContractID,producetasks.constrength,shippingdocument.producedate)) sendcube,'0' M,'2' MM,'' contractname from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid
where shippingdocument.produceDate>=@StartDateTime and shippingdocument.produceDate<=@EndDateTime  and producetasks.IsCommission=1  and shippingdocument.IsEffective=1
group by project.projectid,project.projectname,shippingdocument.conStrength
union all
select project.projectid,project.projectname,'小计' conStrength,sum(shippingdocument.sendcube*dbo.GetConUnitPrice(producetasks.ContractID,producetasks.constrength,shippingdocument.producedate)) sendcube,'1' M,'2' MM,'' contractname from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid
where shippingdocument.produceDate>=@StartDateTime and shippingdocument.produceDate<=@EndDateTime  and producetasks.IsCommission=1 and shippingdocument.IsEffective=1
group by project.projectid,project.projectname
union all
select project.projectid,project.projectname,'本年累计' conStrength,sum(shippingdocument.sendcube*dbo.GetConUnitPrice(producetasks.ContractID,producetasks.constrength,shippingdocument.producedate)) sendcube,'2' M,'2' MM,'' contractname from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid
where shippingdocument.produceDate>=@StartDateYear and shippingdocument.produceDate<=@EndDateTime  and producetasks.IsCommission=1  and shippingdocument.IsEffective=1
group by project.projectid,project.projectname
union all
select project.projectid,project.projectname,'项目累计总方量' conStrength,sum(shippingdocument.sendcube*dbo.GetConUnitPrice(producetasks.ContractID,producetasks.constrength,shippingdocument.producedate)) sendcube,'3' M,'2' MM,'' contractname from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid  and producetasks.IsCommission=1
where shippingdocument.IsEffective=1
group by project.projectid,project.projectname) c
group by c.conStrength,c.M,c.MM 

union all


select '999999' projectid,'代我司搅拌量' projectname,d.conStrength,sum(d.sendcube) sendcube,d.M,d.MM,'' contractname from
(select project.projectid,project.projectname,producetasks.conStrength,sum(InsteadProduct.productNum) sendcube,'0' M,'2' MM,'' contractname from project join producetasks
on producetasks.projectid=project.projectid join InsteadProduct 
on InsteadProduct.taskid=producetasks.taskid
where InsteadProduct.ProductTime>=@StartDateTime and InsteadProduct.ProductTime<=@EndDateTime 
group by project.projectid,project.projectname,producetasks.conStrength
union all
select project.projectid,project.projectname,'小计' conStrength,sum(InsteadProduct.productNum) sendcube,'1' M,'3' MM,'' contractname from project join producetasks
on producetasks.projectid=project.projectid join InsteadProduct 
on InsteadProduct.taskid=producetasks.taskid
where InsteadProduct.ProductTime>=@StartDateTime and InsteadProduct.ProductTime<=@EndDateTime
group by project.projectid,project.projectname
union all
select project.projectid,project.projectname,'本年累计' conStrength,sum(InsteadProduct.productNum) sendcube,'2' M,'3' MM,'' contractname from project join producetasks
on producetasks.projectid=project.projectid join InsteadProduct 
on InsteadProduct.taskid=producetasks.taskid
where InsteadProduct.ProductTime>=@StartDateYear and InsteadProduct.ProductTime<=@EndDateTime
group by project.projectid,project.projectname
union all
select project.projectid,project.projectname,'项目累计总方量' conStrength,sum(InsteadProduct.productNum) sendcube,'3' M,'3' MM,'' contractname from project join producetasks
on producetasks.projectid=project.projectid join InsteadProduct 
on InsteadProduct.taskid=producetasks.taskid
group by project.projectid,project.projectname) d
group by d.conStrength,d.M,d.MM 

union all

select '9999999' projectid,'我司送出量' projectname,e.conStrength,sum(e.sendcube) sendcube,e.M,e.MM,'' contractname from
(select project.projectid,project.projectname,shippingdocument.conStrength,sum(shippingdocument.SignInCube*dbo.GetConUnitPrice(producetasks.ContractID,producetasks.constrength,shippingdocument.producedate)) sendcube,'0' M,'4' MM,'' contractname from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid
where shippingdocument.produceDate>=@StartDateTime and shippingdocument.produceDate<=@EndDateTime  and shippingdocument.IsEffective=1
group by project.projectid,project.projectname,shippingdocument.conStrength
union all
select project.projectid,project.projectname,'小计' conStrength,sum(shippingdocument.SignInCube*dbo.GetConUnitPrice(producetasks.ContractID,producetasks.constrength,shippingdocument.producedate)) sendcube,'1' M,'4' MM,'' contractname from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid
where shippingdocument.produceDate>=@StartDateTime and shippingdocument.produceDate<=@EndDateTime  and shippingdocument.IsEffective=1
group by project.projectid,project.projectname
union all
select project.projectid,project.projectname,'本年累计' conStrength,sum(shippingdocument.SignInCube*dbo.GetConUnitPrice(producetasks.ContractID,producetasks.constrength,shippingdocument.producedate)) sendcube,'2' M,'4' MM,'' contractname from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid
where shippingdocument.produceDate>=@StartDateYear and shippingdocument.produceDate<=@EndDateTime  and shippingdocument.IsEffective=1
group by project.projectid,project.projectname
union all
select project.projectid,project.projectname,'项目累计总方量' conStrength,sum(shippingdocument.SignInCube*dbo.GetConUnitPrice(producetasks.ContractID,producetasks.constrength,shippingdocument.producedate)) sendcube,'3' M,'4' MM,'' contractname from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid 
where shippingdocument.IsEffective=1
group by project.projectid,project.projectname) e
group by e.conStrength,e.M,e.MM 

union all

select '99999999' projectid,'拌台数合计' projectname,f.conStrength,sum(f.sendcube) sendcube,f.M,f.MM,'' contractname from
(select project.projectid,project.projectname,shippingdocument.conStrength,sum(shippingdocument.SendCube*dbo.GetConUnitPrice(producetasks.ContractID,producetasks.constrength,shippingdocument.producedate)) sendcube,'0' M,'5' MM,'' contractname from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid
where shippingdocument.produceDate>=@StartDateTime and shippingdocument.produceDate<=@EndDateTime  and shippingdocument.IsEffective=1
group by project.projectid,project.projectname,shippingdocument.conStrength
union all
select project.projectid,project.projectname,'小计' conStrength,sum(shippingdocument.SendCube*dbo.GetConUnitPrice(producetasks.ContractID,producetasks.constrength,shippingdocument.producedate)) sendcube,'1' M,'5' MM,'' contractname from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid
where shippingdocument.produceDate>=@StartDateTime and shippingdocument.produceDate<=@EndDateTime  and shippingdocument.IsEffective=1
group by project.projectid,project.projectname
union all
select project.projectid,project.projectname,'本年累计' conStrength,sum(shippingdocument.SendCube*dbo.GetConUnitPrice(producetasks.ContractID,producetasks.constrength,shippingdocument.producedate)) sendcube,'2' M,'5' MM,'' contractname from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid
where shippingdocument.produceDate>=@StartDateYear and shippingdocument.produceDate<=@EndDateTime  and shippingdocument.IsEffective=1
group by project.projectid,project.projectname
union all
select project.projectid,project.projectname,'项目累计总方量' conStrength,sum(shippingdocument.SendCube*dbo.GetConUnitPrice(producetasks.ContractID,producetasks.constrength,shippingdocument.producedate)) sendcube,'3' M,'5' MM,'' contractname from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid 
where shippingdocument.IsEffective=1
group by project.projectid,project.projectname) f
group by f.conStrength,f.M,f.MM 


union all

select '999999999' projectid,'差异（送出量-拌台数）' projectname,g.conStrength,
sum(g.sendcube) sendcube,g.M,g.MM,'' contractname from

(select p1.projectid,p1.projectname,s1.conStrength,

--差异（送出量-拌台数） 砼强度
(sum(s1.SignInCube*dbo.GetConUnitPrice(producetasks.ContractID,producetasks.constrength,s1.producedate))-(select sum(shippingdocument.SendCube*dbo.GetConUnitPrice(producetasks.ContractID,producetasks.constrength,shippingdocument.producedate)) 
from project join producetasks on producetasks.projectid=project.projectid join shippingdocument on shippingdocument.taskid=producetasks.taskid where shippingdocument.produceDate>=@StartDateTime and shippingdocument.produceDate<=@EndDateTime and shippingdocument.conStrength=s1.conStrength and p1.projectid=project.projectid  and shippingdocument.IsEffective=1
group by project.projectid,project.projectname,shippingdocument.conStrength) )
sendcube

,'0' M,'6' MM,'' contractname from project p1 join producetasks
on producetasks.projectid=p1.projectid  join shippingdocument s1
on s1.taskid=producetasks.taskid
where s1.produceDate>=@StartDateTime and s1.produceDate<=@EndDateTime  and s1.IsEffective=1
group by p1.projectid,p1.projectname,s1.conStrength

union all

select p2.projectid,p2.projectname,'小计' conStrength,

--差异（送出量-拌台数） 小计
sum(s2.SignInCube*dbo.GetConUnitPrice(producetasks.ContractID,producetasks.constrength,s2.producedate))-(select sum(shippingdocument.SendCube*dbo.GetConUnitPrice(producetasks.ContractID,producetasks.constrength,shippingdocument.producedate)) from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid
where shippingdocument.produceDate>=@StartDateTime and shippingdocument.produceDate<=@EndDateTime  and p2.projectid=project.projectid and shippingdocument.IsEffective=1 group by project.projectid,project.projectname  )
sendcube

,'1' M,'6' MM,'' contractname from project p2 join producetasks
on producetasks.projectid=p2.projectid join shippingdocument  s2
on s2.taskid=producetasks.taskid
where s2.produceDate>=@StartDateTime and s2.produceDate<=@EndDateTime  and s2.IsEffective=1
group by p2.projectid,p2.projectname

union all

select p3.projectid,p3.projectname,'本年累计' conStrength,

--差异（送出量-拌台数） 本年累计
sum(s3.SignInCube*dbo.GetConUnitPrice(producetasks.ContractID,producetasks.constrength,s3.producedate)) - (select sum(shippingdocument.SendCube*dbo.GetConUnitPrice(producetasks.ContractID,producetasks.constrength,shippingdocument.producedate)) from project join producetasks on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid
where shippingdocument.produceDate>=@StartDateYear and shippingdocument.produceDate<=@EndDateTime  and p3.projectid=project.projectid  and shippingdocument.IsEffective=1 group by project.projectid,project.projectname)
sendcube

,'2' M,'6' MM,'' contractname from project p3 join producetasks
on producetasks.projectid=p3.projectid join shippingdocument  s3
on s3.taskid=producetasks.taskid
where s3.produceDate>=@StartDateYear and s3.produceDate<=@EndDateTime  and s3.IsEffective=1
group by p3.projectid,p3.projectname

union all

select p4.projectid,p4.projectname,'项目累计总方量' conStrength,


sum(s4.SignInCube*dbo.GetConUnitPrice(producetasks.ContractID,producetasks.constrength,s4.producedate)) -(select sum(shippingdocument.SendCube*dbo.GetConUnitPrice(producetasks.ContractID,producetasks.constrength,shippingdocument.producedate)) from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid and p4.projectid=project.projectid
where shippingdocument.IsEffective=1
group by project.projectid,project.projectname)
sendcube

,'3' M,'6' MM,'' contractname from project p4 join producetasks
on producetasks.projectid=p4.projectid join shippingdocument s4
on s4.taskid=producetasks.taskid 
where s4.IsEffective=1
group by p4.projectid,p4.projectname) g
group by g.conStrength,g.M,g.MM 

) x
order by x.MM,x.projectid,x.M,case when x.conStrength='砂浆' then 'z' else x.conStrength end 


SET NOCOUNT OFF;
END

GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Creating [dbo].[sp_rpt_StuffCheck2]'
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
-- Stored Procedure

-- =============================================
-- Description:	材料盘点表二
-- =============================================
CREATE PROCEDURE [dbo].[sp_rpt_StuffCheck2] 
( 
	@Month varchar(6) 
)
AS
BEGIN	 
	SET NOCOUNT ON;
	DECLARE @StartDateTime VARCHAR(30) ,
        @EndDateTime DATETIME ,

        @_StartDateTime VARCHAR(30) ,
        @_EndDateTime VARCHAR(30) ,
        @_LastStartDateTime VARCHAR(30) ,
        @_LastEndDateTime VARCHAR(30) ,

        @ChangeTime VARCHAR(20),
        @ChangeDay VARCHAR(10),
        @LastDate varchar(10),
        @LastDate1 varchar(10),
        @date nvarchar(20),@price decimal(18, 2),@pricelast decimal(18, 2)
        --,@Month nvarchar(10)
        --set @Month='201603'
    SELECT  @ChangeTime = ConfigValue
    FROM    dbo.SysConfig
    WHERE   ConfigName = 'ChangeTime'
    SELECT  @ChangeDay = ConfigValue
    FROM    dbo.SysConfig
    WHERE   ConfigName = 'ChangeDay'
    IF @ChangeTime IS NULL 
        SET @ChangeTime = '00:00'
    IF @ChangeDay IS NULL
        SET @ChangeDay='01'
    SET @EndDateTime =  substring(@Month,0,5)+'-'+substring(@Month,5,2)+'-'+ @ChangeDay + ' ' + @ChangeTime 
    --SET @StartDateTime =convert(varchar(30),DATEADD(m, -1,convert(datetime,@EndDateTime)),23)+' 00:00:00.000'
    SET @StartDateTime =convert(varchar(30),DATEADD(m, -1,convert(datetime,@EndDateTime)),23)+' '+@ChangeTime

    SET @LastDate=convert(varchar(10),(convert(datetime,@StartDateTime)-1),23)
    --SET @LastDate1=convert(varchar(10),(convert(datetime,@EndDateTime)+1),23)
    SET @LastDate1=convert(varchar(10),(convert(datetime,@EndDateTime)-1),23)
    set @date=convert(varchar(10),(convert(datetime,@StartDateTime)),23)

    --本月时间
    set @_StartDateTime=@StartDateTime 
    set @_EndDateTime=convert(varchar(30),@EndDateTime,23)+' '+@ChangeTime 
    --select @_StartDateTime,@_EndDateTime
    --上月时间
    set @_LastStartDateTime=convert(varchar(30),DATEADD(m, -1,convert(datetime,@_StartDateTime)),23)+' '+@ChangeTime 
    set @_LastEndDateTime=@_StartDateTime   
    --select @_LastStartDateTime,@_LastEndDateTime


    -- 实盘值
    select stuffid,stuffname,contentcurrent into #temp1 
    from importinfo 
    where  ismaintype=1 and date=@LastDate1

    --盘盈亏
    select stuffid,stuffname,sum(profitandloss) as  profitandloss,typeid,typename,price into #temp2
    from importinfo 
    where  ismaintype=1 and  date+' 00:00:00'>=@_StartDateTime and date+' 00:00:00'<=@_EndDateTime
    group by stuffid,stuffname,typeid,typename,price

    select '主料' a1,*,jiecun*price as jiecunmoney,profitandloss*price as profitandlossMoney from(
    select a.stuffid,a.stuffname,a.contentcurrent as jiecun,b.profitandloss,contentcurrent- b.profitandloss as zm,typeid,typename
     ,case price when null then dbo.GetStuffPrice(@_StartDateTime,@_EndDateTime,a.stuffid) else price end as price
    from #temp1 a join #temp2 b on a.stuffid=b.stuffid
    ) c
    --select *  from #temp1
    --select *  from #temp2
--(select a.*
----本月调整盈亏后实际消耗
--,a.usecontent-a.profitandloss actionnum
--,a.usecontentMoney-a.profitandlossMoney actionmoney 
----本月结存
--,a.beforecontent+a.contentin-a.usecontent jiecun
--,a.beforecontentMoney+a.contentinMoney-a.usecontentMoney jiecunmoney into #temp
--from (select '主料' a1,typename,stuffname

----,convert(varchar(40),price) price
----,convert(varchar(40),(select top 1 isnull(s.price,0) from stuffinfoprice s where s.stuffid=stuffid order by case when s.year1=convert(int,substring(@date,0,5)) then 9999 else s.year1 end  desc,case when s.month1=convert(int,substring(@date,6,2)) then 9999 else s.month1 end  desc))
--,convert(nvarchar(20),dbo.GetStuffPrice(@_StartDateTime,@_EndDateTime,stuffid))
--price

--,stuffid,typeid
----上月结存
--,isnull((select content from importinfoall where importinfoall.ismaintype=1 and importinfoall.[date]=@LastDate and ifa.stuffid=importinfoall.stuffid),0) beforecontent
--,isnull((select content from importinfoall where importinfoall.ismaintype=1 and importinfoall.[date]=@LastDate and ifa.stuffid=importinfoall.stuffid),0)
--* dbo.GetStuffPrice(@_LastStartDateTime,@_LastEndDateTime,ifa.stuffid) beforecontentmoney
----本月购进
----,sum(isnull(ifa.contentin,0)) contentin
----,sum(isnull(ifa.contentinMoney,0)) contentinMoney
--,dbo.GetStuffinNum(@StartDateTime,@EndDateTime,ifa.stuffid)/1000 contentin
--,dbo.GetStuffinMoney(@StartDateTime,@EndDateTime,ifa.stuffid) contentinMoney

----本月耗用
--,sum(isnull(ifa.usecontent,0)) usecontent
--,sum(isnull(ifa.usecontent,0))
--* dbo.GetStuffPrice(@_StartDateTime,@_EndDateTime,ifa.stuffid) usecontentMoney
----本月盘盈亏
--,sum(isnull(ifa.profitandloss,0)) profitandloss
--,sum(isnull(ifa.profitandloss,0))
--* dbo.GetStuffPrice(@_StartDateTime,@_EndDateTime,ifa.stuffid) profitandlossMoney
----本月实际库存
--,isnull((select content from importinfoall where  importinfoall.ismaintype=1 and importinfoall.[date]=convert(varchar(10),convert(datetime,@LastDate1),23) and ifa.stuffid=importinfoall.stuffid),0) contentcurrent
--,isnull((select content from importinfoall where importinfoall.ismaintype=1 and importinfoall.[date]=convert(varchar(10),convert(datetime,@LastDate1),23) and ifa.stuffid=importinfoall.stuffid),0)
--* dbo.GetStuffPrice(@_StartDateTime,@_EndDateTime,ifa.stuffid) contentmoneycurrent
--from importinfoall ifa where ifa.ismaintype=1 and ifa.[date]+' 00:00:00'>=@StartDateTime and ifa.[date]+' 00:00:00'<@EndDateTime 
--group by typename,stuffname,stuffid,typeid
--) a )


--union 

--(select b.*
----本月调整盈亏后实际消耗
--,b.usecontent-b.profitandloss actionnum
--,b.usecontentMoney-b.profitandlossMoney actionmoney 
----本月结存
--,b.beforecontent+b.contentin-b.usecontent jiecun
--,b.beforecontentMoney+b.contentinMoney-b.usecontentMoney jiecunmoney
--from (select '辅料' a1,typename,' ' stuffname,' ' price,' ' stuffid,typeid
----上月结存
--,isnull((select sum(content) from importinfoall where importinfoall.ismaintype=0 and importinfoall.[date]=@LastDate and ifa.typeid=importinfoall.typeid),0) beforecontent
--,isnull((select sum(contentmoney) from importinfoall where importinfoall.ismaintype=0 and importinfoall.[date]=@LastDate and ifa.typeid=importinfoall.typeid),0) beforecontentmoney
----本月购进
--,sum(isnull(ifa.contentin,0)) contentin
--,sum(isnull(ifa.contentinMoney,0)) contentinMoney
----本月耗用
--,sum(isnull(ifa.usecontent,0)) usecontent
--,sum(isnull(ifa.usecontentMoney,0)) usecontentMoney
----本月盘盈亏
--,sum(isnull(ifa.profitandloss,0)) profitandloss
--,sum(isnull(ifa.profitandlossMoney,0)) profitandlossMoney
----本月实际库存
--,isnull((select sum(content) from importinfoall where importinfoall.ismaintype=0 and importinfoall.[date]=convert(varchar(10),convert(datetime,@LastDate1),23) and ifa.typeid=importinfoall.typeid),0) contentcurrent
--,isnull((select sum(contentmoney) from importinfoall where importinfoall.ismaintype=0 and importinfoall.[date]=convert(varchar(10),convert(datetime,@LastDate1),23) and ifa.typeid=importinfoall.typeid),0) contentmoneycurrent
--from importinfoall ifa where ifa.ismaintype=0 and ifa.[date]+' 00:00:00'>=@StartDateTime and ifa.[date]+' 00:00:00'<@EndDateTime
--group by typename,typeid
--) b ) 
--select * from #temp

	SET NOCOUNT OFF;
END

drop table #temp1
drop table #temp2

--  exec sp_rpt_StuffCheck2 '201604'

--truncate table importinfo
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Creating [dbo].[ContractPay]'
GO
CREATE TABLE [dbo].[ContractPay]
(
[ID] [serialnumber] NOT NULL IDENTITY(1, 1),
[ContractID] [define] NOT NULL,
[PayDate] [datetime] NULL,
[PayMoney] [xmoney] NULL CONSTRAINT [DF_Table_1_ChangeMoney] DEFAULT ((0)),
[Remark] [nvarchar] (50) COLLATE Chinese_PRC_CI_AS NULL,
[Builder] [names] NULL,
[BuildTime] [dt] NULL,
[Modifier] [names] NULL,
[ModifyTime] [dt] NULL,
[Version] [version] NULL,
[Lifecycle] [status] NULL,
[PayType] [nvarchar] (50) COLLATE Chinese_PRC_CI_AS NULL,
[BalanceMoney] [decimal] (18, 2) NULL CONSTRAINT [DF_ContractPay_BalanceMoney] DEFAULT ((0)),
[Manager] [varchar] (30) COLLATE Chinese_PRC_CI_AS NULL
)
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Creating primary key [PK_ContractPay] on [dbo].[ContractPay]'
GO
ALTER TABLE [dbo].[ContractPay] ADD CONSTRAINT [PK_ContractPay] PRIMARY KEY CLUSTERED  ([ID])
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Creating [dbo].[sp_rpt_sales_pay]'
GO
-- Stored Procedure

CREATE PROC [dbo].[sp_rpt_sales_pay]
(
	@BeginDate varchar(10),
	@EndDate varchar(10)
)
AS
SET NOCOUNT ON

select d.CustName,b.ContractID,b.ContractName,c.DicName,a.PayMoney,a.Remark,a.Manager AS  Builder,
CONVERT(varchar(100), a.PayDate, 23) AS BuildTime,a.PayType
from ContractPay a 
left join Contract b on a.ContractID=b.ContractID 
left join Dic c on a.PayType=c.DicID  
LEFT JOIN Customer d ON b.CustomerID=d.CustomerID
where a.PayDate between @BeginDate and @EndDate

SET NOCOUNT OFF


-- exec [sp_rpt_sales_pay] '2016-09-01 00:00','2016-10-01 00:00'

GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Altering [dbo].[GetHuanDianZi]'
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS OFF
GO
-- User Defined Function

--求要还多少垫资,x6月结多少%,@x5垫x万
ALTER FUNCTION [dbo].[GetHuanDianZi]
(	
	@yiqian decimal(18, 2)
	,@x1 decimal(18, 2)
	,@x2 decimal(18, 2)
	,@x3 decimal(18, 2)
	,@x6 decimal(18, 2)

)
RETURNS decimal(18, 2) 
AS
begin
	DECLARE @qian decimal(18, 2) 
	set @x1 = @x1*10000
	set @x2 = @x2/100
	set @x3 = @x3/100
	set @x6 = @x6/100

	if @yiqian>=0
		begin
		set @qian = @yiqian-@x1
		if @qian>0
			begin 
				set @qian = (@qian*(1-@x3)+@x1*(1-@x2))*@x6-@x1*(1-@x2)
			end 
		else
			begin 
				set @qian = 0
			end 
		end
	else
		begin
			set @qian = 0
		end
	return @qian
end
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Creating [dbo].[sp_rpt_new_ContractZL]'
GO
CREATE PROCEDURE [dbo].[sp_rpt_new_ContractZL]
( 
	@BeginDate DATETIME
)
AS
BEGIN	 
	SET NOCOUNT ON

	select contractid,Sum(signincube*(dbo.getConAddPrice(contractid,constrength,producedate)+dbo.GetConPrice(contractid,constrength,producedate))) as G 
	into #T2 
	from shippingdocument where producedate<@BeginDate and IsEffective=1  
	group by ContractID

	select ContractID,Sum(PayMoney) as F 
	into #T3 
	from ContractPay 
	where PayDate<@BeginDate  group by ContractID

	select T1.contractid,contractname,
	CASE ContractStatus WHEN 2 THEN '在建项目' WHEN 3 THEN '已完工' WHEN 4 THEN '零星项目' 
	WHEN 5 THEN '法务组项目' ELSE '其它呆坏账项目' END AS ContractStatus,
	isnull(G,0) as G,isnull(F,0) as F,
	dbo.getDayu0(isnull(G,0),dbo.GetStuffQianPrice(isnull(dbo.GetContractMoneyMove(T1.ContractID,dateadd(month,-isnull(T1.Dianzi4,0),@BeginDate)),0),isnull(T1.Dianzi1,0),isnull(T1.Dianzi2,0),isnull(T1.Dianzi3,100)) - dbo.GetHuanDianZi(isnull(dbo.GetContractMoneyMove(T1.ContractID,dateadd(month,-isnull(T1.Dianzi7,0)-isnull(T1.Dianzi4,0),@BeginDate)),0),isnull(T1.Dianzi1,0),isnull(T1.Dianzi2,0),isnull(T1.Dianzi3,100),isnull(T1.Dianzi6,0))+isnull(G,0)-isnull(dbo.GetContractMoneyMove(T1.ContractID,dateadd(month,-isnull(T1.Dianzi4,0),@BeginDate)),0)+isnull(F,0)) as qian,
	dbo.getDayu0(isnull(dbo.GetContractMoneyMove(T1.ContractID,dateadd(month,-3,@BeginDate)),0),dbo.GetStuffQianPrice(isnull(dbo.GetContractMoneyMove(T1.ContractID,dateadd(month,-3-isnull(T1.Dianzi4,0),@BeginDate)),0),isnull(T1.Dianzi1,0),isnull(T1.Dianzi2,0),isnull(T1.Dianzi3,100)) - dbo.GetHuanDianZi(isnull(dbo.GetContractMoneyMove(T1.ContractID,dateadd(month,-3-isnull(T1.Dianzi7,0)-isnull(T1.Dianzi4,0),@BeginDate)),0),isnull(T1.Dianzi1,0),isnull(T1.Dianzi2,0),isnull(T1.Dianzi3,100),isnull(T1.Dianzi6,0))+isnull(dbo.GetContractMoneyMove(T1.ContractID,dateadd(month,-3,@BeginDate)),0)-isnull(dbo.GetContractMoneyMove(T1.ContractID,dateadd(month,-3-isnull(T1.Dianzi4,0),@BeginDate)),0)+isnull(F,0)) as qian3,
	dbo.getDayu0(isnull(dbo.GetContractMoneyMove(T1.ContractID,dateadd(month,-6,@BeginDate)),0),dbo.GetStuffQianPrice(isnull(dbo.GetContractMoneyMove(T1.ContractID,dateadd(month,-6-isnull(T1.Dianzi4,0),@BeginDate)),0),isnull(T1.Dianzi1,0),isnull(T1.Dianzi2,0),isnull(T1.Dianzi3,100)) - dbo.GetHuanDianZi(isnull(dbo.GetContractMoneyMove(T1.ContractID,dateadd(month,-6-isnull(T1.Dianzi7,0)-isnull(T1.Dianzi4,0),@BeginDate)),0),isnull(T1.Dianzi1,0),isnull(T1.Dianzi2,0),isnull(T1.Dianzi3,100),isnull(T1.Dianzi6,0))+isnull(dbo.GetContractMoneyMove(T1.ContractID,dateadd(month,-6,@BeginDate)),0)-isnull(dbo.GetContractMoneyMove(T1.ContractID,dateadd(month,-6-isnull(T1.Dianzi4,0),@BeginDate)),0)+isnull(F,0)) as qian6,
	dbo.getDayu0(isnull(dbo.GetContractMoneyMove(T1.ContractID,dateadd(month,-12,@BeginDate)),0),dbo.GetStuffQianPrice(isnull(dbo.GetContractMoneyMove(T1.ContractID,dateadd(month,-12-isnull(T1.Dianzi4,0),@BeginDate)),0),isnull(T1.Dianzi1,0),isnull(T1.Dianzi2,0),isnull(T1.Dianzi3,100)) - dbo.GetHuanDianZi(isnull(dbo.GetContractMoneyMove(T1.ContractID,dateadd(month,-12-isnull(T1.Dianzi7,0)-isnull(T1.Dianzi4,0),@BeginDate)),0),isnull(T1.Dianzi1,0),isnull(T1.Dianzi2,0),isnull(T1.Dianzi3,100),isnull(T1.Dianzi6,0))+isnull(dbo.GetContractMoneyMove(T1.ContractID,dateadd(month,-12,@BeginDate)),0)-isnull(dbo.GetContractMoneyMove(T1.ContractID,dateadd(month,-12-isnull(T1.Dianzi4,0),@BeginDate)),0)+isnull(F,0)) as qian12,
	dbo.getDayu0(isnull(dbo.GetContractMoneyMove(T1.ContractID,dateadd(month,-24,@BeginDate)),0),dbo.GetStuffQianPrice(isnull(dbo.GetContractMoneyMove(T1.ContractID,dateadd(month,-24-isnull(T1.Dianzi4,0),@BeginDate)),0),isnull(T1.Dianzi1,0),isnull(T1.Dianzi2,0),isnull(T1.Dianzi3,100)) - dbo.GetHuanDianZi(isnull(dbo.GetContractMoneyMove(T1.ContractID,dateadd(month,-24-isnull(T1.Dianzi7,0)-isnull(T1.Dianzi4,0),@BeginDate)),0),isnull(T1.Dianzi1,0),isnull(T1.Dianzi2,0),isnull(T1.Dianzi3,100),isnull(T1.Dianzi6,0))+isnull(dbo.GetContractMoneyMove(T1.ContractID,dateadd(month,-24,@BeginDate)),0)-isnull(dbo.GetContractMoneyMove(T1.ContractID,dateadd(month,-24-isnull(T1.Dianzi4,0),@BeginDate)),0)+isnull(F,0)) as qian24	
	from contract T1 
	left join customer on T1.customerID=customer.customerID
	left join #T2 T2 on T1.ContractID=T2.ContractID 
	left join #T3 T3 on T1.ContractID=T3.ContractID 
	--where contractstatus=2 or contractstatus=3 --AND isnull(G,0)<>isnull(F,0)
    where isnull(G,0)<>isnull(F,0)
	Drop Table #T2
	Drop Table #T3

SET NOCOUNT OFF;
END

--- exec [sp_rpt_new_ContractZL] '2016-08-01 00:00'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Creating [dbo].[ContractJSTZ]'
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE TABLE [dbo].[ContractJSTZ]
(
[ID] [serialnumber] NOT NULL IDENTITY(1, 1),
[ContractID] [define] NOT NULL,
[ChangeDate] [datetime] NULL,
[ChangeMoney] [xmoney] NULL,
[Remark] [nvarchar] (50) COLLATE Chinese_PRC_CI_AS NULL,
[Builder] [names] NULL,
[BuildTime] [dt] NULL,
[Modifier] [names] NULL,
[ModifyTime] [dt] NULL,
[Version] [version] NULL,
[Lifecycle] [status] NULL,
[AdjustType] [varchar] (30) COLLATE Chinese_PRC_CI_AS NULL
)
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Creating primary key [PK_ContractJSTZ] on [dbo].[ContractJSTZ]'
GO
ALTER TABLE [dbo].[ContractJSTZ] ADD CONSTRAINT [PK_ContractJSTZ] PRIMARY KEY CLUSTERED  ([ID])
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Creating [dbo].[sp_rpt_Jstz]'
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS OFF
GO
-- Stored Procedure

/****** Object:  Stored Procedure dbo.sp_rpt_TranAcc    Script Date: 2012-11-13 9:12:05 ******/
-- =============================================
-- Author:		LZL
-- Create date: 2016/6/8
-- Description:	合同调整明细表
-- =============================================
CREATE PROCEDURE [dbo].[sp_rpt_Jstz]
( 
	@BeginDate datetime,
	@EndDate datetime,
	@ContractName nvarchar(128)
)   
AS
BEGIN	 
	SET NOCOUNT ON;
	if @ContractName is null 
    begin  
		select 0 as id,CASE AdjustType WHEN NULL THEN '未知类型' ELSE AdjustType END AdjustType,a.ContractID,ContractName,b.ChangeDate,cast(round(b.ChangeMoney,2) as numeric(15,2)) as           ChangeMoney,b.Remark
		from Contract a left join ContractJSTZ b on a. ContractID=b.ContractID 
		where (b.ChangeDate between @BeginDate and @EndDate)  
		--union all
		--select 1,a.ContractID,'小计：',null,SUM(cast(round(b.ChangeMoney,2) as numeric(15,2))),null
		--from Contract a left join ContractJSTZ b on a. ContractID=b.ContractID 
		--where (b.ChangeDate between @BeginDate and @EndDate)
		--group by a.ContractID
		--order by a.ContractID,id 
    end
    else
    begin
		select 0 as id,CASE AdjustType WHEN NULL THEN '未知类型' ELSE AdjustType END AdjustType,a.ContractID,ContractName,b.ChangeDate,cast(round(b.ChangeMoney,2) as numeric(15,2)) as           ChangeMoney,b.Remark
		from Contract a left join ContractJSTZ b on a. ContractID=b.ContractID 
		where (b.ChangeDate between @BeginDate and @EndDate) and  ContractName like '%' + @ContractName + '%'
		--union all
		--select 1,a.ContractID,'小计：',null,SUM(cast(round(b.ChangeMoney,2) as numeric(15,2))),null
		--from Contract a left join ContractJSTZ b on a. ContractID=b.ContractID 
		--where (b.ChangeDate between @BeginDate and @EndDate) and  ContractName like '%' + @ContractName + '%'
		--group by a.ContractID
		--order by a.ContractID,id;
    end
SET NOCOUNT OFF;
END

--exec sp_rpt_Jstz '2016-01-01','2016-09-10',''
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Creating [dbo].[sp_rpt_HNTJS]'
GO
-- Stored Procedure

CREATE PROCEDURE [dbo].[sp_rpt_HNTJS]
( 

	@ID varchar(100),
	@BeginDate DATETIME,
	@EndDate DATETIME,
    @type VARCHAR(10)
)
AS
BEGIN
SET NOCOUNT ON;

    IF @type='1' --有运费
    begin
		select ContractID,CONVERT(varchar(100),ProduceDate,23) as pdate,ConsPos,ConStrength,SignInCube,CastMode,SlurryCount,
		dbo.GetConPrice(ContractID,ConStrength,ProduceDate) as jbprice,
		dbo.GetConAddPrice(ContractID,ConStrength,ProduceDate) as zjprice,
		dbo.GetConTranPrice(ContractID,ConStrength,ProduceDate) as tranprice 
		into #T1 
		from shippingdocument
		where (IsJS is null or IsJS<>1) and  ContractID=@ID 
		AND ShippingDocument.ProduceDate>=@BeginDate AND ShippingDocument.ProduceDate<=@EndDate

		select sum(SignInCube*tranprice) as tranmoney,
		sum(SignInCube*(jbprice+zjprice)) as totalmoney,ContractID
		into #T2 
		from #T1 
		group by ContractID

		select pdate,ConsPos,ConStrength,SignInCube,CastMode,SlurryCount,jbprice,zjprice,tranprice,tranmoney,totalmoney
		from #T1 left join #T2 on #T1.ContractID=#T2.ContractID
        Drop Table #T1
	    Drop Table #T2
    END
    IF @type='2' --无运费
    begin
		select ContractID,CONVERT(varchar(100),ProduceDate,23) as pdate,ConsPos,ConStrength,SignInCube,CastMode,SlurryCount,
		dbo.GetConPrice(ContractID,ConStrength,ProduceDate) as jbprice,
		dbo.GetConAddPrice(ContractID,ConStrength,ProduceDate) as zjprice
		into #T3 
		from shippingdocument
		where (IsJS is null or IsJS<>1) and  ContractID=@ID 
		AND ShippingDocument.ProduceDate>=@BeginDate AND ShippingDocument.ProduceDate<=@EndDate

		select sum(SignInCube*(jbprice+zjprice)) as totalmoney,ContractID
		into #T4 
		from #T3 
		group by ContractID

		select pdate,ConsPos,ConStrength,SignInCube,CastMode,SlurryCount,jbprice,zjprice,totalmoney
		from #T3 left join #T4 on #T3.ContractID=#T4.ContractID
        Drop Table #T3
	    Drop Table #T4
    END
    
    
	

SET NOCOUNT OFF;
END

GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Refreshing [dbo].[view_ProduceTasks]'
GO
EXEC sp_refreshview N'[dbo].[view_ProduceTasks]'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Refreshing [dbo].[view_ConsMixprop]'
GO
EXEC sp_refreshview N'[dbo].[view_ConsMixprop]'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Creating [dbo].[sp_rpt_SaleDeductPer]'
GO
SET QUOTED_IDENTIFIER ON
GO
/****** Object:  Stored Procedure dbo.sp_rpt_CarReport    Script Date: 2012-6-5 9:12:05 ******/
-- =============================================
-- Author:		lzl
-- Create date: 2016/8/18
-- Description:	商砼销售提成考核明细表
-- =============================================
CREATE PROCEDURE [dbo].[sp_rpt_SaleDeductPer]
( 
	@Month NVARCHAR(30)
)
AS
BEGIN	 

--DECLARE @Month NVARCHAR(30)
--SET @Month='201608'
DECLARE @StartDateTime VARCHAR(30) ,
        @EndDateTime VARCHAR(30) ,
        @ChangeTime VARCHAR(20),
        @ChangeDay VARCHAR(10),
        @StartDateYear VARCHAR(30)
    SELECT  @ChangeTime = ConfigValue
    FROM    dbo.SysConfig 
    WHERE   ConfigName = 'ChangeTime'
    SELECT  @ChangeDay = ConfigValue
    FROM    dbo.SysConfig
    WHERE   ConfigName = 'ChangeDay'
    IF @ChangeTime IS NULL 
        SET @ChangeTime = '00:00'
    IF @ChangeDay IS NULL
        SET @ChangeDay='01'
    SET @EndDateTime =  substring(@Month,0,5)+'-'+substring(@Month,5,2)+'-'+ @ChangeDay + ' ' + @ChangeTime 
    SET @StartDateTime =convert(varchar(30),DATEADD(m, -1,convert(datetime,@EndDateTime)),23)+' '+@ChangeTime
    SET @StartDateYear =convert(varchar(30),convert(datetime,convert(varchar(4),convert(int,substring(@Month,0,5))-1)+'-12-'+ @ChangeDay)+1,23)+' '+@ChangeTime

DECLARE @BeginDate VARCHAR(20)
SET @BeginDate=@EndDateTime

---结算调整（最近结算时间）    
select contractid,max(ChangeDate) as JSDate 
into #T11 
from contractJSTZ 
where ChangeDate< @BeginDate 
group by contractid
---结算调整（调整金额）   
select ContractID,Sum(ChangeMoney) as tiaozheng 
into #T2 from ContractJSTZ 
where ChangeDate<@BeginDate 
group by ContractID
---结算调整（调整金额）上个月
select ContractID,Sum(ChangeMoney) as tiaozheng1 
into #T3 
from ContractJSTZ 
where ChangeDate<dateadd(month,-1,@BeginDate) group by ContractID
--上个月欠款
select contractid,Sum(signincube*(dbo.getConAddPrice(contractid,constrength,producedate)+dbo.GetConPrice(contractid,constrength,producedate))) as dangqian1 
into #T4 
from shippingdocument 
where producedate<dateadd(month,-1,@BeginDate) and IsEffective=1  
group by ContractID
--上个月付款
select ContractID,Sum(PayMoney) as yifu1 
into #T5 
from ContractPay where PayDate<dateadd(month,-1,@BeginDate)  group by ContractID 
--本月欠款
select contractid,Sum(signincube*(dbo.getConAddPrice(contractid,constrength,producedate)+dbo.GetConPrice(contractid,constrength,producedate))) as dangqian 
into #T6 
from shippingdocument 
where producedate<@BeginDate and IsEffective=1  group by ContractID
--本月付款
select ContractID,Sum(PayMoney) as yifu 
into #T7 
from ContractPay 
where PayDate<@BeginDate  group by ContractID 
--本月甲供
select ContractID,Sum(PayMoney) as jg 
into #T10 
from ContractPay 
where PayDate<@BeginDate and paytype='ContractPayType5' or paytype='ContractPayType6'  group by ContractID 
--上月甲供
select ContractID,Sum(PayMoney) as jg1 
into #T9 
from ContractPay 
where PayDate<dateadd(month,-1,@BeginDate) and paytype='ContractPayType5' or paytype='ContractPayType6'  group by ContractID 
--
select #T11.contractid,Sum(signincube*(dbo.getConAddPrice(#T11.contractid,constrength,producedate)+dbo.GetConPrice(#T11.contractid,constrength,producedate))) as JE 
into #T8 
from #T11 left join shippingdocument on #T11.ContractID=shippingdocument.ContractID 
where IsEffective=1 and producedate<JSDate group by #T11.ContractID	

--临时contract
select Contract.contractid,Salesman,Contract.ContractName,BusinessType,JsCoefficient,QyCoefficient,HkCoefficient,DeductPerPrice
,Dianzi0,Dianzi1,Dianzi2,Dianzi3,Dianzi4,Dianzi5,Dianzi6,Dianzi7
,SUM(contract.SignTotalCube) QyCube,SUM(ShippingDocument.SignInCube) JsCube
INTO #ContractTemp
from project 
join producetasks on producetasks.projectid=project.projectid 
join shippingdocument on shippingdocument.taskid=producetasks.taskid 
join [contract] on [contract].contractid=project.contractid
where shippingdocument.IsEffective=1 
group by Contract.contractid,[contract].contractname,contract.BusinessType,[contract].ContractID,JsCoefficient,QyCoefficient,HkCoefficient,Salesman,DeductPerPrice
,Dianzi0,Dianzi1,Dianzi2,Dianzi3,Dianzi4,Dianzi5,Dianzi6,Dianzi7
ORDER BY Contract.ContractID

--
SELECT *,Jtgz-Kjgz AS Hjgz FROM(
	SELECT *
	,qian1 AS Zqk  --总欠款
	,yigong1-yishou1-qian1 AS Dz  --垫资
	,qian1-(yigong1-yishou1-qian1) AS Wdq  --月初到期欠款
	,yishou-yishou1 AS Byhk   --本月回款金额
	,qian1-(yigong1-yishou1-qian1)-(yishou-yishou1) AS Wsq --月末到期欠款
	,JsCube*JsCoefficient+QyCube*QyCoefficient+(yishou-yishou1)*HkCoefficient/DeductPerPrice AS Jtgz --计提工资
	,(qian1-(yigong1-yishou1-qian1)-(yishou-yishou1))*HkCoefficient/(DeductPerPrice*3) AS Kjgz  --扣减工资
	FROM (
	select T1.contractid,Salesman,ContractName,BusinessType,JsCoefficient,JsCube,QyCoefficient,QyCube,HkCoefficient,DeductPerPrice,isnull(JE,0) as JE,isnull(tiaozheng,0) as tiaozheng,isnull(tiaozheng1,0) as tiaozheng1,isnull(jg,0) as jg,isnull(jg1,0) as jg1,
	isnull(dangqian,0) as yigong,isnull(yifu,0) as yishou,isnull(dangqian1,0) as yigong1,isnull(yifu1,0) as yishou1,
	dbo.getDayu0(isnull(dangqian,0),dbo.GetStuffQianPrice(isnull(dbo.GetContractMoneyMove(T1.ContractID,dateadd(month,-isnull(T1.Dianzi4,0),@BeginDate)),0),isnull(T1.Dianzi1,0),isnull(T1.Dianzi2,0),isnull(T1.Dianzi3,100)) - dbo.GetHuanDianZi(isnull(dbo.GetContractMoneyMove(T1.ContractID,dateadd(month,-isnull(T1.Dianzi7,0)-isnull(T1.Dianzi4,0),@BeginDate)),0),isnull(T1.Dianzi1,0),isnull(T1.Dianzi2,0),isnull(T1.Dianzi3,100),isnull(T1.Dianzi6,0))+isnull(dangqian,0)-isnull(dbo.GetContractMoneyMove(T1.ContractID,dateadd(month,-isnull(T1.Dianzi4,0),@BeginDate)),0)+isnull(yifu,0)) as qian,
	dbo.getDayu0(isnull(dbo.GetContractMoneyMove(T1.ContractID,dateadd(month,-1,@BeginDate)),0),dbo.GetStuffQianPrice(isnull(dbo.GetContractMoneyMove(T1.ContractID,dateadd(month,-1-isnull(T1.Dianzi4,0),@BeginDate)),0),isnull(T1.Dianzi1,0),isnull(T1.Dianzi2,0),isnull(T1.Dianzi3,100)) - dbo.GetHuanDianZi(isnull(dbo.GetContractMoneyMove(T1.ContractID,dateadd(month,-1-isnull(T1.Dianzi7,0)-isnull(T1.Dianzi4,0),@BeginDate)),0),isnull(T1.Dianzi1,0),isnull(T1.Dianzi2,0),isnull(T1.Dianzi3,100),isnull(T1.Dianzi6,0))+isnull(dbo.GetContractMoneyMove(T1.ContractID,dateadd(month,-1,@BeginDate)),0)-isnull(dbo.GetContractMoneyMove(T1.ContractID,dateadd(month,-1-isnull(T1.Dianzi4,0),@BeginDate)),0)+isnull(yifu,0)) as qian1
	from #ContractTemp T1 
	--left join customer on T1.customerID=customer.customerID
	left join #T2 T2 on T1.ContractID=T2.ContractID 
	left join #T3 T3 on T1.ContractID=T3.ContractID 
	left join #T4 T4 on T1.ContractID=T4.ContractID 
	left join #T5 T5 on T1.ContractID=T5.ContractID 
	left join #T6 T6 on T1.ContractID=T6.ContractID 
	left join #T7 T7 on T1.ContractID=T7.ContractID 
	left join #T8 T8 on T1.ContractID=T8.ContractID 
	left join #T9 T9 on T1.ContractID=T9.ContractID 
	left join #T10 T10 on T1.ContractID=T10.ContractID 
	left join #T11 T11 on T1.ContractID=T11.ContractID 
	where 1=1 
	AND ((ISNULL(dangqian,0)-ISNULL(dangqian1,0))>0 OR (ISNULL(yifu,0)-ISNULL(yifu1,0))>0)
	) c
) d

Drop Table #T2
Drop Table #T3
Drop Table #T4
Drop Table #T5
Drop Table #T6
Drop Table #T7
Drop Table #T8
Drop Table #T9
Drop Table #T10
Drop Table #T11

Drop Table #ContractTemp

SET NOCOUNT OFF;
END


-- exec [sp_rpt_SaleDeductPer] '201608'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Altering [dbo].[sp_rpt_CarOil_new]'
GO
SET QUOTED_IDENTIFIER OFF
GO
/****** Object:  Stored Procedure dbo.sp_rpt_GoodIn    Script Date: 2012-6-5 9:12:05 ******/
-- =============================================
-- Author:		JM
-- Create date: 2014/4/21
-- Description:	根据时间段获取物资入库信息
-- =============================================
ALTER PROCEDURE [dbo].[sp_rpt_CarOil_new]
( 
	@BeginDate DATETIME,
	@EndDate DATETIME

)
AS
BEGIN	 
	SET NOCOUNT ON;

	SELECT StuffType.StuffTypeName AS oilname,CarOil.CarID,dic.dicname,
	sum(CarOil.amount) as amount_sum ,
	CarOil.unitprice as unitprice_sum,
	cast(sum(CarOil.totalprice) as decimal(18,2)) as totalprice_sum
	FROM CarOil LEFT JOIN StuffInfo ON caroil.StuffID=StuffInfo.StuffID 
	LEFT JOIN StuffType ON stufftype.StuffTypeID=StuffInfo.StuffTypeID
	inner join Car ON CarOil.CarID = Car.CarID 
	inner join Dic ON Dic.TreeCode = car.cartypeid
	where AddDate between @BeginDate and @EndDate AND StuffType.TypeID='Oil'
	group by CarOil.CarID,CarOil.unitprice,dic.dicname,StuffType.StuffTypeName

SET NOCOUNT OFF;
END

--exec [sp_rpt_CarOil_new] '2010-01-01','2016-07-01' 
--SELECT * FROM CarOil
--SELECT * FROM StuffInfo
--SELECT * FROM StuffType
--SELECT * FROM FinalStuffType
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Creating [dbo].[sp_rpt_ConStrengthStatistics2]'
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE PROCEDURE [dbo].[sp_rpt_ConStrengthStatistics2] 
( 
    @BeginDate varchar(30),
    @EndDate varchar(30)
	
)
AS

-- exec [sp_rpt_ConStrengthStatistics2] '2016-08-01','2016-09-01'
BEGIN	 
	SET NOCOUNT ON;
	DECLARE @StartDateTime varchar(30),@EndDateTime varchar(30),@StartDateYear VARCHAR(30)
	SET @StartDateTime=@BeginDate
	SET @EndDateTime=@EndDate
    SET @StartDateYear = convert(varchar(30),CONVERT(VARCHAR(30),YEAR(@EndDateTime))+'-12-31',23) 
    --select @StartDateTime,@EndDateTime,@StartDateYear
  
    
select x.* from 

(

select a.* from (
select project.projectid,project.projectname,shippingdocument.conStrength,sum(case when shippingdocument.XuCube IS null OR ShippingDocument.XuCube=0 then ShippingDocument.SignInCube else ShippingDocument.XuCube end) sendcube,'0' M,'0' MM,[contract].contractname from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid join [contract] on [contract].contractid=project.contractid
where shippingdocument.produceDate>=@StartDateTime and shippingdocument.produceDate<=@EndDateTime and shippingdocument.IsEffective=1
group by project.projectid,project.projectname,shippingdocument.conStrength,[contract].contractname
union all
select project.projectid,project.projectname,'小计' conStrength,sum(case when shippingdocument.XuCube IS null OR ShippingDocument.XuCube=0 then ShippingDocument.SignInCube else ShippingDocument.XuCube end) sendcube,'1' M,'0' MM,[contract].contractname from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid join [contract] on [contract].contractid=project.contractid
where shippingdocument.produceDate>=@StartDateTime and shippingdocument.produceDate<=@EndDateTime and shippingdocument.IsEffective=1
group by project.projectid,project.projectname,[contract].contractname
union all
select project.projectid,project.projectname,'本年累计' conStrength,sum(case when shippingdocument.XuCube IS null OR ShippingDocument.XuCube=0 then ShippingDocument.SignInCube else ShippingDocument.XuCube end) sendcube,'2' M,'0' MM,[contract].contractname from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid join [contract] on [contract].contractid=project.contractid
where shippingdocument.produceDate>=@StartDateYear and shippingdocument.produceDate<=@EndDateTime and shippingdocument.IsEffective=1
group by project.projectid,project.projectname,[contract].contractname
union all
select project.projectid,project.projectname,'项目累计总方量' conStrength,sum(case when shippingdocument.XuCube IS null OR ShippingDocument.XuCube=0 then ShippingDocument.SignInCube else ShippingDocument.XuCube end) sendcube,'3' M,'0' MM,[contract].contractname from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid join [contract] on [contract].contractid=project.contractid 
where shippingdocument.IsEffective=1
group by project.projectid,project.projectname,[contract].contractname
) a 

--筛选
where a.projectid in 
(
select aa.projectid from (    
select project.projectid,project.projectname,shippingdocument.conStrength,sum(case when shippingdocument.XuCube IS null OR ShippingDocument.XuCube=0 then ShippingDocument.SignInCube else ShippingDocument.XuCube end) sendcube,'0' M,'0' MM from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid
where shippingdocument.produceDate>=@StartDateTime and shippingdocument.produceDate<=@EndDateTime  and shippingdocument.IsEffective=1
group by project.projectid,project.projectname,shippingdocument.conStrength
union all
select project.projectid,project.projectname,'小计' conStrength,sum(case when shippingdocument.XuCube IS null OR ShippingDocument.XuCube=0 then ShippingDocument.SignInCube else ShippingDocument.XuCube end) sendcube,'1' M,'0' MM from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid
where shippingdocument.produceDate>=@StartDateTime and shippingdocument.produceDate<=@EndDateTime and shippingdocument.IsEffective=1
group by project.projectid,project.projectname
union all
select project.projectid,project.projectname,'本年累计' conStrength,sum(case when shippingdocument.XuCube IS null OR ShippingDocument.XuCube=0 then ShippingDocument.SignInCube else ShippingDocument.XuCube end) sendcube,'2' M,'0' MM from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid
where shippingdocument.produceDate>=@StartDateYear and shippingdocument.produceDate<=@EndDateTime and shippingdocument.IsEffective=1
group by project.projectid,project.projectname
union all
select project.projectid,project.projectname,'项目累计总方量' conStrength,sum(case when shippingdocument.XuCube IS null OR ShippingDocument.XuCube=0 then ShippingDocument.SignInCube else ShippingDocument.XuCube end) sendcube,'3' M,'0' MM from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid
where  shippingdocument.IsEffective=1
group by project.projectid,project.projectname
) aa 
group by aa.projectid
having  count(aa.projectid)>3)




union all

select '9999' projectid,'供应小计' projectname,b.conStrength,sum(b.sendcube) sendcube,b.M,b.MM ,'' contractname from
(select project.projectid,project.projectname,shippingdocument.conStrength,sum(case when shippingdocument.XuCube IS null OR ShippingDocument.XuCube=0 then ShippingDocument.SignInCube else ShippingDocument.XuCube end) sendcube,'0' M,'1' MM ,'' contractname from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid
where shippingdocument.produceDate>=@StartDateTime and shippingdocument.produceDate<=@EndDateTime  and shippingdocument.IsEffective=1
group by project.projectid,project.projectname,shippingdocument.conStrength
union all
select project.projectid,project.projectname,'小计' conStrength,sum(case when shippingdocument.XuCube IS null OR ShippingDocument.XuCube=0 then ShippingDocument.SignInCube else ShippingDocument.XuCube end) sendcube,'1' M,'1' MM,'' contractname from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid
where shippingdocument.produceDate>=@StartDateTime and shippingdocument.produceDate<=@EndDateTime and shippingdocument.IsEffective=1
group by project.projectid,project.projectname
union all
select project.projectid,project.projectname,'本年累计' conStrength,sum(case when shippingdocument.XuCube IS null OR ShippingDocument.XuCube=0 then ShippingDocument.SignInCube else ShippingDocument.XuCube end) sendcube,'2' M,'1' MM,'' contractname from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid
where shippingdocument.produceDate>=@StartDateYear and shippingdocument.produceDate<=@EndDateTime and shippingdocument.IsEffective=1

--添加筛选
and  project.projectid in 
(
select aa.projectid from (    
select project.projectid,project.projectname,shippingdocument.conStrength,sum(case when shippingdocument.XuCube IS null OR ShippingDocument.XuCube=0 then ShippingDocument.SignInCube else ShippingDocument.XuCube end) sendcube,'0' M,'0' MM from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid
where shippingdocument.produceDate>=@StartDateTime and shippingdocument.produceDate<=@EndDateTime  and shippingdocument.IsEffective=1
group by project.projectid,project.projectname,shippingdocument.conStrength
union all
select project.projectid,project.projectname,'小计' conStrength,sum(case when shippingdocument.XuCube IS null OR ShippingDocument.XuCube=0 then ShippingDocument.SignInCube else ShippingDocument.XuCube end) sendcube,'1' M,'0' MM from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid
where shippingdocument.produceDate>=@StartDateTime and shippingdocument.produceDate<=@EndDateTime  and shippingdocument.IsEffective=1
group by project.projectid,project.projectname
union all
select project.projectid,project.projectname,'本年累计' conStrength,sum(case when shippingdocument.XuCube IS null OR ShippingDocument.XuCube=0 then ShippingDocument.SignInCube else ShippingDocument.XuCube end) sendcube,'2' M,'0' MM from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid
where shippingdocument.produceDate>=@StartDateYear and shippingdocument.produceDate<=@EndDateTime  and shippingdocument.IsEffective=1
group by project.projectid,project.projectname
union all
select project.projectid,project.projectname,'项目累计总方量' conStrength,sum(case when shippingdocument.XuCube IS null OR ShippingDocument.XuCube=0 then ShippingDocument.SignInCube else ShippingDocument.XuCube end) sendcube,'3' M,'0' MM from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid
where shippingdocument.IsEffective=1
group by project.projectid,project.projectname
) aa 
group by aa.projectid
having  count(aa.projectid)>3)


group by project.projectid,project.projectname
union all
select project.projectid,project.projectname,'项目累计总方量' conStrength,sum(case when shippingdocument.XuCube IS null OR ShippingDocument.XuCube=0 then ShippingDocument.SignInCube else ShippingDocument.XuCube end) sendcube,'3' M,'1' MM,'' contractname from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid

--添加筛选
where shippingdocument.IsEffective=1 and  project.projectid in 
(
select aa.projectid from (    
select project.projectid,project.projectname,shippingdocument.conStrength,sum(case when shippingdocument.XuCube IS null OR ShippingDocument.XuCube=0 then ShippingDocument.SignInCube else ShippingDocument.XuCube end) sendcube,'0' M,'0' MM from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid
where shippingdocument.produceDate>=@StartDateTime and shippingdocument.produceDate<=@EndDateTime  and shippingdocument.IsEffective=1
group by project.projectid,project.projectname,shippingdocument.conStrength
union all
select project.projectid,project.projectname,'小计' conStrength,sum(case when shippingdocument.XuCube IS null OR ShippingDocument.XuCube=0 then ShippingDocument.SignInCube else ShippingDocument.XuCube end) sendcube,'1' M,'0' MM from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid
where shippingdocument.produceDate>=@StartDateTime and shippingdocument.produceDate<=@EndDateTime and shippingdocument.IsEffective=1
group by project.projectid,project.projectname
union all
select project.projectid,project.projectname,'本年累计' conStrength,sum(case when shippingdocument.XuCube IS null OR ShippingDocument.XuCube=0 then ShippingDocument.SignInCube else ShippingDocument.XuCube end) sendcube,'2' M,'0' MM from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid
where shippingdocument.produceDate>=@StartDateYear and shippingdocument.produceDate<=@EndDateTime and shippingdocument.IsEffective=1
group by project.projectid,project.projectname
union all
select project.projectid,project.projectname,'项目累计总方量' conStrength,sum(case when shippingdocument.XuCube IS null OR ShippingDocument.XuCube=0 then ShippingDocument.SignInCube else ShippingDocument.XuCube end) sendcube,'3' M,'0' MM from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid
where shippingdocument.IsEffective=1
group by project.projectid,project.projectname
) aa 
group by aa.projectid
having  count(aa.projectid)>3)

group by project.projectid,project.projectname) b
group by b.conStrength,b.M,b.MM 


union all


select '99999' projectid,'我司代搅拌量' projectname,c.conStrength,sum(c.sendcube) sendcube,c.M,c.MM,'' contractname from
(select project.projectid,project.projectname,shippingdocument.conStrength,sum(case when shippingdocument.XuCube IS null OR ShippingDocument.XuCube=0 then ShippingDocument.SignInCube else ShippingDocument.XuCube end) sendcube,'0' M,'2' MM,'' contractname from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid
where shippingdocument.produceDate>=@StartDateTime and shippingdocument.produceDate<=@EndDateTime  and producetasks.IsCommission=1  and shippingdocument.IsEffective=1
group by project.projectid,project.projectname,shippingdocument.conStrength
union all
select project.projectid,project.projectname,'小计' conStrength,sum(case when shippingdocument.XuCube IS null OR ShippingDocument.XuCube=0 then ShippingDocument.SignInCube else ShippingDocument.XuCube end) sendcube,'1' M,'2' MM,'' contractname from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid
where shippingdocument.produceDate>=@StartDateTime and shippingdocument.produceDate<=@EndDateTime  and producetasks.IsCommission=1 and shippingdocument.IsEffective=1
group by project.projectid,project.projectname
union all
select project.projectid,project.projectname,'本年累计' conStrength,sum(case when shippingdocument.XuCube IS null OR ShippingDocument.XuCube=0 then ShippingDocument.SignInCube else ShippingDocument.XuCube end) sendcube,'2' M,'2' MM,'' contractname from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid
where shippingdocument.produceDate>=@StartDateYear and shippingdocument.produceDate<=@EndDateTime  and producetasks.IsCommission=1  and shippingdocument.IsEffective=1
group by project.projectid,project.projectname
union all
select project.projectid,project.projectname,'项目累计总方量' conStrength,sum(case when shippingdocument.XuCube IS null OR ShippingDocument.XuCube=0 then ShippingDocument.SignInCube else ShippingDocument.XuCube end) sendcube,'3' M,'2' MM,'' contractname from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid  and producetasks.IsCommission=1
where shippingdocument.IsEffective=1
group by project.projectid,project.projectname) c
group by c.conStrength,c.M,c.MM 

union all


select '999999' projectid,'代我司搅拌量' projectname,d.conStrength,sum(d.sendcube) sendcube,d.M,d.MM,'' contractname from
(select project.projectid,project.projectname,producetasks.conStrength,sum(InsteadProduct.productNum) sendcube,'0' M,'2' MM,'' contractname from project join producetasks
on producetasks.projectid=project.projectid join InsteadProduct 
on InsteadProduct.taskid=producetasks.taskid
where InsteadProduct.ProductTime>=@StartDateTime and InsteadProduct.ProductTime<=@EndDateTime 
group by project.projectid,project.projectname,producetasks.conStrength
union all
select project.projectid,project.projectname,'小计' conStrength,sum(InsteadProduct.productNum) sendcube,'1' M,'3' MM,'' contractname from project join producetasks
on producetasks.projectid=project.projectid join InsteadProduct 
on InsteadProduct.taskid=producetasks.taskid
where InsteadProduct.ProductTime>=@StartDateTime and InsteadProduct.ProductTime<=@EndDateTime
group by project.projectid,project.projectname
union all
select project.projectid,project.projectname,'本年累计' conStrength,sum(InsteadProduct.productNum) sendcube,'2' M,'3' MM,'' contractname from project join producetasks
on producetasks.projectid=project.projectid join InsteadProduct 
on InsteadProduct.taskid=producetasks.taskid
where InsteadProduct.ProductTime>=@StartDateYear and InsteadProduct.ProductTime<=@EndDateTime
group by project.projectid,project.projectname
union all
select project.projectid,project.projectname,'项目累计总方量' conStrength,sum(InsteadProduct.productNum) sendcube,'3' M,'3' MM,'' contractname from project join producetasks
on producetasks.projectid=project.projectid join InsteadProduct 
on InsteadProduct.taskid=producetasks.taskid
group by project.projectid,project.projectname) d
group by d.conStrength,d.M,d.MM 

union all

select '9999999' projectid,'我司送出量' projectname,e.conStrength,sum(e.sendcube) sendcube,e.M,e.MM,'' contractname from
(select project.projectid,project.projectname,shippingdocument.conStrength,sum(case when shippingdocument.XuCube IS null OR ShippingDocument.XuCube=0 then ShippingDocument.SignInCube else ShippingDocument.XuCube end) sendcube,'0' M,'4' MM,'' contractname from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid
where shippingdocument.produceDate>=@StartDateTime and shippingdocument.produceDate<=@EndDateTime  and shippingdocument.IsEffective=1
group by project.projectid,project.projectname,shippingdocument.conStrength
union all
select project.projectid,project.projectname,'小计' conStrength,sum(case when shippingdocument.XuCube IS null OR ShippingDocument.XuCube=0 then ShippingDocument.SignInCube else ShippingDocument.XuCube end) sendcube,'1' M,'4' MM,'' contractname from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid
where shippingdocument.produceDate>=@StartDateTime and shippingdocument.produceDate<=@EndDateTime  and shippingdocument.IsEffective=1
group by project.projectid,project.projectname
union all
select project.projectid,project.projectname,'本年累计' conStrength,sum(case when shippingdocument.XuCube IS null OR ShippingDocument.XuCube=0 then ShippingDocument.SignInCube else ShippingDocument.XuCube end) sendcube,'2' M,'4' MM,'' contractname from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid
where shippingdocument.produceDate>=@StartDateYear and shippingdocument.produceDate<=@EndDateTime  and shippingdocument.IsEffective=1
group by project.projectid,project.projectname
union all
select project.projectid,project.projectname,'项目累计总方量' conStrength,sum(case when shippingdocument.XuCube IS null OR ShippingDocument.XuCube=0 then ShippingDocument.SignInCube else ShippingDocument.XuCube end) sendcube,'3' M,'4' MM,'' contractname from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid 
where shippingdocument.IsEffective=1
group by project.projectid,project.projectname) e
group by e.conStrength,e.M,e.MM 

union all

select '99999999' projectid,'拌台数合计' projectname,f.conStrength,sum(f.sendcube) sendcube,f.M,f.MM,'' contractname from
(select project.projectid,project.projectname,shippingdocument.conStrength,sum(case when shippingdocument.XuCube IS null OR ShippingDocument.XuCube=0 then ShippingDocument.SignInCube else ShippingDocument.XuCube end) sendcube,'0' M,'5' MM,'' contractname from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid
where shippingdocument.produceDate>=@StartDateTime and shippingdocument.produceDate<=@EndDateTime  and shippingdocument.IsEffective=1
group by project.projectid,project.projectname,shippingdocument.conStrength
union all
select project.projectid,project.projectname,'小计' conStrength,sum(case when shippingdocument.XuCube IS null OR ShippingDocument.XuCube=0 then ShippingDocument.SignInCube else ShippingDocument.XuCube end) sendcube,'1' M,'5' MM,'' contractname from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid
where shippingdocument.produceDate>=@StartDateTime and shippingdocument.produceDate<=@EndDateTime  and shippingdocument.IsEffective=1
group by project.projectid,project.projectname
union all
select project.projectid,project.projectname,'本年累计' conStrength,sum(case when shippingdocument.XuCube IS null OR ShippingDocument.XuCube=0 then ShippingDocument.SignInCube else ShippingDocument.XuCube end) sendcube,'2' M,'5' MM,'' contractname from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid
where shippingdocument.produceDate>=@StartDateYear and shippingdocument.produceDate<=@EndDateTime  and shippingdocument.IsEffective=1
group by project.projectid,project.projectname
union all
select project.projectid,project.projectname,'项目累计总方量' conStrength,sum(case when shippingdocument.XuCube IS null OR ShippingDocument.XuCube=0 then ShippingDocument.SignInCube else ShippingDocument.XuCube end) sendcube,'3' M,'5' MM,'' contractname from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid 
where shippingdocument.IsEffective=1
group by project.projectid,project.projectname) f
group by f.conStrength,f.M,f.MM 


union all

select '999999999' projectid,'差异（送出量-拌台数）' projectname,g.conStrength,
sum(g.sendcube) sendcube,g.M,g.MM,'' contractname from

(select p1.projectid,p1.projectname,s1.conStrength,

--差异（送出量-拌台数） 砼强度
(sum(case when s1.XuCube IS null OR s1.XuCube=0 then s1.SignInCube else s1.XuCube end)-(select sum(case when shippingdocument.XuCube IS null OR ShippingDocument.XuCube=0 then ShippingDocument.SignInCube else ShippingDocument.XuCube end) from project join producetasks on producetasks.projectid=project.projectid join shippingdocument on shippingdocument.taskid=producetasks.taskid where shippingdocument.produceDate>=@StartDateTime and shippingdocument.produceDate<=@EndDateTime and shippingdocument.conStrength=s1.conStrength and p1.projectid=project.projectid  and shippingdocument.IsEffective=1
group by project.projectid,project.projectname,shippingdocument.conStrength) )
sendcube

,'0' M,'6' MM,'' contractname from project p1 join producetasks
on producetasks.projectid=p1.projectid  join shippingdocument s1
on s1.taskid=producetasks.taskid
where s1.produceDate>=@StartDateTime and s1.produceDate<=@EndDateTime  and s1.IsEffective=1
group by p1.projectid,p1.projectname,s1.conStrength

union all

select p2.projectid,p2.projectname,'小计' conStrength,

--差异（送出量-拌台数） 小计
sum(case when s2.XuCube IS null OR s2.XuCube=0 then s2.SignInCube else s2.XuCube end)-(select sum(case when shippingdocument.XuCube IS null OR ShippingDocument.XuCube=0 then ShippingDocument.SignInCube else ShippingDocument.XuCube end) from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid
where shippingdocument.produceDate>=@StartDateTime and shippingdocument.produceDate<=@EndDateTime  and p2.projectid=project.projectid and shippingdocument.IsEffective=1 group by project.projectid,project.projectname  )
sendcube

,'1' M,'6' MM,'' contractname from project p2 join producetasks
on producetasks.projectid=p2.projectid join shippingdocument  s2
on s2.taskid=producetasks.taskid
where s2.produceDate>=@StartDateTime and s2.produceDate<=@EndDateTime  and s2.IsEffective=1
group by p2.projectid,p2.projectname

union all

select p3.projectid,p3.projectname,'本年累计' conStrength,

--差异（送出量-拌台数） 本年累计
sum(case when s3.XuCube IS null OR s3.XuCube=0 then s3.SignInCube else s3.XuCube end) - (select sum(case when shippingdocument.XuCube IS null OR ShippingDocument.XuCube=0 then ShippingDocument.SignInCube else ShippingDocument.XuCube end) from project join producetasks on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid
where shippingdocument.produceDate>=@StartDateYear and shippingdocument.produceDate<=@EndDateTime  and p3.projectid=project.projectid  and shippingdocument.IsEffective=1 group by project.projectid,project.projectname)
sendcube

,'2' M,'6' MM,'' contractname from project p3 join producetasks
on producetasks.projectid=p3.projectid join shippingdocument  s3
on s3.taskid=producetasks.taskid
where s3.produceDate>=@StartDateYear and s3.produceDate<=@EndDateTime  and s3.IsEffective=1
group by p3.projectid,p3.projectname

union all

select p4.projectid,p4.projectname,'项目累计总方量' conStrength,


sum(case when s4.XuCube IS null OR s4.XuCube=0 then s4.SignInCube else s4.XuCube end) -(select sum(case when shippingdocument.XuCube IS null OR ShippingDocument.XuCube=0 then ShippingDocument.SignInCube else ShippingDocument.XuCube end) from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid and p4.projectid=project.projectid
where shippingdocument.IsEffective=1
group by project.projectid,project.projectname)
sendcube

,'3' M,'6' MM,'' contractname from project p4 join producetasks
on producetasks.projectid=p4.projectid join shippingdocument s4
on s4.taskid=producetasks.taskid 
where s4.IsEffective=1
group by p4.projectid,p4.projectname) g
group by g.conStrength,g.M,g.MM 

) x
order by x.MM,x.projectid,x.M,case when x.conStrength='砂浆' then 'z' else x.conStrength end 


SET NOCOUNT OFF;
END





/****** Object:  StoredProcedure [dbo].[sp_rpt_Signer]    Script Date: 03/21/2016 09:15:42 ******/
SET ANSI_NULLS ON
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Creating [dbo].[sp_rpt_PumpIntoDetail]'
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS OFF
GO

CREATE PROCEDURE [dbo].[sp_rpt_PumpIntoDetail]
( 
    @BeginDate VARCHAR(20),
	@EndDate VARCHAR(20) ,
	@type varchar(10),
	@projectname varchar(100)
)
AS
BEGIN	 
	SET NOCOUNT ON;
if @type=1 --生产方量
BEGIN
	select shippingdocument.ShipDocID,ShippingDocument.CarID,ShippingDocument.ConStrength,projectname,pumpname,produceDate,
	SendCube,TransferCube,ScrapCube,OtherCube,RemainCube,
	--SendCube-transfercube-scrapcube-othercube+remaincube hjcube
	SendCube hjcube
	from shippingdocument join car on car.carid=shippingdocument.pumpname
	where shippingdocument.produceDate>=@BeginDate and shippingdocument.produceDate<=@EndDate 
	and car.cartypeid='CT2' and car.isused='1' and car.BelongTo!='外车' 
	and shippingdocument.IsEffective=1 AND ConStrength<>'砂浆'
	AND projectname=@projectname
	ORDER BY ProduceDate
END

if @type=2 --签收方量
BEGIN
	select shippingdocument.ShipDocID,ShippingDocument.CarID,ShippingDocument.ConStrength,projectname,pumpname,produceDate,
	SendCube,TransferCube,ScrapCube,OtherCube,RemainCube,
	--(case when shippingdocument.XuCube IS null OR ShippingDocument.XuCube=0 then ShippingDocument.SignInCube else ShippingDocument.XuCube end)-transfercube-scrapcube-othercube+remaincube  hjcube
	(case when shippingdocument.XuCube IS null OR ShippingDocument.XuCube=0 then ShippingDocument.SignInCube else ShippingDocument.XuCube end)  hjcube
	from shippingdocument join car on car.carid=shippingdocument.pumpname
	where shippingdocument.produceDate>=@BeginDate and shippingdocument.produceDate<=@EndDate 
	and car.cartypeid='CT2' and car.isused='1' and car.BelongTo!='外车' 
	and shippingdocument.IsEffective=1 AND ConStrength<>'砂浆'
	AND projectname=@projectname
	ORDER BY ProduceDate
END
    SET NOCOUNT OFF;
END


-- exec [sp_rpt_PumpInfoDetail] '2016-04-13 00:00','2016-09-13 00:00','1','北大资源 燕南项目商业街'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Altering [dbo].[sp_rpt_ConStrengthStatistics]'
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
ALTER PROCEDURE [dbo].[sp_rpt_ConStrengthStatistics] 
( 
    @BeginDate varchar(30),
    @EndDate varchar(30)
	
)
AS

-- exec [sp_rpt_ConStrengthStatistics] '2016-08-28 00:00','2016-08-29 00:00'
BEGIN	 
	SET NOCOUNT ON;
	DECLARE @StartDateTime varchar(30),@EndDateTime varchar(30),@StartDateYear VARCHAR(30)
	SET @StartDateTime=@BeginDate
	SET @EndDateTime=@EndDate
    SET @StartDateYear = convert(varchar(30),CONVERT(VARCHAR(30),YEAR(@EndDateTime))+'-01-01',23) 
    --select @StartDateTime,@EndDateTime,@StartDateYear
--筛选条件
select aa.projectid INTO #temp from (    
select project.projectid,project.projectname,shippingdocument.conStrength,sum(case when shippingdocument.XuCube IS null OR ShippingDocument.XuCube=0 then ShippingDocument.SignInCube else ShippingDocument.XuCube end) sendcube,'0' M,'0' MM from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid
where shippingdocument.produceDate>=@StartDateTime and shippingdocument.produceDate<=@EndDateTime  and shippingdocument.IsEffective=1 AND ShippingDocument.ConStrength<>'砂浆' 
group by project.projectid,project.projectname,shippingdocument.conStrength
union all
select project.projectid,project.projectname,'小计' conStrength,sum(case when shippingdocument.XuCube IS null OR ShippingDocument.XuCube=0 then ShippingDocument.SignInCube else ShippingDocument.XuCube end) sendcube,'1' M,'0' MM from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid
where shippingdocument.produceDate>=@StartDateTime and shippingdocument.produceDate<=@EndDateTime  and shippingdocument.IsEffective=1 AND ShippingDocument.ConStrength<>'砂浆' 
group by project.projectid,project.projectname
union all
select project.projectid,project.projectname,'本年累计' conStrength,sum(case when shippingdocument.XuCube IS null OR ShippingDocument.XuCube=0 then ShippingDocument.SignInCube else ShippingDocument.XuCube end) sendcube,'2' M,'0' MM from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid
where shippingdocument.produceDate>=@StartDateYear and shippingdocument.produceDate<=@EndDateTime  and shippingdocument.IsEffective=1 AND ShippingDocument.ConStrength<>'砂浆' 
group by project.projectid,project.projectname
union all
select project.projectid,project.projectname,'项目累计总方量' conStrength,sum(case when shippingdocument.XuCube IS null OR ShippingDocument.XuCube=0 then ShippingDocument.SignInCube else ShippingDocument.XuCube end) sendcube,'3' M,'0' MM from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid
where shippingdocument.IsEffective=1 AND ShippingDocument.ConStrength<>'砂浆' 
group by project.projectid,project.projectname
) aa 
group by aa.projectid
having  count(aa.projectid)>3  

    
select x.* from 

(

select a.* from (
select project.projectid,project.projectname,shippingdocument.conStrength,sum(case when shippingdocument.XuCube IS null OR ShippingDocument.XuCube=0 then ShippingDocument.SignInCube else ShippingDocument.XuCube end) sendcube,'0' M,'0' MM,[contract].contractname from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid join [contract] on [contract].contractid=project.contractid
where shippingdocument.produceDate>=@StartDateTime and shippingdocument.produceDate<=@EndDateTime and shippingdocument.IsEffective=1 AND ShippingDocument.ConStrength<>'砂浆'
group by project.projectid,project.projectname,shippingdocument.conStrength,[contract].contractname
union all
select project.projectid,project.projectname,'小计' conStrength,sum(case when shippingdocument.XuCube IS null OR ShippingDocument.XuCube=0 then ShippingDocument.SignInCube else ShippingDocument.XuCube end) sendcube,'1' M,'0' MM,[contract].contractname from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid join [contract] on [contract].contractid=project.contractid
where shippingdocument.produceDate>=@StartDateTime and shippingdocument.produceDate<=@EndDateTime 
and shippingdocument.IsEffective=1 AND ShippingDocument.ConStrength<>'砂浆'
group by project.projectid,project.projectname,[contract].contractname

union ALL

select project.projectid,project.projectname,'本年累计' conStrength,sum(case when shippingdocument.XuCube IS null OR ShippingDocument.XuCube=0 then ShippingDocument.SignInCube else ShippingDocument.XuCube end) sendcube,'2' M,'0' MM,[contract].contractname from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid join [contract] on [contract].contractid=project.contractid
where shippingdocument.produceDate>=@StartDateYear and shippingdocument.produceDate<=@EndDateTime 
and shippingdocument.IsEffective=1 AND ShippingDocument.ConStrength<>'砂浆'
group by project.projectid,project.projectname,[contract].contractname
union all
select project.projectid,project.projectname,'项目累计总方量' conStrength,sum(case when shippingdocument.XuCube IS null OR ShippingDocument.XuCube=0 then ShippingDocument.SignInCube else ShippingDocument.XuCube end) sendcube,'3' M,'0' MM,[contract].contractname from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid join [contract] on [contract].contractid=project.contractid 
where shippingdocument.IsEffective=1 AND ShippingDocument.ConStrength<>'砂浆'
group by project.projectid,project.projectname,[contract].contractname
) a 

--筛选
where a.projectid in 
(SELECT #temp.projectid FROM #temp)


union all

select '9999' projectid,'供应小计' projectname,b.conStrength,sum(b.sendcube) sendcube,b.M,b.MM ,'' contractname from
(select project.projectid,project.projectname,shippingdocument.conStrength,sum(case when shippingdocument.XuCube IS null OR ShippingDocument.XuCube=0 then ShippingDocument.SignInCube else ShippingDocument.XuCube end) sendcube,'0' M,'1' MM ,'' contractname from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid
where shippingdocument.produceDate>=@StartDateTime and shippingdocument.produceDate<=@EndDateTime  and shippingdocument.IsEffective=1 AND ShippingDocument.ConStrength<>'砂浆' 
group by project.projectid,project.projectname,shippingdocument.conStrength
union all
select project.projectid,project.projectname,'小计' conStrength,sum(case when shippingdocument.XuCube IS null OR ShippingDocument.XuCube=0 then ShippingDocument.SignInCube else ShippingDocument.XuCube end) sendcube,'1' M,'1' MM,'' contractname from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid
where shippingdocument.produceDate>=@StartDateTime and shippingdocument.produceDate<=@EndDateTime and shippingdocument.IsEffective=1 AND ShippingDocument.ConStrength<>'砂浆' 
group by project.projectid,project.projectname
union all
select project.projectid,project.projectname,'本年累计' conStrength,sum(case when shippingdocument.XuCube IS null OR ShippingDocument.XuCube=0 then ShippingDocument.SignInCube else ShippingDocument.XuCube end) sendcube,'2' M,'1' MM,'' contractname 
from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid
where shippingdocument.produceDate>=@StartDateYear and shippingdocument.produceDate<=@EndDateTime 
and shippingdocument.IsEffective=1 AND ShippingDocument.ConStrength<>'砂浆' 

--添加筛选
and  project.projectid in 
(SELECT #temp.projectid FROM #temp)


group by project.projectid,project.projectname
union all
select project.projectid,project.projectname,'项目累计总方量' conStrength,sum(case when shippingdocument.XuCube IS null OR ShippingDocument.XuCube=0 then ShippingDocument.SignInCube else ShippingDocument.XuCube end) sendcube,'3' M,'1' MM,'' contractname 
from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid
--添加筛选
where shippingdocument.IsEffective=1 AND ShippingDocument.ConStrength<>'砂浆' and  project.projectid in 
(SELECT #temp.projectid FROM #temp)

group by project.projectid,project.projectname) b
group by b.conStrength,b.M,b.MM 


union all


select '99999' projectid,'加：我司代搅拌量' projectname,c.conStrength,sum(c.sendcube) sendcube,c.M,c.MM,'' contractname from
(select project.projectid,project.projectname,shippingdocument.conStrength,sum(case when shippingdocument.XuCube IS null OR ShippingDocument.XuCube=0 then ShippingDocument.SignInCube else ShippingDocument.XuCube end) sendcube,'0' M,'2' MM,'' contractname from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid
where shippingdocument.produceDate>=@StartDateTime and shippingdocument.produceDate<=@EndDateTime  and producetasks.IsCommission=1  and shippingdocument.IsEffective=1 AND ShippingDocument.ConStrength<>'砂浆' 
group by project.projectid,project.projectname,shippingdocument.conStrength
union all
select project.projectid,project.projectname,'小计' conStrength,sum(case when shippingdocument.XuCube IS null OR ShippingDocument.XuCube=0 then ShippingDocument.SignInCube else ShippingDocument.XuCube end) sendcube,'1' M,'2' MM,'' contractname from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid
where shippingdocument.produceDate>=@StartDateTime and shippingdocument.produceDate<=@EndDateTime  and producetasks.IsCommission=1 and shippingdocument.IsEffective=1 AND ShippingDocument.ConStrength<>'砂浆' 
group by project.projectid,project.projectname
union all
select project.projectid,project.projectname,'本年累计' conStrength,sum(case when shippingdocument.XuCube IS null OR ShippingDocument.XuCube=0 then ShippingDocument.SignInCube else ShippingDocument.XuCube end) sendcube,'2' M,'2' MM,'' contractname from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid
where shippingdocument.produceDate>=@StartDateYear and shippingdocument.produceDate<=@EndDateTime  and producetasks.IsCommission=1  and shippingdocument.IsEffective=1 AND ShippingDocument.ConStrength<>'砂浆' 
group by project.projectid,project.projectname
union all
select project.projectid,project.projectname,'项目累计总方量' conStrength,sum(case when shippingdocument.XuCube IS null OR ShippingDocument.XuCube=0 then ShippingDocument.SignInCube else ShippingDocument.XuCube end) sendcube,'3' M,'2' MM,'' contractname from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid  and producetasks.IsCommission=1
where shippingdocument.IsEffective=1 AND ShippingDocument.ConStrength<>'砂浆' 
group by project.projectid,project.projectname) c
group by c.conStrength,c.M,c.MM 

union all


select '999999' projectid,'减：代我司搅拌量【'+ProductName+'】' projectname,d.conStrength,sum(d.sendcube) sendcube,d.M,d.MM,'' contractname 

from
(select project.projectid,project.projectname,producetasks.conStrength,sum(InsteadProduct.productNum) sendcube,'0' M,'2' MM,'' contractname 
,InsteadProduct.ProductName
from project join producetasks
on producetasks.projectid=project.projectid join InsteadProduct 
on InsteadProduct.taskid=producetasks.taskid
where InsteadProduct.ProductTime>=@StartDateTime and InsteadProduct.ProductTime<=@EndDateTime 
group by project.projectid,project.projectname,producetasks.conStrength,InsteadProduct.ProductName
union all
select project.projectid,project.projectname,'小计' conStrength,sum(InsteadProduct.productNum) sendcube,'1' M,'3' MM,'' contractname 
,InsteadProduct.ProductName
from project join producetasks
on producetasks.projectid=project.projectid join InsteadProduct 
on InsteadProduct.taskid=producetasks.taskid
where InsteadProduct.ProductTime>=@StartDateTime and InsteadProduct.ProductTime<=@EndDateTime
group by project.projectid,project.projectname,InsteadProduct.ProductName
union all
select project.projectid,project.projectname,'本年累计' conStrength,sum(InsteadProduct.productNum) sendcube,'2' M,'3' MM,'' contractname 
,InsteadProduct.ProductName
from project join producetasks
on producetasks.projectid=project.projectid join InsteadProduct 
on InsteadProduct.taskid=producetasks.taskid
where InsteadProduct.ProductTime>=@StartDateYear and InsteadProduct.ProductTime<=@EndDateTime
group by project.projectid,project.projectname,InsteadProduct.ProductName
union all
select project.projectid,project.projectname,'项目累计总方量' conStrength,sum(InsteadProduct.productNum) sendcube,'3' M,'3' MM,'' contractname 
,InsteadProduct.ProductName
from project join producetasks
on producetasks.projectid=project.projectid join InsteadProduct 
on InsteadProduct.taskid=producetasks.taskid
group by project.projectid,project.projectname,InsteadProduct.ProductName
) d
group by d.conStrength,d.M,d.MM,ProductName


union all

select '9999999' projectid,'我司送出量' projectname,e.conStrength,sum(e.sendcube) sendcube,e.M,e.MM,'' contractname from
(select project.projectid,project.projectname,shippingdocument.conStrength,sum(case when shippingdocument.XuCube IS null OR ShippingDocument.XuCube=0 then ShippingDocument.SignInCube else ShippingDocument.XuCube end) sendcube,'0' M,'4' MM,'' contractname from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid
where shippingdocument.produceDate>=@StartDateTime and shippingdocument.produceDate<=@EndDateTime  and shippingdocument.IsEffective=1 AND ShippingDocument.ConStrength<>'砂浆' 
group by project.projectid,project.projectname,shippingdocument.conStrength
union all
select project.projectid,project.projectname,'小计' conStrength,sum(case when shippingdocument.XuCube IS null OR ShippingDocument.XuCube=0 then ShippingDocument.SignInCube else ShippingDocument.XuCube end) sendcube,'1' M,'4' MM,'' contractname from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid
where shippingdocument.produceDate>=@StartDateTime and shippingdocument.produceDate<=@EndDateTime  and shippingdocument.IsEffective=1 AND ShippingDocument.ConStrength<>'砂浆' 
group by project.projectid,project.projectname
union all
select project.projectid,project.projectname,'本年累计' conStrength,sum(case when shippingdocument.XuCube IS null OR ShippingDocument.XuCube=0 then ShippingDocument.SignInCube else ShippingDocument.XuCube end) sendcube,'2' M,'4' MM,'' contractname from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid
where shippingdocument.produceDate>=@StartDateYear and shippingdocument.produceDate<=@EndDateTime  and shippingdocument.IsEffective=1 AND ShippingDocument.ConStrength<>'砂浆' 
group by project.projectid,project.projectname
union all
select project.projectid,project.projectname,'项目累计总方量' conStrength,sum(case when shippingdocument.XuCube IS null OR ShippingDocument.XuCube=0 then ShippingDocument.SignInCube else ShippingDocument.XuCube end) sendcube,'3' M,'4' MM,'' contractname from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid 
where shippingdocument.IsEffective=1 AND ShippingDocument.ConStrength<>'砂浆' 
group by project.projectid,project.projectname) e
group by e.conStrength,e.M,e.MM 

union all

select '99999999' projectid,'拌台数合计' projectname,f.conStrength,
sum(f.sendcube) sendcube,f.M,f.MM,'' contractname from
(select project.projectid,project.projectname,shippingdocument.conStrength,
sum(case when shippingdocument.XuCube IS null OR ShippingDocument.XuCube=0 then ShippingDocument.SendCube else ShippingDocument.XuCube end) sendcube,'0' M,'5' MM,'' contractname from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid
where shippingdocument.produceDate>=@StartDateTime and shippingdocument.produceDate<=@EndDateTime  and shippingdocument.IsEffective=1 AND ShippingDocument.ConStrength<>'砂浆' 
group by project.projectid,project.projectname,shippingdocument.conStrength
union all
select project.projectid,project.projectname,'小计' conStrength,
sum(case when shippingdocument.XuCube IS null OR ShippingDocument.XuCube=0 then ShippingDocument.SendCube else ShippingDocument.XuCube end) sendcube,'1' M,'5' MM,'' contractname from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid
where shippingdocument.produceDate>=@StartDateTime and shippingdocument.produceDate<=@EndDateTime  and shippingdocument.IsEffective=1 AND ShippingDocument.ConStrength<>'砂浆' 
group by project.projectid,project.projectname
union all
select project.projectid,project.projectname,'本年累计' conStrength,
sum(case when shippingdocument.XuCube IS null OR ShippingDocument.XuCube=0 then ShippingDocument.SendCube else ShippingDocument.XuCube end) sendcube,'2' M,'5' MM,'' contractname from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid
where shippingdocument.produceDate>=@StartDateYear and shippingdocument.produceDate<=@EndDateTime  and shippingdocument.IsEffective=1 AND ShippingDocument.ConStrength<>'砂浆' 
group by project.projectid,project.projectname
union all
select project.projectid,project.projectname,'项目累计总方量' conStrength,
sum(case when shippingdocument.XuCube IS null OR ShippingDocument.XuCube=0 then ShippingDocument.SendCube else ShippingDocument.XuCube end) sendcube,'3' M,'5' MM,'' contractname from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid 
where shippingdocument.IsEffective=1 AND ShippingDocument.ConStrength<>'砂浆' 
group by project.projectid,project.projectname) f
group by f.conStrength,f.M,f.MM 


union all

select '999999999' projectid,'差异（送出量-拌台数）' projectname,g.conStrength,
sum(g.sendcube) sendcube,g.M,g.MM,'' contractname from

(select p1.projectid,p1.projectname,s1.conStrength,

--差异（送出量-拌台数） 砼强度
(sum(case when s1.XuCube IS null OR s1.XuCube=0 then s1.SignInCube else s1.XuCube end)-(select sum(case when shippingdocument.XuCube IS null OR ShippingDocument.XuCube=0 then ShippingDocument.SendCube else ShippingDocument.XuCube end) 
from project join producetasks 
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid 
where shippingdocument.produceDate>=@StartDateTime and shippingdocument.produceDate<=@EndDateTime and shippingdocument.conStrength=s1.conStrength and p1.projectid=project.projectid  and shippingdocument.IsEffective=1
group by project.projectid,project.projectname,shippingdocument.conStrength) )
sendcube

,'0' M,'6' MM,'' contractname from project p1 join producetasks
on producetasks.projectid=p1.projectid  join shippingdocument s1
on s1.taskid=producetasks.taskid
where s1.produceDate>=@StartDateTime and s1.produceDate<=@EndDateTime  and s1.IsEffective=1 AND s1.ConStrength<>'砂浆' 
group by p1.projectid,p1.projectname,s1.conStrength

union all

select p2.projectid,p2.projectname,'小计' conStrength,

--差异（送出量-拌台数） 小计
sum(case when s2.XuCube IS null OR s2.XuCube=0 then s2.SignInCube else s2.XuCube end)-(select sum(case when shippingdocument.XuCube IS null OR ShippingDocument.XuCube=0 then ShippingDocument.SendCube else ShippingDocument.XuCube end) 
from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid
where shippingdocument.produceDate>=@StartDateTime and shippingdocument.produceDate<=@EndDateTime  and p2.projectid=project.projectid and shippingdocument.IsEffective=1 AND ShippingDocument.ConStrength<>'砂浆'
group by project.projectid,project.projectname  )
sendcube

,'1' M,'6' MM,'' contractname from project p2 join producetasks
on producetasks.projectid=p2.projectid join shippingdocument  s2
on s2.taskid=producetasks.taskid
where s2.produceDate>=@StartDateTime and s2.produceDate<=@EndDateTime  and s2.IsEffective=1 AND s2.ConStrength<>'砂浆' 
group by p2.projectid,p2.projectname

union all

select p3.projectid,p3.projectname,'本年累计' conStrength,

--差异（送出量-拌台数） 本年累计
sum(case when s3.XuCube IS null OR s3.XuCube=0 then s3.SignInCube else s3.XuCube end) - (select sum(case when shippingdocument.XuCube IS null OR ShippingDocument.XuCube=0 then ShippingDocument.SendCube else ShippingDocument.XuCube end) 
from project join producetasks on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid
where shippingdocument.produceDate>=@StartDateYear and shippingdocument.produceDate<=@EndDateTime  
and p3.projectid=project.projectid  
and shippingdocument.IsEffective=1 AND shippingdocument.ConStrength<>'砂浆' 
group by project.projectid,project.projectname)
sendcube

,'2' M,'6' MM,'' contractname from project p3 join producetasks
on producetasks.projectid=p3.projectid join shippingdocument  s3
on s3.taskid=producetasks.taskid
where s3.produceDate>=@StartDateYear and s3.produceDate<=@EndDateTime  and s3.IsEffective=1 AND s3.ConStrength<>'砂浆' 
group by p3.projectid,p3.projectname

union all

select p4.projectid,p4.projectname,'项目累计总方量' conStrength,
sum(case when s4.XuCube IS null OR s4.XuCube=0 then s4.SignInCube else s4.XuCube end) -(select sum(case when shippingdocument.XuCube IS null OR ShippingDocument.XuCube=0 then ShippingDocument.SendCube else ShippingDocument.XuCube end) 
from project join producetasks
on producetasks.projectid=project.projectid join shippingdocument 
on shippingdocument.taskid=producetasks.taskid and p4.projectid=project.projectid
where shippingdocument.IsEffective=1 AND ShippingDocument.ConStrength<>'砂浆' 
group by project.projectid,project.projectname)
sendcube

,'3' M,'6' MM,'' contractname from project p4 join producetasks
on producetasks.projectid=p4.projectid join shippingdocument s4
on s4.taskid=producetasks.taskid 
where s4.IsEffective=1 AND s4.ConStrength<>'砂浆' 
group by p4.projectid,p4.projectname) g
group by g.conStrength,g.M,g.MM 

) x
order by x.MM,x.projectid,x.M,case when x.conStrength='砂浆' then 'z' else x.conStrength end 


SET NOCOUNT OFF;
END





/****** Object:  StoredProcedure [dbo].[sp_rpt_Signer]    Script Date: 03/21/2016 09:15:42 ******/
SET ANSI_NULLS ON
-- exec [sp_rpt_ConStrengthStatistics] '2016-06-01 00:00','2016-06-02 00:00'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Altering [dbo].[sp_rpt_Signer]'
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS OFF
GO
-- Stored Procedure

ALTER PROCEDURE [dbo].[sp_rpt_Signer] 
( 
	@BeginDate VARCHAR(20),
	@EndDate VARCHAR(20)
)
AS
BEGIN	 
	SET NOCOUNT ON;
SELECT userid,truename,SUM(sendcube) sendcube,SUM(sendcube2) sendcube2,sum(othercube) othercube,sum(XuCube) xucube
FROM(
	select userid,truename,
	CASE WHEN ConStrength<>'砂浆' THEN SUM(sendcube) ELSE 0 END AS sendcube,
	CASE WHEN ConStrength='砂浆' THEN SUM(sendcube) ELSE 0 END AS sendcube2,
	sum(othercube) othercube ,sum(XuCube) xucube 
	from users 
	join shippingdocument on shippingdocument.signer=users.userid --where usertype='02' 
	and ProduceDate>=@BeginDate and ProduceDate<=@EndDate and shippingdocument.IsEffective=1
	group by userid,truename,ConStrength
) c
GROUP BY userid,truename
SET NOCOUNT OFF;
END




SET ANSI_NULLS ON


-- exec [sp_rpt_Signer] '2016-01-01 00:00','2016-09-01 00:00'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Altering [dbo].[sp_rpt_PumpMan]'
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO

ALTER PROCEDURE [dbo].[sp_rpt_PumpMan] 
( 
	@BeginDate VARCHAR(20),
	@EndDate VARCHAR(20)
)
AS
BEGIN	 
	SET NOCOUNT ON;
	--DECLARE @StartDateTime VARCHAR(30) ,
 --       @EndDateTime VARCHAR(30) ,
 --       @ChangeTime VARCHAR(20),
 --       @ChangeDay VARCHAR(10),
 --       @StartDateYear VARCHAR(30)
 --   SELECT  @ChangeTime = ConfigValue
 --   FROM    dbo.SysConfig
 --   WHERE   ConfigName = 'ChangeTime'
 --   SELECT  @ChangeDay = ConfigValue
 --   FROM    dbo.SysConfig
 --   WHERE   ConfigName = 'ChangeDay'
 --   IF @ChangeTime IS NULL 
 --       SET @ChangeTime = '00:00'
 --   IF @ChangeDay IS NULL
 --       SET @ChangeDay='01'
 --   SET @EndDateTime =  substring(@Month,0,5)+'-'+substring(@Month,5,2)+'-'+ @ChangeDay + ' ' + @ChangeTime 
 --   SET @StartDateTime =convert(varchar(30),DATEADD(m, -1,convert(datetime,@EndDateTime)+1),23)+' '+@ChangeTime

SELECT truename,pumpName,xucube,SUM(fl1) AS sendcube,SUM(fl2) AS sendcube2 FROM (    
	select userid,truename,pumpName,
	CASE WHEN ConStrength<>'砂浆' THEN 
	sum(case when shippingdocument.XuCube IS null OR ShippingDocument.XuCube=0 then ShippingDocument.SignInCube else ShippingDocument.XuCube end)  
	 ELSE 0 END AS fl1,
	CASE WHEN ConStrength='砂浆' THEN 
	sum(case when shippingdocument.XuCube IS null OR ShippingDocument.XuCube=0 then ShippingDocument.SignInCube else ShippingDocument.XuCube end) 
	 ELSE 0 END AS fl2,
	sum(shippingdocument.XuCube) xucube 
	from users LEFT join shippingdocument on shippingdocument.PumpMan=users.userid 
	where usertype='52' and ProduceDate>=@BeginDate and ProduceDate<=@EndDate and shippingdocument.IsEffective=1

	group by userid,truename,pumpName,ConStrength

) a WHERE pumpname IS NOT NULL
GROUP BY truename,pumpName,xucube
order by truename,pumpName
SET NOCOUNT OFF;
END

--  exec [sp_rpt_PumpMan] '2016-05-30 00:00','2016-08-31 00:00'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Refreshing [dbo].[view_Project]'
GO
EXEC sp_refreshview N'[dbo].[view_Project]'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Altering [dbo].[TZRalationHistory]'
GO
ALTER TABLE [dbo].[TZRalationHistory] ADD
[TzRalationFlag] [varchar] (100) COLLATE Chinese_PRC_CI_AS NULL
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Rebuilding [dbo].[SysFunc]'
GO
CREATE TABLE [dbo].[tmp_rg_xx_SysFunc]
(
[SysFuncID] [dictype] NOT NULL,
[FuncName] [shorttext] NULL,
[FuncDesc] [mlongtext] NULL,
[ParentID] [dictype] NULL,
[IsLeaf] [yeorno] NOT NULL,
[ButtonPos] [int] NULL,
[IsButton] [yeorno] NOT NULL,
[Icon] [shorttext] NULL,
[URL] [nvarchar] (800) COLLATE Chinese_PRC_CI_AS NULL,
[IsDisabled] [yeorno] NOT NULL,
[HandlerName] [shorttext] NULL,
[HandlerFile] [longtext] NULL,
[Flag] [int] NULL,
[OrderNum] [int] NULL,
[Builder] [names] NULL,
[BuildTime] [dt] NULL,
[Modifier] [names] NULL,
[ModifyTime] [dt] NULL,
[Version] [version] NULL,
[Lifecycle] [status] NULL,
[AutoID] [serialnumber] NOT NULL IDENTITY(1, 1)
)
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_bindefault N'[dbo].[D_0]', N'[dbo].[tmp_rg_xx_SysFunc].[IsLeaf]'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_bindefault N'[dbo].[D_0]', N'[dbo].[tmp_rg_xx_SysFunc].[IsButton]'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_bindefault N'[dbo].[D_0]', N'[dbo].[tmp_rg_xx_SysFunc].[IsDisabled]'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_bindefault N'[dbo].[D_1]', N'[dbo].[tmp_rg_xx_SysFunc].[Version]'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_bindefault N'[dbo].[D_0]', N'[dbo].[tmp_rg_xx_SysFunc].[Lifecycle]'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
SET IDENTITY_INSERT [dbo].[tmp_rg_xx_SysFunc] ON
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
INSERT INTO [dbo].[tmp_rg_xx_SysFunc]([SysFuncID], [FuncName], [FuncDesc], [ParentID], [IsLeaf], [ButtonPos], [IsButton], [Icon], [URL], [IsDisabled], [HandlerName], [HandlerFile], [Flag], [OrderNum], [Builder], [BuildTime], [Modifier], [ModifyTime], [Version], [Lifecycle], [AutoID]) SELECT [SysFuncID], [FuncName], [FuncDesc], [ParentID], [IsLeaf], [ButtonPos], [IsButton], [Icon], [URL], [IsDisabled], [HandlerName], [HandlerFile], [Flag], [OrderNum], [Builder], [BuildTime], [Modifier], [ModifyTime], [Version], [Lifecycle], [AutoID] FROM [dbo].[SysFunc]
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
SET IDENTITY_INSERT [dbo].[tmp_rg_xx_SysFunc] OFF
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
DECLARE @idVal BIGINT
SELECT @idVal = IDENT_CURRENT(N'[dbo].[SysFunc]')
IF @idVal IS NOT NULL
    DBCC CHECKIDENT(N'[dbo].[tmp_rg_xx_SysFunc]', RESEED, @idVal)
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
DROP TABLE [dbo].[SysFunc]
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_rename N'[dbo].[tmp_rg_xx_SysFunc]', N'SysFunc'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Creating primary key [PK_SYSFUNC] on [dbo].[SysFunc]'
GO
ALTER TABLE [dbo].[SysFunc] ADD CONSTRAINT [PK_SYSFUNC] PRIMARY KEY NONCLUSTERED  ([SysFuncID])
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Creating [dbo].[ContractBalance]'
GO
CREATE TABLE [dbo].[ContractBalance]
(
[ID] [serialnumber] NOT NULL IDENTITY(1, 1),
[ContractID] [define] NOT NULL,
[BalanceDate] [datetime] NULL,
[BalanceMoney] [xmoney] NULL,
[Remark] [nvarchar] (50) COLLATE Chinese_PRC_CI_AS NULL,
[Builder] [names] NULL,
[BuildTime] [dt] NULL,
[Modifier] [names] NULL,
[ModifyTime] [dt] NULL,
[Version] [version] NULL,
[Lifecycle] [status] NULL
)
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Creating primary key [PK_ContractBalance] on [dbo].[ContractBalance]'
GO
ALTER TABLE [dbo].[ContractBalance] ADD CONSTRAINT [PK_ContractBalance] PRIMARY KEY CLUSTERED  ([ID])
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Altering [dbo].[GoodsCheck]'
GO
ALTER TABLE [dbo].[GoodsCheck] ADD
[SystemNum] [decimal] (18, 2) NULL,
[ProfitAndLoss] [decimal] (18, 2) NULL
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Altering [dbo].[Role]'
GO
ALTER TABLE [dbo].[Role] ADD
[IsAdministrator] [yeorno] NULL
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Creating [dbo].[FuncRole]'
GO
CREATE TABLE [dbo].[FuncRole]
(
[FuncRoleId] [int] NOT NULL IDENTITY(1, 1),
[SysFuncId] [dictype] NULL,
[RoleID] [define] NULL
)
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Creating primary key [PK_FuncRole] on [dbo].[FuncRole]'
GO
ALTER TABLE [dbo].[FuncRole] ADD CONSTRAINT [PK_FuncRole] PRIMARY KEY CLUSTERED  ([FuncRoleId])
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Creating [dbo].[CarOilPriceSetting]'
GO
CREATE TABLE [dbo].[CarOilPriceSetting]
(
[CarOilPriceSettingID] [define] NOT NULL,
[StartDate] [date] NULL,
[EndDate] [date] NULL,
[OilPrice] [decimal] (18, 2) NULL,
[AutoID] [int] NOT NULL IDENTITY(1, 1)
)
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Creating primary key [PK_CarOliPrice] on [dbo].[CarOilPriceSetting]'
GO
ALTER TABLE [dbo].[CarOilPriceSetting] ADD CONSTRAINT [PK_CarOliPrice] PRIMARY KEY CLUSTERED  ([CarOilPriceSettingID])
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Creating [dbo].[StuffMiddle]'
GO
CREATE TABLE [dbo].[StuffMiddle]
(
[ID] [int] NOT NULL IDENTITY(1, 1),
[stuffID] [define] NULL,
[stuffName] [mshorttext] NULL,
[Content] [bignumber] NULL,
[ContentMoney] [bignumber] NULL,
[Date] [nvarchar] (20) COLLATE Chinese_PRC_CI_AS NULL,
[ContentIn] [bignumber] NULL,
[ContentInMoney] [bignumber] NULL,
[Price] [bignumber] NULL,
[UseContent] [bignumber] NULL,
[UseContentMoney] [bignumber] NULL,
[ProfitAndLoss] [bignumber] NULL,
[ProfitAndLossMoney] [bignumber] NULL,
[BuildTime] [datetime] NULL,
[typeid] [nvarchar] (50) COLLATE Chinese_PRC_CI_AS NULL,
[typename] [nvarchar] (50) COLLATE Chinese_PRC_CI_AS NULL,
[ismaintype] [int] NULL
)
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Creating primary key [PK_StuffMiddle] on [dbo].[StuffMiddle]'
GO
ALTER TABLE [dbo].[StuffMiddle] ADD CONSTRAINT [PK_StuffMiddle] PRIMARY KEY CLUSTERED  ([ID])
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Altering [dbo].[sp_rpt_new_StuffPay]'
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS OFF
GO
ALTER PROCEDURE [dbo].[sp_rpt_new_StuffPay]
( 
	@BeginDate nvarchar(20),
	@gys nvarchar(50)

)
AS
BEGIN	 
	SET NOCOUNT ON;

	DECLARE @sql NVARCHAR(4000)
	SET @sql = '

	select supp.SupplyName,sp.StockPactID
	into #T1
	from stuffin si
	left join Supplyinfo supp on supp.SupplyID =  si.SupplyID
	left join StockPact sp on sp.StockPactID = si.StockPactID
	where si.InDate<@BeginDate and si.Lifecycle=1 
	group by supp.SupplyName,sp.StockPactID

	select stockpactID,sum(SupplyNum*UnitPrice/1000) as dangqian
	into #T6 from stuffin where InDate<@BeginDate and Lifecycle=1 group by stockpactID

	select stockpactID,sum(paymoney) as yifu
	into #T7 from stockpactchild where PayTime<@BeginDate group by stockpactID

	select stockpactID,sum(FapiaoMoney) as fapiao
	into #T8 from stockpactchildchild where PayTime<@BeginDate group by stockpactID

	select SupplyName,DianziString,
	(isnull(dangqian,0)-isnull(yifu,0)) as dangqiane,
	dbo.getDayu0(isnull(dangqian,0),dbo.GetStuffQianPrice(isnull(dbo.GetStuffinMoneyMove(T1.stockpactID,dateadd(month,-isnull(sp.Dianzi4,0),@BeginDate)),0),isnull(sp.Dianzi1,0),isnull(sp.Dianzi2,0),isnull(sp.Dianzi3,100)) - dbo.GetHuanDianZi(isnull(dbo.GetStuffinMoneyMove(T1.stockpactID,dateadd(month,-isnull(sp.Dianzi7,0)-isnull(sp.Dianzi4,0),@BeginDate)),0),isnull(sp.Dianzi1,0),isnull(sp.Dianzi2,0),isnull(sp.Dianzi3,100),isnull(sp.Dianzi6,0))+isnull(dangqian,0)-isnull(dbo.GetStuffinMoneyMove(T1.stockpactID,dateadd(month,-isnull(sp.Dianzi4,0),@BeginDate)),0)+isnull(yifu,0)) as qian,
	dbo.getDayu0(isnull(dbo.GetStuffinMoneyMove(T1.stockpactID,dateadd(month,-3,@BeginDate)),0),dbo.GetStuffQianPrice(isnull(dbo.GetStuffinMoneyMove(T1.stockpactID,dateadd(month,-3-isnull(sp.Dianzi4,0),@BeginDate)),0),isnull(sp.Dianzi1,0),isnull(sp.Dianzi2,0),isnull(sp.Dianzi3,100)) - dbo.GetHuanDianZi(isnull(dbo.GetStuffinMoneyMove(T1.stockpactID,dateadd(month,-3-isnull(sp.Dianzi7,0)-isnull(sp.Dianzi4,0),@BeginDate)),0),isnull(sp.Dianzi1,0),isnull(sp.Dianzi2,0),isnull(sp.Dianzi3,100),isnull(sp.Dianzi6,0))+isnull(dbo.GetStuffinMoneyMove(T1.stockpactID,dateadd(month,-3,@BeginDate)),0)-isnull(dbo.GetStuffinMoneyMove(T1.stockpactID,dateadd(month,-3-isnull(sp.Dianzi4,0),@BeginDate)),0)+isnull(yifu,0)) as qian3,
	dbo.getDayu0(isnull(dbo.GetStuffinMoneyMove(T1.stockpactID,dateadd(month,-6,@BeginDate)),0),dbo.GetStuffQianPrice(isnull(dbo.GetStuffinMoneyMove(T1.stockpactID,dateadd(month,-6-isnull(sp.Dianzi4,0),@BeginDate)),0),isnull(sp.Dianzi1,0),isnull(sp.Dianzi2,0),isnull(sp.Dianzi3,100)) - dbo.GetHuanDianZi(isnull(dbo.GetStuffinMoneyMove(T1.stockpactID,dateadd(month,-6-isnull(sp.Dianzi7,0)-isnull(sp.Dianzi4,0),@BeginDate)),0),isnull(sp.Dianzi1,0),isnull(sp.Dianzi2,0),isnull(sp.Dianzi3,100),isnull(sp.Dianzi6,0))+isnull(dbo.GetStuffinMoneyMove(T1.stockpactID,dateadd(month,-6,@BeginDate)),0)-isnull(dbo.GetStuffinMoneyMove(T1.stockpactID,dateadd(month,-6-isnull(sp.Dianzi4,0),@BeginDate)),0)+isnull(yifu,0)) as qian6,
	dbo.getDayu0(isnull(dbo.GetStuffinMoneyMove(T1.stockpactID,dateadd(month,-12,@BeginDate)),0),dbo.GetStuffQianPrice(isnull(dbo.GetStuffinMoneyMove(T1.stockpactID,dateadd(month,-12-isnull(sp.Dianzi4,0),@BeginDate)),0),isnull(sp.Dianzi1,0),isnull(sp.Dianzi2,0),isnull(sp.Dianzi3,100)) - dbo.GetHuanDianZi(isnull(dbo.GetStuffinMoneyMove(T1.stockpactID,dateadd(month,-12-isnull(sp.Dianzi7,0)-isnull(sp.Dianzi4,0),@BeginDate)),0),isnull(sp.Dianzi1,0),isnull(sp.Dianzi2,0),isnull(sp.Dianzi3,100),isnull(sp.Dianzi6,0))+isnull(dbo.GetStuffinMoneyMove(T1.stockpactID,dateadd(month,-12,@BeginDate)),0)-isnull(dbo.GetStuffinMoneyMove(T1.stockpactID,dateadd(month,-12-isnull(sp.Dianzi4,0),@BeginDate)),0)+isnull(yifu,0)) as qian12,
	(isnull(yifu,0)-isnull(fapiao,0)) as qianfapiao
	from #T1 T1 
	left join #T6 T6 on T1.StockPactID=T6.StockPactID 
	left join #T7 T7 on T1.StockPactID=T7.StockPactID 
	left join #T8 T8 on T1.StockPactID=T8.StockPactID
	left join StockPact sp on T1.StockPactID=sp.stockpactID

	where 1=1 
	'

	IF LEN(@gys)>0
	SET @sql=@sql+ ' AND SupplyName like ''%'+@gys +'%''' 

	SET @sql=@sql+' Drop Table #T1
	Drop Table #T6
	Drop Table #T7
	Drop Table #T8'

	EXEC sp_executesql @sql,N'@BeginDate nvarchar(20)', @BeginDate


SET NOCOUNT OFF;
END
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Creating [dbo].[sp_rpt_new_ContractPayZL]'
GO


CREATE PROCEDURE [dbo].[sp_rpt_new_ContractPayZL]
( 
	@BeginDate nvarchar(20),
	@Contractname nvarchar(50),
	@Salesman nvarchar(50)
)
AS
BEGIN	 
	SET NOCOUNT ON

	DECLARE @sql nvarchar(max)
	SET @sql = 'select contractid,max(ChangeDate) as JSDate into #T11 from contractJSTZ where ChangeDate< @BeginDate group by contractid
	select ContractID,Sum(ChangeMoney) as tiaozheng into #T2 from ContractJSTZ where ChangeDate<@BeginDate group by ContractID
	select ContractID,Sum(ChangeMoney) as tiaozheng1 into #T3 from ContractJSTZ where ChangeDate<dateadd(month,-1,@BeginDate) group by ContractID
	select contractid,Sum(signincube*(dbo.getConAddPrice(contractid,constrength,producedate)+dbo.GetConPrice(contractid,constrength,producedate))) as dangqian1 into #T4 from shippingdocument where producedate<dateadd(month,-1,@BeginDate) and IsEffective=1  group by ContractID
	select ContractID,Sum(PayMoney) as yifu1 into #T5 from ContractPay where PayDate<dateadd(month,-1,@BeginDate)  group by ContractID 
	select contractid,Sum(signincube*(dbo.getConAddPrice(contractid,constrength,producedate)+dbo.GetConPrice(contractid,constrength,producedate))) as dangqian into #T6 from shippingdocument where producedate<@BeginDate and IsEffective=1  group by ContractID
	select ContractID,Sum(PayMoney) as yifu into #T7 from ContractPay where PayDate<@BeginDate  group by ContractID 
	select ContractID,Sum(PayMoney) as jg into #T10 from ContractPay where PayDate<@BeginDate and paytype=''ContractPayType5'' or paytype=''ContractPayType6''  group by ContractID 
	select ContractID,Sum(PayMoney) as jg1 into #T9 from ContractPay where PayDate<dateadd(month,-1,@BeginDate) and paytype=''ContractPayType5'' or paytype=''ContractPayType6''  group by ContractID 
	select #T11.contractid,Sum(signincube*(dbo.getConAddPrice(#T11.contractid,constrength,producedate)+dbo.GetConPrice(#T11.contractid,constrength,producedate))) as JE into #T8 from #T11 left join shippingdocument on #T11.ContractID=shippingdocument.ContractID where IsEffective=1 and producedate<JSDate group by #T11.ContractID		
	
	select 
	(select dicname from dic where dicid like ''ContractStatus%'' and treecode=ContractStatus) AS ContractStatus,
	T1.contractid,Salesman,contractname,custname,dianzistring,isnull(JE,0) as JE,isnull(tiaozheng,0) as tiaozheng,isnull(tiaozheng1,0) as tiaozheng1,isnull(jg,0) as jg,isnull(jg1,0) as jg1,
	isnull(dangqian,0) as yigong,isnull(yifu,0) as yishou,isnull(dangqian1,0) as yigong1,isnull(yifu1,0) as yishou1,
	dbo.getDayu0(isnull(dangqian,0),dbo.GetStuffQianPrice(isnull(dbo.GetContractMoneyMove(T1.ContractID,dateadd(month,-isnull(T1.Dianzi4,0),@BeginDate)),0),isnull(T1.Dianzi1,0),isnull(T1.Dianzi2,0),isnull(T1.Dianzi3,100)) - dbo.GetHuanDianZi(isnull(dbo.GetContractMoneyMove(T1.ContractID,dateadd(month,-isnull(T1.Dianzi7,0)-isnull(T1.Dianzi4,0),@BeginDate)),0),isnull(T1.Dianzi1,0),isnull(T1.Dianzi2,0),isnull(T1.Dianzi3,100),isnull(T1.Dianzi6,0))+isnull(dangqian,0)-isnull(dbo.GetContractMoneyMove(T1.ContractID,dateadd(month,-isnull(T1.Dianzi4,0),@BeginDate)),0)+isnull(yifu,0)) as qian,
	dbo.getDayu0(isnull(dbo.GetContractMoneyMove(T1.ContractID,dateadd(month,-1,@BeginDate)),0),dbo.GetStuffQianPrice(isnull(dbo.GetContractMoneyMove(T1.ContractID,dateadd(month,-1-isnull(T1.Dianzi4,0),@BeginDate)),0),isnull(T1.Dianzi1,0),isnull(T1.Dianzi2,0),isnull(T1.Dianzi3,100)) - dbo.GetHuanDianZi(isnull(dbo.GetContractMoneyMove(T1.ContractID,dateadd(month,-1-isnull(T1.Dianzi7,0)-isnull(T1.Dianzi4,0),@BeginDate)),0),isnull(T1.Dianzi1,0),isnull(T1.Dianzi2,0),isnull(T1.Dianzi3,100),isnull(T1.Dianzi6,0))+isnull(dbo.GetContractMoneyMove(T1.ContractID,dateadd(month,-1,@BeginDate)),0)-isnull(dbo.GetContractMoneyMove(T1.ContractID,dateadd(month,-1-isnull(T1.Dianzi4,0),@BeginDate)),0)+isnull(yifu,0)) as qian1,
    
    dbo.getDayu0(isnull(dbo.GetContractMoneyMove(T1.ContractID,dateadd(month,-3,@BeginDate)),0),dbo.GetStuffQianPrice(isnull(dbo.GetContractMoneyMove(T1.ContractID,dateadd(month,-3-isnull(T1.Dianzi4,0),@BeginDate)),0),isnull(T1.Dianzi1,0),isnull(T1.Dianzi2,0),isnull(T1.Dianzi3,100)) - dbo.GetHuanDianZi(isnull(dbo.GetContractMoneyMove(T1.ContractID,dateadd(month,-3-isnull(T1.Dianzi7,0)-isnull(T1.Dianzi4,0),@BeginDate)),0),isnull(T1.Dianzi1,0),isnull(T1.Dianzi2,0),isnull(T1.Dianzi3,100),isnull(T1.Dianzi6,0))+isnull(dbo.GetContractMoneyMove(T1.ContractID,dateadd(month,-3,@BeginDate)),0)-isnull(dbo.GetContractMoneyMove(T1.ContractID,dateadd(month,-3-isnull(T1.Dianzi4,0),@BeginDate)),0)+isnull(yifu,0)) as qian3,
	dbo.getDayu0(isnull(dbo.GetContractMoneyMove(T1.ContractID,dateadd(month,-6,@BeginDate)),0),dbo.GetStuffQianPrice(isnull(dbo.GetContractMoneyMove(T1.ContractID,dateadd(month,-6-isnull(T1.Dianzi4,0),@BeginDate)),0),isnull(T1.Dianzi1,0),isnull(T1.Dianzi2,0),isnull(T1.Dianzi3,100)) - dbo.GetHuanDianZi(isnull(dbo.GetContractMoneyMove(T1.ContractID,dateadd(month,-6-isnull(T1.Dianzi7,0)-isnull(T1.Dianzi4,0),@BeginDate)),0),isnull(T1.Dianzi1,0),isnull(T1.Dianzi2,0),isnull(T1.Dianzi3,100),isnull(T1.Dianzi6,0))+isnull(dbo.GetContractMoneyMove(T1.ContractID,dateadd(month,-6,@BeginDate)),0)-isnull(dbo.GetContractMoneyMove(T1.ContractID,dateadd(month,-6-isnull(T1.Dianzi4,0),@BeginDate)),0)+isnull(yifu,0)) as qian6,
	dbo.getDayu0(isnull(dbo.GetContractMoneyMove(T1.ContractID,dateadd(month,-12,@BeginDate)),0),dbo.GetStuffQianPrice(isnull(dbo.GetContractMoneyMove(T1.ContractID,dateadd(month,-12-isnull(T1.Dianzi4,0),@BeginDate)),0),isnull(T1.Dianzi1,0),isnull(T1.Dianzi2,0),isnull(T1.Dianzi3,100)) - dbo.GetHuanDianZi(isnull(dbo.GetContractMoneyMove(T1.ContractID,dateadd(month,-12-isnull(T1.Dianzi7,0)-isnull(T1.Dianzi4,0),@BeginDate)),0),isnull(T1.Dianzi1,0),isnull(T1.Dianzi2,0),isnull(T1.Dianzi3,100),isnull(T1.Dianzi6,0))+isnull(dbo.GetContractMoneyMove(T1.ContractID,dateadd(month,-12,@BeginDate)),0)-isnull(dbo.GetContractMoneyMove(T1.ContractID,dateadd(month,-12-isnull(T1.Dianzi4,0),@BeginDate)),0)+isnull(yifu,0)) as qian12,
	dbo.getDayu0(isnull(dbo.GetContractMoneyMove(T1.ContractID,dateadd(month,-24,@BeginDate)),0),dbo.GetStuffQianPrice(isnull(dbo.GetContractMoneyMove(T1.ContractID,dateadd(month,-24-isnull(T1.Dianzi4,0),@BeginDate)),0),isnull(T1.Dianzi1,0),isnull(T1.Dianzi2,0),isnull(T1.Dianzi3,100)) - dbo.GetHuanDianZi(isnull(dbo.GetContractMoneyMove(T1.ContractID,dateadd(month,-24-isnull(T1.Dianzi7,0)-isnull(T1.Dianzi4,0),@BeginDate)),0),isnull(T1.Dianzi1,0),isnull(T1.Dianzi2,0),isnull(T1.Dianzi3,100),isnull(T1.Dianzi6,0))+isnull(dbo.GetContractMoneyMove(T1.ContractID,dateadd(month,-24,@BeginDate)),0)-isnull(dbo.GetContractMoneyMove(T1.ContractID,dateadd(month,-24-isnull(T1.Dianzi4,0),@BeginDate)),0)+isnull(yifu,0)) as qian24
	from contract T1 
	left join customer on T1.customerID=customer.customerID
	left join #T2 T2 on T1.ContractID=T2.ContractID 
	left join #T3 T3 on T1.ContractID=T3.ContractID 
	left join #T4 T4 on T1.ContractID=T4.ContractID 
	left join #T5 T5 on T1.ContractID=T5.ContractID 
	left join #T6 T6 on T1.ContractID=T6.ContractID 
	left join #T7 T7 on T1.ContractID=T7.ContractID 
	left join #T8 T8 on T1.ContractID=T8.ContractID 
	left join #T9 T9 on T1.ContractID=T9.ContractID 
	left join #T10 T10 on T1.ContractID=T10.ContractID 
	left join #T11 T11 on T1.ContractID=T11.ContractID 
	where 1=1 and (isnull(yifu,0)<>0 or ISNULL(dangqian,0)<>0)'

	IF LEN(@Contractname)>0
	SET @sql=@sql+ ' AND contractname like ''%'+@Contractname +'%''' 
	IF LEN(@Salesman)>0
	SET @sql=@sql+ ' AND SupplyName like ''%'+@Salesman +'%''' 

	SET @sql=@sql+' Drop Table #T2
	Drop Table #T3
	Drop Table #T4
	Drop Table #T5
	Drop Table #T6
	Drop Table #T7
	Drop Table #T8
	Drop Table #T9
	Drop Table #T10
	Drop Table #T11'

	EXEC sp_executesql @sql,N'@BeginDate nvarchar(20)', @BeginDate

SET NOCOUNT OFF;
END


-- exec [sp_rpt_new_ContractPayZL] '2016-03-01 00:00','',''

	

GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Creating [dbo].[sp_rpt_new_JSDan]'
GO
CREATE PROCEDURE [dbo].[sp_rpt_new_JSDan]
( 
	@BeginDate nvarchar(20),
	@Contractname nvarchar(50)
)
AS
BEGIN	 
	SET NOCOUNT ON;

	DECLARE @sql nvarchar(max)
	SET @sql = 'select contractid,max(ChangeDate) as JSDate into #T11 from contractJSTZ where ChangeDate< @BeginDate group by contractid

	select contractid,Sum(signincube) as S into #T2 from shippingdocument where producedate<@BeginDate and IsEffective=1  group by ContractID

	select contractid,Sum(signincube) as S1 into #T3 from shippingdocument where producedate<dateadd(month,-1,@BeginDate) and IsEffective=1  group by ContractID

	select #T11.contractid,Sum(signincube) as J into #T4  from #T11 left join shippingdocument on #T11.ContractID=shippingdocument.ContractID where IsEffective=1 and producedate<JSDate group by #T11.ContractID

	select contractid,Sum(signincube*(dbo.getConAddPrice(contractid,constrength,producedate)+dbo.GetConPrice(contractid,constrength,producedate))) as SE into #T5 from shippingdocument where producedate<@BeginDate and IsEffective=1  group by ContractID

	select contractid,Sum(signincube*(dbo.getConAddPrice(contractid,constrength,producedate)+dbo.GetConPrice(contractid,constrength,producedate))) as SE1 into #T6 from shippingdocument where producedate<dateadd(month,-1,@BeginDate) and IsEffective=1  group by ContractID

	select #T11.contractid,Sum(signincube*(dbo.getConAddPrice(#T11.contractid,constrength,producedate)+dbo.GetConPrice(#T11.contractid,constrength,producedate))) as JE into #T7 from #T11 left join shippingdocument on #T11.ContractID=shippingdocument.ContractID where IsEffective=1 and producedate<JSDate group by #T11.ContractID	


	select T1.contractid,contractname,JSDate,isnull(S,0) as S,isnull(S1,0) as S1,isnull(J,0) as J,isnull(SE,0) as SE,isnull(SE1,0) as SE1,isnull(JE,0) as JE
	from contract T1 
	left join customer on T1.customerID=customer.customerID
	left join #T2 T2 on T1.ContractID=T2.ContractID 
	left join #T3 T3 on T1.ContractID=T3.ContractID 
	left join #T4 T4 on T1.ContractID=T4.ContractID 
	left join #T5 T5 on T1.ContractID=T5.ContractID 
	left join #T6 T6 on T1.ContractID=T6.ContractID 
	left join #T7 T7 on T1.ContractID=T7.ContractID
	left join #T11 T11 on T1.ContractID=T11.ContractID where 1=1'

	IF LEN(@Contractname)>0
	SET @sql=@sql+ ' AND contractname like ''%'+@Contractname +'%''' 

	SET @sql=@sql+'Drop Table #T2
	Drop Table #T3
	Drop Table #T4
	Drop Table #T5
	Drop Table #T6
	Drop Table #T7
	Drop Table #T11'

	EXEC sp_executesql @sql,N'@BeginDate nvarchar(20)', @BeginDate

SET NOCOUNT OFF;
END
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Creating [dbo].[sp_rpt_new_ContractPay]'
GO
CREATE PROCEDURE [dbo].[sp_rpt_new_ContractPay]
( 
	@BeginDate nvarchar(20),
	@Contractname nvarchar(50),
	@Salesman nvarchar(50)
)
AS 
BEGIN	 
	SET NOCOUNT ON

	DECLARE @sql nvarchar(max)
	SET @sql = 'select contractid,max(ChangeDate) as JSDate into #T11 from contractJSTZ where ChangeDate< @BeginDate group by contractid
	select ContractID,ISNULL(CASE AdjustType WHEN ''结算调整'' THEN Sum(ChangeMoney) END,0) as tiaozheng,
	ISNULL(CASE AdjustType WHEN ''产值调整'' THEN Sum(ChangeMoney) END,0) as tiaozhengc,
	ISNULL(CASE AdjustType WHEN ''应收账款调整'' THEN Sum(ChangeMoney) END,0) as tiaozhengy
	into #T2
	from ContractJSTZ where ChangeDate<@BeginDate group by ContractID,AdjustType
	select ContractID,ISNULL(CASE AdjustType WHEN ''结算调整'' THEN Sum(ChangeMoney) END,0) as tiaozheng1,
	ISNULL(CASE AdjustType WHEN ''产值调整'' THEN Sum(ChangeMoney) END,0) as tiaozhengc1,
	ISNULL(CASE AdjustType WHEN ''应收账款调整'' THEN Sum(ChangeMoney) END,0) as tiaozhengy1
	into #T3
	from ContractJSTZ where ChangeDate<dateadd(month,-1,@BeginDate) group by ContractID,AdjustType
	select contractid,Sum(signincube*(dbo.getConAddPrice(contractid,constrength,producedate)+dbo.GetConPrice(contractid,constrength,producedate))) as dangqian1 into #T4 from shippingdocument where producedate<dateadd(month,-1,@BeginDate) and IsEffective=1  group by ContractID
	select ContractID,Sum(PayMoney) as yifu1 into #T5 from ContractPay where PayDate<dateadd(month,-1,@BeginDate)  group by ContractID 
	select contractid,Sum(signincube*(dbo.getConAddPrice(contractid,constrength,producedate)+dbo.GetConPrice(contractid,constrength,producedate))) as dangqian into #T6 from shippingdocument where producedate<@BeginDate and IsEffective=1  group by ContractID
	select ContractID,Sum(PayMoney) as yifu into #T7 from ContractPay where PayDate<@BeginDate  group by ContractID 
	select ContractID,Sum(PayMoney) as jg into #T10 from ContractPay where PayDate<@BeginDate and paytype=''ContractPayType5'' or paytype=''ContractPayType6''  group by ContractID 
	select ContractID,Sum(PayMoney) as jg1 into #T9 from ContractPay where PayDate<dateadd(month,-1,@BeginDate) and paytype=''ContractPayType5'' or paytype=''ContractPayType6''  group by ContractID 
	select #T11.contractid,Sum(signincube*(dbo.getConAddPrice(#T11.contractid,constrength,producedate)+dbo.GetConPrice(#T11.contractid,constrength,producedate))) as JE into #T8 from #T11 left join shippingdocument on #T11.ContractID=shippingdocument.ContractID where IsEffective=1 and producedate<JSDate group by #T11.ContractID		
	
	select ROW_NUMBER() OVER(ORDER BY Contractstatus) as xh,
	(select dicname from dic where dicid like ''ContractStatus%'' and treecode=ContractStatus) AS ContractStatus,
	T1.contractid,Salesman,contractname,custname,dianzistring,isnull(JE,0) as JE,
	isnull(tiaozheng,0) as tiaozheng,isnull(tiaozhengc,0) as tiaozhengc,isnull(tiaozhengy,0) as tiaozhengy,isnull(tiaozheng1,0) as tiaozheng1,isnull(tiaozhengc1,0) as tiaozhengc1,isnull(tiaozhengy1,0) as tiaozhengy1,isnull(jg,0) as jg,isnull(jg1,0) as jg1,
	isnull(dangqian,0) as yigong,isnull(yifu,0) as yishou,isnull(dangqian1,0) as yigong1,isnull(yifu1,0) as yishou1,
	dbo.getDayu0(isnull(dangqian,0),dbo.GetStuffQianPrice(isnull(dbo.GetContractMoneyMove(T1.ContractID,dateadd(month,-isnull(T1.Dianzi4,0),@BeginDate)),0),isnull(T1.Dianzi1,0),isnull(T1.Dianzi2,0),isnull(T1.Dianzi3,100)) - dbo.GetHuanDianZi(isnull(dbo.GetContractMoneyMove(T1.ContractID,dateadd(month,-isnull(T1.Dianzi7,0)-isnull(T1.Dianzi4,0),@BeginDate)),0),isnull(T1.Dianzi1,0),isnull(T1.Dianzi2,0),isnull(T1.Dianzi3,100),isnull(T1.Dianzi6,0))+isnull(dangqian,0)-isnull(dbo.GetContractMoneyMove(T1.ContractID,dateadd(month,-isnull(T1.Dianzi4,0),@BeginDate)),0)+isnull(yifu,0)) as qian,
	dbo.getDayu0(isnull(dbo.GetContractMoneyMove(T1.ContractID,dateadd(month,-1,@BeginDate)),0),dbo.GetStuffQianPrice(isnull(dbo.GetContractMoneyMove(T1.ContractID,dateadd(month,-1-isnull(T1.Dianzi4,0),@BeginDate)),0),isnull(T1.Dianzi1,0),isnull(T1.Dianzi2,0),isnull(T1.Dianzi3,100)) - dbo.GetHuanDianZi(isnull(dbo.GetContractMoneyMove(T1.ContractID,dateadd(month,-1-isnull(T1.Dianzi7,0)-isnull(T1.Dianzi4,0),@BeginDate)),0),isnull(T1.Dianzi1,0),isnull(T1.Dianzi2,0),isnull(T1.Dianzi3,100),isnull(T1.Dianzi6,0))+isnull(dbo.GetContractMoneyMove(T1.ContractID,dateadd(month,-1,@BeginDate)),0)-isnull(dbo.GetContractMoneyMove(T1.ContractID,dateadd(month,-1-isnull(T1.Dianzi4,0),@BeginDate)),0)+isnull(yifu,0)) as qian1
	from contract T1 
	left join customer on T1.customerID=customer.customerID
	left join #T2 T2 on T1.ContractID=T2.ContractID 
	left join #T3 T3 on T1.ContractID=T3.ContractID 
	left join #T4 T4 on T1.ContractID=T4.ContractID 
	left join #T5 T5 on T1.ContractID=T5.ContractID 
	left join #T6 T6 on T1.ContractID=T6.ContractID 
	left join #T7 T7 on T1.ContractID=T7.ContractID 
	left join #T8 T8 on T1.ContractID=T8.ContractID 
	left join #T9 T9 on T1.ContractID=T9.ContractID 
	left join #T10 T10 on T1.ContractID=T10.ContractID 
	left join #T11 T11 on T1.ContractID=T11.ContractID 
	where 1=1 and (isnull(yifu,0)<>0 or ISNULL(dangqian,0)<>0 or isnull(tiaozhengy,0)<>0)'

	IF LEN(@Contractname)>0
	SET @sql=@sql+ ' AND contractname like ''%'+@Contractname +'%''' 
	IF LEN(@Salesman)>0
	SET @sql=@sql+ ' AND SupplyName like ''%'+@Salesman +'%''' 

	SET @sql=@sql+' Drop Table #T2
	Drop Table #T3
	Drop Table #T4
	Drop Table #T5
	Drop Table #T6
	Drop Table #T7
	Drop Table #T8
	Drop Table #T9
	Drop Table #T10
	Drop Table #T11'

	EXEC sp_executesql @sql,N'@BeginDate nvarchar(20)', @BeginDate

SET NOCOUNT OFF;
END


-- exec [sp_rpt_new_ContractPay] '2016-10-02 00:00','',''
-- (SELECT DICNAME FROM DIC WHERE DICID LIKE 'ContractStatus%' AND TREECODE=ContractStatus ) AS ContractStatus,
	--case ContractStatus WHEN 2 THEN ''在建项目'' WHEN 3 THEN ''已完工'' WHEN 4 THEN ''零星项目'' 
	--WHEN 5 THEN ''法务组项目'' WHEN 6 THEN ''其它呆坏账项目'' ELSE ''完工完款'' END AS ContractStatus,
	
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
PRINT N'Binding defaults to columns'
GO
EXEC sp_bindefault N'[dbo].[D_1]', N'[dbo].[ContractBalance].[Version]'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_bindefault N'[dbo].[D_0]', N'[dbo].[ContractBalance].[Lifecycle]'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_bindefault N'[dbo].[D_1]', N'[dbo].[ContractJSTZ].[Version]'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_bindefault N'[dbo].[D_0]', N'[dbo].[ContractJSTZ].[Lifecycle]'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_bindefault N'[dbo].[D_1]', N'[dbo].[ContractPay].[Version]'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_bindefault N'[dbo].[D_0]', N'[dbo].[ContractPay].[Lifecycle]'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_bindefault N'[dbo].[D_1]', N'[dbo].[ContractProduct].[Version]'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_bindefault N'[dbo].[D_0]', N'[dbo].[ContractProduct].[Lifecycle]'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_bindefault N'[dbo].[D_1]', N'[dbo].[MonthAccount].[Version]'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_bindefault N'[dbo].[D_0]', N'[dbo].[MonthAccount].[Lifecycle]'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_bindefault N'[dbo].[D_0]', N'[dbo].[MonthAccount].[IsUse]'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_bindefault N'[dbo].[D_0]', N'[dbo].[PriceSetting].[TranPrice]'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_bindefault N'[dbo].[D_0]', N'[dbo].[Role].[IsAdministrator]'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Creating primary key [PK_status] on [dbo].[status]'
GO
ALTER TABLE [dbo].[status] ADD CONSTRAINT [PK_status] PRIMARY KEY CLUSTERED  ([id])
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Adding foreign keys to [dbo].[ContractProduct]'
GO
ALTER TABLE [dbo].[ContractProduct] ADD CONSTRAINT [FK_ContractProduct_Contract] FOREIGN KEY ([ContractID]) REFERENCES [dbo].[Contract] ([ContractID])
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Adding foreign keys to [dbo].[FuncRole]'
GO
ALTER TABLE [dbo].[FuncRole] ADD CONSTRAINT [FK_FuncRole_SysFunc] FOREIGN KEY ([SysFuncId]) REFERENCES [dbo].[SysFunc] ([SysFuncID])
ALTER TABLE [dbo].[FuncRole] ADD CONSTRAINT [FK_FuncRole_Role] FOREIGN KEY ([RoleID]) REFERENCES [dbo].[Role] ([RoleID])
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Adding foreign keys to [dbo].[MonthAccount]'
GO
ALTER TABLE [dbo].[MonthAccount] ADD CONSTRAINT [FK_MonthAccount_Silo] FOREIGN KEY ([SiloId]) REFERENCES [dbo].[Silo] ([SiloID])
ALTER TABLE [dbo].[MonthAccount] ADD CONSTRAINT [FK_MonthAccount_MonthAccount] FOREIGN KEY ([StuffId]) REFERENCES [dbo].[StuffInfo] ([StuffID])
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Adding foreign keys to [dbo].[SysPower]'
GO
ALTER TABLE [dbo].[SysPower] ADD CONSTRAINT [FK_SYSPOWER_SYSPOWER_SYSFUNC] FOREIGN KEY ([SysFuncID]) REFERENCES [dbo].[SysFunc] ([SysFuncID]) ON DELETE CASCADE ON UPDATE CASCADE
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Adding foreign keys to [dbo].[UserRole]'
GO
ALTER TABLE [dbo].[UserRole] ADD CONSTRAINT [FK_UserRole_Users] FOREIGN KEY ([UserID]) REFERENCES [dbo].[Users] ([UserID])
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Altering trigger [dbo].[ShippingDocument_update_trigger] on [dbo].[ShippingDocument]'
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS OFF
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER TRIGGER [dbo].[ShippingDocument_update_trigger] 
   ON  [dbo].[ShippingDocument] 
   AFTER update
AS 
BEGIN
	SET NOCOUNT ON
	declare @shipDocID varchar(50),
	        @carid varchar(50), 
	        @isBack varchar(50), 
	        @operator varchar(50), 
	        @operatorTime varchar(50),
	        @contractID varchar(50),
	        @signCube decimal(18,2),
	        @productMoney decimal(18,2)

	select @shipDocID=ShipDocID, @carid=CarID, @isBack=isBack, @operator=Modifier, @operatorTime=convert(varchar(20), ModifyTime, 120) ,@signCube=signInCube
	,@contractID=contractID
	from INSERTED 

	--生产金额
	set @productMoney=dbo.GetContractMoneyMove(@contractID,@operatorTime)

	if update(isBack) and @isBack=1
	begin
		insert into syslogs(logtype,memo,BuildTime) values('车辆回厂',@carid+'号车回厂，运输单号：'+@shipDocID+'，经办人：'+@operator+'，经办时间：'+@operatorTime,GETDATE());

		INSERT INTO [ContractProduct]
           ([ContractID]
           ,[ProductDate]
           ,[ProductMoney]
           ,[Remark]
           ,[Builder]
           ,[BuildTime]
           ,[Modifier]
           ,[ModifyTime]
           ,[Version]
           ,[Lifecycle]
           ,[ProductType]
           ,[BalanceMoney])
          values(@contractID,getdate(),@productMoney,'','',getdate(),'',null,0,0,'',0)

        --update contract set TotalComeMoney=isnull(TotalComeMoney,0)+@productMoney,
        --Balance=(isnull(TotalComeMoney,0)+@productMoney)-payMoney where contractID=@contractID
	end

END
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Creating trigger [dbo].[ContractPay_delete_trigger] on [dbo].[ContractPay]'
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO

-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	
-- =============================================
CREATE TRIGGER [dbo].[ContractPay_delete_trigger] 
   ON  [dbo].[ContractPay] 
   AFTER delete
AS 
BEGIN
	SET NOCOUNT ON
	declare @PayMoney decimal(18,2),
	        @productMoney decimal(18,2),
	        @operator varchar(30),
	        @operatorTime varchar(30),
	        @contractID varchar(30)

	--删除金额 
	select @PayMoney=PayMoney,@contractID=contractID from deleted 
	begin

		insert into syslogs(logtype,memo,BuildTime,builder) 
		values('删除合同付款记录',@contractID+'号合同，删除'+Convert(varchar(20),@PayMoney)+'元',GETDATE(),@operator);

        update contract set PayMoney=isnull(PayMoney,0)-@PayMoney,
        Balance=isnull(Balance,0)+@PayMoney 
        where contractID=@contractID

        ---付款记录汇总求出总付款金额
        declare @paymoneysum decimal(18,2)
        select @paymoneysum=isnull(sum(paymoney),0) from contractpay where contractID=@contractID 
        update contract set PayMoney=isnull(@paymoneysum,0),
        Balance=isnull(TotalComeMoney,0)-isnull(@paymoneysum,0) 
        where contractID=@contractID 

	end

END

GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Creating trigger [dbo].[ContractPay_insert_trigger] on [dbo].[ContractPay]'
GO

-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	
-- =============================================
create TRIGGER [dbo].[ContractPay_insert_trigger] 
   ON  [dbo].[ContractPay] 
   AFTER INSERT
AS 
BEGIN
	SET NOCOUNT ON
	declare @PayMoney decimal(18,2),
	        @productMoney decimal(18,2),
	        @operator varchar(30),
	        @operatorTime varchar(30),
	        @contractID varchar(30)

	select @PayMoney=PayMoney, @operator=Modifier, @operatorTime=convert(varchar(20), ModifyTime, 120) ,@contractID=contractID
	from inserted 

	begin
		insert into syslogs(logtype,memo,BuildTime) 
		values('新增合同付款记录',@contractID+'号合同，新增付款，经办人：'+@operator+'，经办时间：'+@operatorTime,GETDATE());

        update contract set PayMoney=isnull(PayMoney,0)+@PayMoney,
        Balance=isnull(TotalComeMoney,0)-(isnull(PayMoney,0)+@PayMoney) 
        where contractID=@contractID
	end

END

GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Creating trigger [dbo].[ContractPay_update_trigger] on [dbo].[ContractPay]'
GO

-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	
-- =============================================
CREATE TRIGGER [dbo].[ContractPay_update_trigger] 
   ON  [dbo].[ContractPay] 
   AFTER update
AS 
BEGIN
	SET NOCOUNT ON
	declare @PayMoney decimal(18,2),
	        @oldPayMoney decimal(18,2),
	        @productMoney decimal(18,2),
	        @operator varchar(30),
	        @operatorTime varchar(30),
	        @contractID varchar(30)
	--修该后金额   
	select @PayMoney=PayMoney, @operator=Modifier, @operatorTime=convert(varchar(20), ModifyTime, 120) ,@contractID=contractID
	from INSERTED

	--修改前金额 
	select @oldPayMoney=PayMoney from deleted where contractID=@contractID
	begin

		insert into syslogs(logtype,memo,BuildTime,builder) 
		values('修改合同付款记录',@contractID+'号合同，从'+Convert(varchar(20),@oldPayMoney)+'修改为:'+Convert(varchar(20),@PayMoney),GETDATE(),@operator);

        update contract set PayMoney=isnull(PayMoney,0)+(@PayMoney-@oldPayMoney),
        Balance=isnull(TotalComeMoney,0)-(isnull(PayMoney,0)+(@PayMoney-@oldPayMoney)) 
        where contractID=@contractID
	end

END
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Creating trigger [dbo].[ContractProduct_delete_trigger] on [dbo].[ContractProduct]'
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS OFF
GO
-- Triggers

-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	
-- =============================================
CREATE TRIGGER [dbo].[ContractProduct_delete_trigger] 
   ON  [dbo].[ContractProduct] 
   AFTER delete
AS 
BEGIN
	SET NOCOUNT ON
	declare @productMoney decimal(18,2),
	        @operator varchar(30),
	        @operatorTime varchar(30),
	        @contractID varchar(30)

	--删除金额 
	select @productMoney=productMoney,@contractID=contractID from deleted 
	begin

		insert into syslogs(logtype,memo,BuildTime,builder) 
		values('删除合同生产记录',@contractID+'号合同，删除'+Convert(varchar(20),@productMoney)+'元',GETDATE(),@operator);

        update contract set TotalComeMoney=isnull(TotalComeMoney,0)-@productMoney,
        Balance=isnull(Balance,0)-@productMoney
        where contractID=@contractID

        ---付款记录汇总求出总付款金额
        declare @productMoneysum decimal(18,2)
        select @productMoneysum=isnull(sum(@productMoney),0) from ContractProduct where contractID=@contractID 
        update contract set TotalComeMoney=isnull(@productMoneysum,0),
        Balance=isnull(TotalComeMoney,0)-isnull(@productMoneysum,0) 
        where contractID=@contractID 
	end

END


GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Creating trigger [dbo].[ContractProduct_insert_trigger] on [dbo].[ContractProduct]'
GO


-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	
-- =============================================
create TRIGGER [dbo].[ContractProduct_insert_trigger] 
   ON  [dbo].[ContractProduct] 
   AFTER INSERT
AS 
BEGIN
	SET NOCOUNT ON
	declare 
	        @ProductMoney decimal(18,2),
	        @operator varchar(30),
	        @operatorTime varchar(30),
	        @contractID varchar(30)

	select @ProductMoney=ProductMoney, @operator=Modifier, @operatorTime=convert(varchar(20), ModifyTime, 120) ,@contractID=contractID
	from inserted 

	begin
		insert into syslogs(logtype,memo,BuildTime) 
		values('新增合同生产记录',@contractID+'号合同，新增付款，经办人：'+@operator+'，经办时间：'+@operatorTime,GETDATE());

        update contract set TotalComeMoney=isnull(TotalComeMoney,0)+@ProductMoney,
        Balance=isnull(TotalComeMoney,0)+isnull(@ProductMoney,0)-paymoney
        where contractID=@contractID
	end

END


GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
PRINT N'Creating trigger [dbo].[ContractProduct_update_trigger] on [dbo].[ContractProduct]'
GO


-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	
-- =============================================
CREATE TRIGGER [dbo].[ContractProduct_update_trigger] 
   ON  [dbo].[ContractProduct] 
   AFTER update
AS 
BEGIN
	SET NOCOUNT ON
	declare @ProductMoney decimal(18,2),
	        @oldProductMoney decimal(18,2),
	        @operator varchar(30),
	        @operatorTime varchar(30),
	        @contractID varchar(30)
	--修该后金额   
	select @ProductMoney=ProductMoney, @operator=Modifier, @operatorTime=convert(varchar(20), ModifyTime, 120) ,@contractID=contractID
	from INSERTED

	--修改前金额 
	select @oldProductMoney=ProductMoney from deleted where contractID=@contractID
	begin

		insert into syslogs(logtype,memo,BuildTime,builder) 
		values('修改合同生产记录',@contractID+'号合同，从'+Convert(varchar(20),@oldProductMoney)+'修改为:'+Convert(varchar(20),@ProductMoney),GETDATE(),@operator);

        update contract set TotalComeMoney=isnull(TotalComeMoney,0)+(@ProductMoney-@oldProductMoney),
        Balance=isnull(TotalComeMoney,0)+(@ProductMoney-@oldProductMoney)-isnull(PayMoney,0) 
        where contractID=@contractID
	end

END


GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
PRINT N'Creating extended properties'
GO
EXEC sp_addextendedproperty N'MS_Description', '车架号', 'USER', N'dbo', 'TABLE', N'Car', 'COLUMN', N'CarVINo'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_addextendedproperty N'MS_Description', '保险', 'USER', N'dbo', 'TABLE', N'Car', 'COLUMN', N'Insurance'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_addextendedproperty N'MS_Description', '发证日期', 'USER', N'dbo', 'TABLE', N'Car', 'COLUMN', N'IssuingDate'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_addextendedproperty N'MS_Description', '运营证', 'USER', N'dbo', 'TABLE', N'Car', 'COLUMN', N'OperCertificate'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_addextendedproperty N'MS_Description', '注册日期', 'USER', N'dbo', 'TABLE', N'Car', 'COLUMN', N'RegDate'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_addextendedproperty N'MS_Description', N'业务类型', 'USER', N'dbo', 'TABLE', N'Contract', 'COLUMN', N'BusinessType'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_addextendedproperty N'MS_Description', N'提成单价', 'USER', N'dbo', 'TABLE', N'Contract', 'COLUMN', N'DeductPerPrice'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_addextendedproperty N'MS_Description', N'回款提成系数', 'USER', N'dbo', 'TABLE', N'Contract', 'COLUMN', N'HkCoefficient'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_addextendedproperty N'MS_Description', N'结算提成系数', 'USER', N'dbo', 'TABLE', N'Contract', 'COLUMN', N'JsCoefficient'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_addextendedproperty N'MS_Description', N'签约提成系数', 'USER', N'dbo', 'TABLE', N'Contract', 'COLUMN', N'QyCoefficient'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_addextendedproperty N'表名', N'合同欠款表', 'USER', N'dbo', 'TABLE', N'ContractBalance', NULL, NULL
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_addextendedproperty N'MS_Description', N' 创建人', 'USER', N'dbo', 'TABLE', N'ContractJSTZ', 'COLUMN', N'Builder'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_addextendedproperty N'MS_Description', N' 创建时间', 'USER', N'dbo', 'TABLE', N'ContractJSTZ', 'COLUMN', N'BuildTime'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_addextendedproperty N'MS_Description', N' 砼强度', 'USER', N'dbo', 'TABLE', N'ContractJSTZ', 'COLUMN', N'ChangeDate'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_addextendedproperty N'MS_Description', N' 非泵价格', 'USER', N'dbo', 'TABLE', N'ContractJSTZ', 'COLUMN', N'ChangeMoney'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_addextendedproperty N'MS_Description', N' 合同编号', 'USER', N'dbo', 'TABLE', N'ContractJSTZ', 'COLUMN', N'ContractID'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_addextendedproperty N'MS_Description', N' 合同明细编号', 'USER', N'dbo', 'TABLE', N'ContractJSTZ', 'COLUMN', N'ID'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_addextendedproperty N'MS_Description', N' 状态', 'USER', N'dbo', 'TABLE', N'ContractJSTZ', 'COLUMN', N'Lifecycle'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_addextendedproperty N'MS_Description', N' 修改人', 'USER', N'dbo', 'TABLE', N'ContractJSTZ', 'COLUMN', N'Modifier'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_addextendedproperty N'MS_Description', N' 修改时间', 'USER', N'dbo', 'TABLE', N'ContractJSTZ', 'COLUMN', N'ModifyTime'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_addextendedproperty N'MS_Description', N' 泵送费', 'USER', N'dbo', 'TABLE', N'ContractJSTZ', 'COLUMN', N'Remark'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_addextendedproperty N'MS_Description', N' 版本', 'USER', N'dbo', 'TABLE', N'ContractJSTZ', 'COLUMN', N'Version'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_addextendedproperty N'表名', N'合同付款表', 'USER', N'dbo', 'TABLE', N'ContractPay', NULL, NULL
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_addextendedproperty N'MS_Description', N'当前欠款余额', 'USER', N'dbo', 'TABLE', N'ContractPay', 'COLUMN', N'BalanceMoney'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_addextendedproperty N'MS_Description', N' 创建人', 'USER', N'dbo', 'TABLE', N'ContractPay', 'COLUMN', N'Builder'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_addextendedproperty N'MS_Description', N' 创建时间', 'USER', N'dbo', 'TABLE', N'ContractPay', 'COLUMN', N'BuildTime'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_addextendedproperty N'MS_Description', N' 合同编号', 'USER', N'dbo', 'TABLE', N'ContractPay', 'COLUMN', N'ContractID'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_addextendedproperty N'MS_Description', N' 合同明细编号', 'USER', N'dbo', 'TABLE', N'ContractPay', 'COLUMN', N'ID'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_addextendedproperty N'MS_Description', N' 状态', 'USER', N'dbo', 'TABLE', N'ContractPay', 'COLUMN', N'Lifecycle'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_addextendedproperty N'MS_Description', N' 修改人', 'USER', N'dbo', 'TABLE', N'ContractPay', 'COLUMN', N'Modifier'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_addextendedproperty N'MS_Description', N' 修改时间', 'USER', N'dbo', 'TABLE', N'ContractPay', 'COLUMN', N'ModifyTime'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_addextendedproperty N'MS_Description', N' 砼强度', 'USER', N'dbo', 'TABLE', N'ContractPay', 'COLUMN', N'PayDate'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_addextendedproperty N'MS_Description', N'付款金额', 'USER', N'dbo', 'TABLE', N'ContractPay', 'COLUMN', N'PayMoney'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_addextendedproperty N'MS_Description', N' 泵送费', 'USER', N'dbo', 'TABLE', N'ContractPay', 'COLUMN', N'Remark'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_addextendedproperty N'MS_Description', N' 版本', 'USER', N'dbo', 'TABLE', N'ContractPay', 'COLUMN', N'Version'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_addextendedproperty N'表名', N'合同生产金额表', 'USER', N'dbo', 'TABLE', N'ContractProduct', NULL, NULL
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_addextendedproperty N'MS_Description', N'当前欠款余额', 'USER', N'dbo', 'TABLE', N'ContractProduct', 'COLUMN', N'BalanceMoney'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_addextendedproperty N'MS_Description', N'月份', 'USER', N'dbo', 'TABLE', N'MonthAccount', 'COLUMN', N'Month'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_addextendedproperty N'MS_Description', N'原材料编码', 'USER', N'dbo', 'TABLE', N'MonthAccount', 'COLUMN', N'StuffId'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_addextendedproperty N'MS_Description', N'运输费', 'USER', N'dbo', 'TABLE', N'PriceSetting', 'COLUMN', N'TranPrice'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_addextendedproperty N'MS_Description', N'是否管理员权限组', 'USER', N'dbo', 'TABLE', N'Role', 'COLUMN', N'IsAdministrator'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_addextendedproperty N'MS_Description', '采购材料1单价', 'USER', N'dbo', 'TABLE', N'StockPact', 'COLUMN', N'StockPrice1'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_addextendedproperty N'MS_Description', '采购材料2单价', 'USER', N'dbo', 'TABLE', N'StockPact', 'COLUMN', N'StockPrice2'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_addextendedproperty N'MS_StockPrice2', '采购材料2单价', 'USER', N'dbo', 'TABLE', N'StockPact', 'COLUMN', N'StockPrice2'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_addextendedproperty N'MS_Description', '采购材料3单价', 'USER', N'dbo', 'TABLE', N'StockPact', 'COLUMN', N'StockPrice3'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_addextendedproperty N'MS_StockPrice3', '采购材料3单价', 'USER', N'dbo', 'TABLE', N'StockPact', 'COLUMN', N'StockPrice3'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_addextendedproperty N'MS_Description', '采购材料4单价', 'USER', N'dbo', 'TABLE', N'StockPact', 'COLUMN', N'StockPrice4'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_addextendedproperty N'MS_StockPrice4', '采购材料4单价', 'USER', N'dbo', 'TABLE', N'StockPact', 'COLUMN', N'StockPrice4'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_addextendedproperty N'MS_Description', N' 系统功能', 'USER', N'dbo', 'TABLE', N'SysFunc', NULL, NULL
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_addextendedproperty N'MS_Description', N' 编号', 'USER', N'dbo', 'TABLE', N'SysFunc', 'COLUMN', N'AutoID'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_addextendedproperty N'MS_Description', N' 创建人', 'USER', N'dbo', 'TABLE', N'SysFunc', 'COLUMN', N'Builder'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_addextendedproperty N'MS_Description', N' 创建时间', 'USER', N'dbo', 'TABLE', N'SysFunc', 'COLUMN', N'BuildTime'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_addextendedproperty N'MS_Description', N' 按钮位置', 'USER', N'dbo', 'TABLE', N'SysFunc', 'COLUMN', N'ButtonPos'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_addextendedproperty N'MS_Description', N' 标志', 'USER', N'dbo', 'TABLE', N'SysFunc', 'COLUMN', N'Flag'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_addextendedproperty N'MS_Description', N' 功能描述', 'USER', N'dbo', 'TABLE', N'SysFunc', 'COLUMN', N'FuncDesc'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_addextendedproperty N'MS_Description', N' 功能名称', 'USER', N'dbo', 'TABLE', N'SysFunc', 'COLUMN', N'FuncName'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_addextendedproperty N'MS_Description', N' 功能文件', 'USER', N'dbo', 'TABLE', N'SysFunc', 'COLUMN', N'HandlerFile'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_addextendedproperty N'MS_Description', N' 功能代码', 'USER', N'dbo', 'TABLE', N'SysFunc', 'COLUMN', N'HandlerName'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_addextendedproperty N'MS_Description', N' 功能图标', 'USER', N'dbo', 'TABLE', N'SysFunc', 'COLUMN', N'Icon'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_addextendedproperty N'MS_Description', N' 是否按钮', 'USER', N'dbo', 'TABLE', N'SysFunc', 'COLUMN', N'IsButton'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_addextendedproperty N'MS_Description', N' 是否禁用', 'USER', N'dbo', 'TABLE', N'SysFunc', 'COLUMN', N'IsDisabled'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_addextendedproperty N'MS_Description', N' 是否叶子节点', 'USER', N'dbo', 'TABLE', N'SysFunc', 'COLUMN', N'IsLeaf'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_addextendedproperty N'MS_Description', N' 状态', 'USER', N'dbo', 'TABLE', N'SysFunc', 'COLUMN', N'Lifecycle'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_addextendedproperty N'MS_Description', N' 修改人', 'USER', N'dbo', 'TABLE', N'SysFunc', 'COLUMN', N'Modifier'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_addextendedproperty N'MS_Description', N' 修改时间', 'USER', N'dbo', 'TABLE', N'SysFunc', 'COLUMN', N'ModifyTime'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_addextendedproperty N'MS_Description', N' 排序', 'USER', N'dbo', 'TABLE', N'SysFunc', 'COLUMN', N'OrderNum'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_addextendedproperty N'MS_Description', N' 父节点', 'USER', N'dbo', 'TABLE', N'SysFunc', 'COLUMN', N'ParentID'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_addextendedproperty N'MS_Description', N' 功能编号', 'USER', N'dbo', 'TABLE', N'SysFunc', 'COLUMN', N'SysFuncID'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_addextendedproperty N'MS_Description', N' URL', 'USER', N'dbo', 'TABLE', N'SysFunc', 'COLUMN', N'URL'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
EXEC sp_addextendedproperty N'MS_Description', N' 版本', 'USER', N'dbo', 'TABLE', N'SysFunc', 'COLUMN', N'Version'
GO
IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
IF EXISTS (SELECT * FROM #tmpErrors) ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT>0 BEGIN
PRINT 'The database update succeeded'
COMMIT TRANSACTION
END
ELSE PRINT 'The database update failed'
GO
DROP TABLE #tmpErrors
GO