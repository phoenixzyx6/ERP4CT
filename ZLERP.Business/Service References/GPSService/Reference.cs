//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.225
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace ZLERP.Business.GPSService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="GPSService.IEntryService")]
    public interface IEntryService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEntryService/ProjectAdd", ReplyAction="http://tempuri.org/IEntryService/ProjectAddResponse")]
        void ProjectAdd(string tokenKey, string contractNo, string address, string name, string buildUnit, string constructUnit, string linkMan, string linkTel, System.Nullable<double> latitude, System.Nullable<double> longtidue, System.Nullable<double> placeRange, int cpOrder, bool isShow);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEntryService/ProjectEdit", ReplyAction="http://tempuri.org/IEntryService/ProjectEditResponse")]
        void ProjectEdit(string tokenKey, string keyContractNo, string newContractNo, string address, string name, string buildUnit, string constructUnit, string linkMan, string linkTel, System.Nullable<double> latitude, System.Nullable<double> longtidue, System.Nullable<double> placeRange, int cpOrder, bool isShow);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEntryService/TaskTryGetInfo", ReplyAction="http://tempuri.org/IEntryService/TaskTryGetInfoResponse")]
        string TaskTryGetInfo(string tokenKey, string taskNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEntryService/TaskList", ReplyAction="http://tempuri.org/IEntryService/TaskListResponse")]
        string TaskList(string tokenKey, string contractNo, string customName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEntryService/TaskAdd", ReplyAction="http://tempuri.org/IEntryService/TaskAddResponse")]
        void TaskAdd(
                    string tokenKey, 
                    string taskNo, 
                    string contractNo, 
                    string customName, 
                    string LinkMan, 
                    string LinkTel, 
                    string ConstructUnit, 
                    string ConsPosType, 
                    string ConsPos, 
                    double PlanCube, 
                    bool IsConsign, 
                    string Consign, 
                    string TransportationType, 
                    string GradeName, 
                    string Slump, 
                    System.Nullable<System.DateTime> BeginTime, 
                    bool Completed, 
                    System.Nullable<System.DateTime> CompleteTime, 
                    string Remarks);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEntryService/TaskEdit", ReplyAction="http://tempuri.org/IEntryService/TaskEditResponse")]
        void TaskEdit(
                    string tokenKey, 
                    string keyTaskNo, 
                    string newtaskNo, 
                    string contractNo, 
                    string customName, 
                    string LinkMan, 
                    string LinkTel, 
                    string ConstructUnit, 
                    string ConsPosType, 
                    string ConsPos, 
                    double PlanCube, 
                    double ProvidedCube, 
                    bool IsConsign, 
                    string Consign, 
                    string TransportationType, 
                    string GradeName, 
                    string Slump, 
                    System.Nullable<System.DateTime> BeginTime, 
                    bool Completed, 
                    System.Nullable<System.DateTime> CompleteTime, 
                    string Remarks);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEntryService/TaskComplete", ReplyAction="http://tempuri.org/IEntryService/TaskCompleteResponse")]
        void TaskComplete(string tokenKey, string taskNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEntryService/TaskGetInfo", ReplyAction="http://tempuri.org/IEntryService/TaskGetInfoResponse")]
        string TaskGetInfo(string tokenKey, string taskNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEntryService/CarTaskTryGetInfo", ReplyAction="http://tempuri.org/IEntryService/CarTaskTryGetInfoResponse")]
        string CarTaskTryGetInfo(string tokenKey, string carTaskNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEntryService/CarTaskList", ReplyAction="http://tempuri.org/IEntryService/CarTaskListResponse")]
        string CarTaskList(string tokenKey, string taskNo, string carTaskNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEntryService/CarTaskAdd", ReplyAction="http://tempuri.org/IEntryService/CarTaskAddResponse")]
        void CarTaskAdd(string tokenKey, string carTaskNo, string taskNo, string carNum, string driverName, double cube, System.DateTime sendTime, System.Nullable<System.DateTime> backTime, string productLineName, string remarks);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEntryService/CarTaskGetInfo", ReplyAction="http://tempuri.org/IEntryService/CarTaskGetInfoResponse")]
        string CarTaskGetInfo(string tokenKey, string carTaskNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEntryService/Login", ReplyAction="http://tempuri.org/IEntryService/LoginResponse")]
        string Login(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEntryService/LoginWithKey", ReplyAction="http://tempuri.org/IEntryService/LoginWithKeyResponse")]
        void LoginWithKey(string userName, string password, string tokenKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEntryService/Logout", ReplyAction="http://tempuri.org/IEntryService/LogoutResponse")]
        void Logout(string tokenKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEntryService/CarAdd", ReplyAction="http://tempuri.org/IEntryService/CarAddResponse")]
        void CarAdd(string tokenKey, string carNum, string customNo, string terminalID, string sim, string owner, string idCard, string carType, System.Nullable<double> carWeight, System.Nullable<double> carCapacity, string underpan);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEntryService/CarEdit", ReplyAction="http://tempuri.org/IEntryService/CarEditResponse")]
        void CarEdit(string tokenKey, string keyCarNum, string newCarNum, string customNo, string terminalID, string sim, string owner, string idCard, string carType, System.Nullable<double> carWeight, System.Nullable<double> carCapacity, string underpan);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEntryService/CarGetDrivers", ReplyAction="http://tempuri.org/IEntryService/CarGetDriversResponse")]
        string CarGetDrivers(string tokenKey, string carNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEntryService/CarAddDriver", ReplyAction="http://tempuri.org/IEntryService/CarAddDriverResponse")]
        void CarAddDriver(string tokenKey, string carNum, string driverName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEntryService/CarDeleteDriver", ReplyAction="http://tempuri.org/IEntryService/CarDeleteDriverResponse")]
        void CarDeleteDriver(string tokenKey, string carNum, string driverName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEntryService/CarGetLastestGpsInfo", ReplyAction="http://tempuri.org/IEntryService/CarGetLastestGpsInfoResponse")]
        string CarGetLastestGpsInfo(string tokenKey, string carNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEntryService/CarGetInfo", ReplyAction="http://tempuri.org/IEntryService/CarGetInfoResponse")]
        string CarGetInfo(string tokenKey, string carNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEntryService/CarSearchGpsInfo", ReplyAction="http://tempuri.org/IEntryService/CarSearchGpsInfoResponse")]
        string CarSearchGpsInfo(string tokenKey, string carNum, System.DateTime beginTime, System.DateTime endTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEntryService/CarListLastestGpsInfo", ReplyAction="http://tempuri.org/IEntryService/CarListLastestGpsInfoResponse")]
        string CarListLastestGpsInfo(string tokenKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEntryService/CarList", ReplyAction="http://tempuri.org/IEntryService/CarListResponse")]
        string CarList(string tokenKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEntryService/CarTryGetInfo", ReplyAction="http://tempuri.org/IEntryService/CarTryGetInfoResponse")]
        string CarTryGetInfo(string tokenKey, string carNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEntryService/CarRun", ReplyAction="http://tempuri.org/IEntryService/CarRunResponse")]
        void CarRun(string tokenKey, string carNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEntryService/CarRepeal", ReplyAction="http://tempuri.org/IEntryService/CarRepealResponse")]
        void CarRepeal(string tokenKey, string carNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEntryService/CarTaskComplete", ReplyAction="http://tempuri.org/IEntryService/CarTaskCompleteResponse")]
        void CarTaskComplete(string tokenKey, string carNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEntryService/CarRest", ReplyAction="http://tempuri.org/IEntryService/CarRestResponse")]
        void CarRest(string tokenKey, string carNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEntryService/CarWaiting", ReplyAction="http://tempuri.org/IEntryService/CarWaitingResponse")]
        void CarWaiting(string tokenKey, string carNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEntryService/DriverTryGetInfo", ReplyAction="http://tempuri.org/IEntryService/DriverTryGetInfoResponse")]
        string DriverTryGetInfo(string tokenKey, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEntryService/DriverAdd", ReplyAction="http://tempuri.org/IEntryService/DriverAddResponse")]
        void DriverAdd(string tokenKey, string name, string tel, string cardNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEntryService/DriverEdit", ReplyAction="http://tempuri.org/IEntryService/DriverEditResponse")]
        void DriverEdit(string tokenKey, string keyName, string newName, string tel, string cardNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEntryService/DriverGetInfo", ReplyAction="http://tempuri.org/IEntryService/DriverGetInfoResponse")]
        string DriverGetInfo(string tokenKey, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEntryService/DriverGetCars", ReplyAction="http://tempuri.org/IEntryService/DriverGetCarsResponse")]
        string DriverGetCars(string tokenKey, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEntryService/DriverList", ReplyAction="http://tempuri.org/IEntryService/DriverListResponse")]
        string DriverList(string tokenKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEntryService/ProjectTryGetInfo", ReplyAction="http://tempuri.org/IEntryService/ProjectTryGetInfoResponse")]
        string ProjectTryGetInfo(string tokenKey, string contractNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEntryService/ProjectList", ReplyAction="http://tempuri.org/IEntryService/ProjectListResponse")]
        string ProjectList(string tokenKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEntryService/ProjectGetInfo", ReplyAction="http://tempuri.org/IEntryService/ProjectGetInfoResponse")]
        string ProjectGetInfo(string tokenKey, string contractNo);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEntryServiceChannel : ZLERP.Business.GPSService.IEntryService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EntryServiceClient : System.ServiceModel.ClientBase<ZLERP.Business.GPSService.IEntryService>, ZLERP.Business.GPSService.IEntryService {
        
        public EntryServiceClient() {
        }
        
        public EntryServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EntryServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EntryServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EntryServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void ProjectAdd(string tokenKey, string contractNo, string address, string name, string buildUnit, string constructUnit, string linkMan, string linkTel, System.Nullable<double> latitude, System.Nullable<double> longtidue, System.Nullable<double> placeRange, int cpOrder, bool isShow) {
            base.Channel.ProjectAdd(tokenKey, contractNo, address, name, buildUnit, constructUnit, linkMan, linkTel, latitude, longtidue, placeRange, cpOrder, isShow);
        }
        
        public void ProjectEdit(string tokenKey, string keyContractNo, string newContractNo, string address, string name, string buildUnit, string constructUnit, string linkMan, string linkTel, System.Nullable<double> latitude, System.Nullable<double> longtidue, System.Nullable<double> placeRange, int cpOrder, bool isShow) {
            base.Channel.ProjectEdit(tokenKey, keyContractNo, newContractNo, address, name, buildUnit, constructUnit, linkMan, linkTel, latitude, longtidue, placeRange, cpOrder, isShow);
        }
        
        public string TaskTryGetInfo(string tokenKey, string taskNo) {
            return base.Channel.TaskTryGetInfo(tokenKey, taskNo);
        }
        
        public string TaskList(string tokenKey, string contractNo, string customName) {
            return base.Channel.TaskList(tokenKey, contractNo, customName);
        }
        
        public void TaskAdd(
                    string tokenKey, 
                    string taskNo, 
                    string contractNo, 
                    string customName, 
                    string LinkMan, 
                    string LinkTel, 
                    string ConstructUnit, 
                    string ConsPosType, 
                    string ConsPos, 
                    double PlanCube, 
                    bool IsConsign, 
                    string Consign, 
                    string TransportationType, 
                    string GradeName, 
                    string Slump, 
                    System.Nullable<System.DateTime> BeginTime, 
                    bool Completed, 
                    System.Nullable<System.DateTime> CompleteTime, 
                    string Remarks) {
            base.Channel.TaskAdd(tokenKey, taskNo, contractNo, customName, LinkMan, LinkTel, ConstructUnit, ConsPosType, ConsPos, PlanCube, IsConsign, Consign, TransportationType, GradeName, Slump, BeginTime, Completed, CompleteTime, Remarks);
        }
        
        public void TaskEdit(
                    string tokenKey, 
                    string keyTaskNo, 
                    string newtaskNo, 
                    string contractNo, 
                    string customName, 
                    string LinkMan, 
                    string LinkTel, 
                    string ConstructUnit, 
                    string ConsPosType, 
                    string ConsPos, 
                    double PlanCube, 
                    double ProvidedCube, 
                    bool IsConsign, 
                    string Consign, 
                    string TransportationType, 
                    string GradeName, 
                    string Slump, 
                    System.Nullable<System.DateTime> BeginTime, 
                    bool Completed, 
                    System.Nullable<System.DateTime> CompleteTime, 
                    string Remarks) {
            base.Channel.TaskEdit(tokenKey, keyTaskNo, newtaskNo, contractNo, customName, LinkMan, LinkTel, ConstructUnit, ConsPosType, ConsPos, PlanCube, ProvidedCube, IsConsign, Consign, TransportationType, GradeName, Slump, BeginTime, Completed, CompleteTime, Remarks);
        }
        
        public void TaskComplete(string tokenKey, string taskNo) {
            base.Channel.TaskComplete(tokenKey, taskNo);
        }
        
        public string TaskGetInfo(string tokenKey, string taskNo) {
            return base.Channel.TaskGetInfo(tokenKey, taskNo);
        }
        
        public string CarTaskTryGetInfo(string tokenKey, string carTaskNo) {
            return base.Channel.CarTaskTryGetInfo(tokenKey, carTaskNo);
        }
        
        public string CarTaskList(string tokenKey, string taskNo, string carTaskNo) {
            return base.Channel.CarTaskList(tokenKey, taskNo, carTaskNo);
        }
        
        public void CarTaskAdd(string tokenKey, string carTaskNo, string taskNo, string carNum, string driverName, double cube, System.DateTime sendTime, System.Nullable<System.DateTime> backTime, string productLineName, string remarks) {
            base.Channel.CarTaskAdd(tokenKey, carTaskNo, taskNo, carNum, driverName, cube, sendTime, backTime, productLineName, remarks);
        }
        
        public string CarTaskGetInfo(string tokenKey, string carTaskNo) {
            return base.Channel.CarTaskGetInfo(tokenKey, carTaskNo);
        }
        
        public string Login(string userName, string password) {
            return base.Channel.Login(userName, password);
        }
        
        public void LoginWithKey(string userName, string password, string tokenKey) {
            base.Channel.LoginWithKey(userName, password, tokenKey);
        }
        
        public void Logout(string tokenKey) {
            base.Channel.Logout(tokenKey);
        }
        
        public void CarAdd(string tokenKey, string carNum, string customNo, string terminalID, string sim, string owner, string idCard, string carType, System.Nullable<double> carWeight, System.Nullable<double> carCapacity, string underpan) {
            base.Channel.CarAdd(tokenKey, carNum, customNo, terminalID, sim, owner, idCard, carType, carWeight, carCapacity, underpan);
        }
        
        public void CarEdit(string tokenKey, string keyCarNum, string newCarNum, string customNo, string terminalID, string sim, string owner, string idCard, string carType, System.Nullable<double> carWeight, System.Nullable<double> carCapacity, string underpan) {
            base.Channel.CarEdit(tokenKey, keyCarNum, newCarNum, customNo, terminalID, sim, owner, idCard, carType, carWeight, carCapacity, underpan);
        }
        
        public string CarGetDrivers(string tokenKey, string carNum) {
            return base.Channel.CarGetDrivers(tokenKey, carNum);
        }
        
        public void CarAddDriver(string tokenKey, string carNum, string driverName) {
            base.Channel.CarAddDriver(tokenKey, carNum, driverName);
        }
        
        public void CarDeleteDriver(string tokenKey, string carNum, string driverName) {
            base.Channel.CarDeleteDriver(tokenKey, carNum, driverName);
        }
        
        public string CarGetLastestGpsInfo(string tokenKey, string carNum) {
            return base.Channel.CarGetLastestGpsInfo(tokenKey, carNum);
        }
        
        public string CarGetInfo(string tokenKey, string carNum) {
            return base.Channel.CarGetInfo(tokenKey, carNum);
        }
        
        public string CarSearchGpsInfo(string tokenKey, string carNum, System.DateTime beginTime, System.DateTime endTime) {
            return base.Channel.CarSearchGpsInfo(tokenKey, carNum, beginTime, endTime);
        }
        
        public string CarListLastestGpsInfo(string tokenKey) {
            return base.Channel.CarListLastestGpsInfo(tokenKey);
        }
        
        public string CarList(string tokenKey) {
            return base.Channel.CarList(tokenKey);
        }
        
        public string CarTryGetInfo(string tokenKey, string carNum) {
            return base.Channel.CarTryGetInfo(tokenKey, carNum);
        }
        
        public void CarRun(string tokenKey, string carNum) {
            base.Channel.CarRun(tokenKey, carNum);
        }
        
        public void CarRepeal(string tokenKey, string carNum) {
            base.Channel.CarRepeal(tokenKey, carNum);
        }
        
        public void CarTaskComplete(string tokenKey, string carNum) {
            base.Channel.CarTaskComplete(tokenKey, carNum);
        }
        
        public void CarRest(string tokenKey, string carNum) {
            base.Channel.CarRest(tokenKey, carNum);
        }
        
        public void CarWaiting(string tokenKey, string carNum) {
            base.Channel.CarWaiting(tokenKey, carNum);
        }
        
        public string DriverTryGetInfo(string tokenKey, string name) {
            return base.Channel.DriverTryGetInfo(tokenKey, name);
        }
        
        public void DriverAdd(string tokenKey, string name, string tel, string cardNo) {
            base.Channel.DriverAdd(tokenKey, name, tel, cardNo);
        }
        
        public void DriverEdit(string tokenKey, string keyName, string newName, string tel, string cardNo) {
            base.Channel.DriverEdit(tokenKey, keyName, newName, tel, cardNo);
        }
        
        public string DriverGetInfo(string tokenKey, string name) {
            return base.Channel.DriverGetInfo(tokenKey, name);
        }
        
        public string DriverGetCars(string tokenKey, string name) {
            return base.Channel.DriverGetCars(tokenKey, name);
        }
        
        public string DriverList(string tokenKey) {
            return base.Channel.DriverList(tokenKey);
        }
        
        public string ProjectTryGetInfo(string tokenKey, string contractNo) {
            return base.Channel.ProjectTryGetInfo(tokenKey, contractNo);
        }
        
        public string ProjectList(string tokenKey) {
            return base.Channel.ProjectList(tokenKey);
        }
        
        public string ProjectGetInfo(string tokenKey, string contractNo) {
            return base.Channel.ProjectGetInfo(tokenKey, contractNo);
        }
    }
}
